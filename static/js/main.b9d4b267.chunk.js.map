{"version":3,"sources":["components/PhotoCard/PhotoCard.module.css","pages/GetAlbumByID/GetAlbumByID.module.css","pages/allUsersPage/headerAllUsersBlock/headerAllUsersPage.module.css","pages/userInformationPage/InformationBlock/InformationBlock.module.css","pages/userInformationPage/AlbumsBlock/AlbumsBlock.module.css","components/Navbar/NavbarRenderUserBlock/NavbarRenderUserBlock.module.css","pages/allPhotosPage/allPhotosPage.module.css","components/PanelDialogs/PanelDialogs.module.css","components/Search/Search.module.css","components/CreateList/CreateList.module.css","components/Navbar/Navbar.module.css","components/PhotoModalWindow/PhotoModalWindow.module.css","pages/allUsersPage/mainAllUsersBlock/mainAllUsersBlock.module.css","components/PaginationBlock/PaginationBlock.module.css","components/PaginationBlock/AmountPagination/AmountPagination.module.css","components/PaginationBlock/NumberBlockPagination/NumberBlockPagination.module.css","pages/allUsersPage/allUsersPage.module.css","pages/userInformationPage/userInformationPage.module.css","pages/userInformationPage/AvatarBlock/AvatarBlock.module.css","pages/userInformationPage/NavigationBlock/NavigationBlock.module.css","pages/GetLoginPage/GetLoginPage.module.css","pages/GetLogUpPage/GetLogUpPage.module.css","pages/GetStartPage/GetStartPage.module.css","components/Navbar/NavbarRenderNavigation/NavbarRenderNavigation.module.css","pages/pageFriends/pageFriends.module.css","pages/allAlbumsPage/allAlbumsPage.module.css","App.module.css","pages/DialogsPage/DialogsPage.module.css","Redux/store/pagination/pagination.actions.ts","components/Search/Search.tsx","pages/allUsersPage/headerAllUsersBlock/headerAllUsersBlock.tsx","services/service-subscribe.ts","services/service-friend.ts","services/service-user.ts","components/UserCard/UserCard.tsx","shared/constants/user-from-view-mode.enum.ts","Redux/store/user/user.actions.ts","pages/allUsersPage/mainAllUsersBlock/mainAllUsersBlock.tsx","components/PaginationBlock/AmountPagination/AmountPagination.tsx","components/PaginationBlock/NumberBlockPagination/NumberBlockPagination.tsx","components/PaginationBlock/PaginationBlock.tsx","pages/allUsersPage/allUsersPage.tsx","pages/userInformationPage/AvatarBlock/AvatarBlock.tsx","pages/userInformationPage/InformationBlock/InformationBlock.tsx","pages/userInformationPage/NavigationBlock/NavigationBlock.tsx","components/PhotoCard/PhotoCard.tsx","components/CreateList/CreateList.tsx","Redux/store/albums/albums.action.ts","pages/userInformationPage/AlbumsBlock/AlbumsBlock.tsx","Redux/store/avatar/avatar.actions.ts","pages/userInformationPage/userInformationPage.tsx","components/FormDataUsers/FormDataUsersRender/FormDataUsersUseStyles.tsx","components/FormDataUsers/FormDataUsersRender/FormDataUsersRender.tsx","components/FormDataUsers/FormDataUsers.tsx","pages/GetLoginPage/GetLoginPage.tsx","pages/GetLogUpPage/GetLogUpPage.tsx","pages/GetStartPage/GetStartPage.tsx","components/Navbar/NavbarRenderUserBlock/NavbarRenderUserBlock.tsx","components/Navbar/NavbarRenderNavigation/NavbarRenderNavigation.tsx","components/Navbar/Navbar.tsx","PrivateRoutes/PrivateRouteForUsers.tsx","PrivateRoutes/PrivateRouteForAdmins.tsx","components/PhotoModalWindow/PhotoModalWindow.tsx","pages/GetAlbumByID/GetAlbumByID.tsx","pages/pageFriends/pageFriends.tsx","pages/allAlbumsPage/allAlbumsPage.tsx","pages/allPhotosPage/allPhotosPage.tsx","pages/NotFoundPage/NotFound.tsx","pages/AdminPages/AdminAllUser/AdminAllUser.tsx","pages/UserEditInformationPage/UserEditInformationPage.tsx","Redux/store/dialogs/dialogs.actions.ts","Redux/store/dialogs/dialogs.reducer.ts","Redux/store/pagination/pagination.reducer.ts","Redux/store/loading/loading.actions.ts","Redux/store/loading/loading.reducer.ts","Redux/store/albums/albums.reducer.ts","Redux/store/user/user.reducer.ts","Redux/index.ts","components/WindowDialog/WindowDialog.tsx","components/PanelDialogs/PanelDialogs.tsx","pages/DialogsPage/DialogsPage.tsx","Redux/store/avatar/avatar.sagas.ts","services/service-dialog.ts","services/service-message.ts","Redux/store/dialogs/dialogs.sagas.ts","services/service-album.ts","services/service-photo.ts","Redux/store/albums/albums.sagas.ts","Redux/store/user/user.sagas.ts","App.tsx","serviceWorker.ts","index.tsx","components/FormDataUsers/FormDataUsersRender/FormDataUsersRender.module.css","components/WindowDialog/WindowDialog.module.css","components/UserCard/UserCard.module.css"],"names":["module","exports","ActionTypes","setPrevCheckBoxStateAction","checkBoxState","type","payload","setValuesForPaginationAction","pagination","connect","dispatch","useState","stateValue","setStateValue","handlerInputSearchBox","e","searchStringState","target","value","length","className","SearchCSS","all_users__header_block__search_box","InputBase","id","all_users__header_block__search_box__input","onInput","placeholder","state","checkBox","handleClickFriendCheckBox","a","headerAllUsersPageCSS","container__all_users__header","container__all_users__header__checkboxBlock","Checkbox","checked","onClick","container__all_users__header__sort_checkbox","axios","require","ServiceSubscriptions","interceptor","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","getStatusUsersSubscribeByID","idLogInUser","get","response","data","getAllObservables","addSubscribe","IdObserversUser","subscribe","requestSubscriberId","responseSubscriberId","post","deleteSubscribe","delete","deleteSubscribeAfterAddFriend","ServiceFriends","getLogInUserAllFriends","addFriend","IdRequestUser","requestFriendId","responseFriendId","removeFriend","IdSecondUser","getArrayFriendsByIdUser","Service","getAllUsers","console","log","getFilteredUsers","valueSearchBox","editUser","user","put","removeHandler","getUserByID","getUserByToken","getTokenForLogin","getTokenForRegistration","logOutAllDevices","getListPetsByUserID","setImgUser","avatar","formData","FormData","append","fileName","getListAlbumsByUserID","getListPhotosByUserID","getListAlbumsWithPhotosByUserID","getUserWithSubscriptionsById","userId","getUserAfterPaginationAndSearchAndFilter","body","UserFormViewModes","UserFormViewButtons","LoadingState","LoadingStateForNavbar","userOwnerCard","getLogInUserAllSubscriptionsAndObserver","history","useHistory","useEffect","subscriptions","handlerClickSubscribe","_id","handlerClickUnSubscribe","handlerClickAddFriend","handlerClickRemoveFriend","UserCardCSS","container__all_users__card_user","role","container__all_users__card_user__delete","src","alt","push","all_users__card_user__login","login","all_users__card_user__friends","all_users__card_user__role","all_users__card_user__button","getUserSignUp","setUserLoginInStore","getUserOwnerThisPage","getAllFriendsByUserId","setAllUsersInStore","arrayUsers","getFailureAction","allUsers","load","setLoad","MainAllUsersBlockPageCSS","container__all_users__cards","map","key","getUsersAfterPaginationAndSearchAndFilter","limitRender","limitUsersForRender","numberPage","AmountPaginationCSS","All_Users__Pagination_Block__Select_block","InputLabel","htmlFor","Select","native","onChange","newLimitRender","page","undefined","countUsers","Math","ceil","handleChangeSelect","NumberBlockPaginationCSS","All_Users__Pagination_Block__Button_block","Button","variant","component","disabled","countPage","prevChecked","prevCheckBoxState","searchString","timerId","setTimerId","clearTimeout","clearInterval","setTimeout","PaginationBlockCSS","All_Users__Pagination_Block","AllUsersPage","allUsersPageCSS","container__all_users","userOwnerThisPage","homePageStatus","avatarForFront","handleChangeAvatar","handleSubmit","action","AvatarBlockCSS","profile__change_avatar__form","InformationBlockCSS","user_profile__user_information","Box","user_profile__user_information__block_information","List","aria-label","ListItem","button","ListItemText","primary","secondary","firstName","lastName","email","phone","user_profile__user_information__block_button","to","NavigationBlockCSS","user_information__navigation_block","ListItemAvatar","Avatar","Divider","urlItem","idItem","editHandler","idChosenAlbum","launchTogglePhotoModalWindow","ownerUser","Card","PhotoCardCSS","photoAlbum__photoCard_block__card","CardMedia","image","title","photoAlbum__photoCard_block__card__photo","CardActions","photoAlbum__photoCard_block__card__actions","size","color","CreateList","arr","createListFunction","CreateListCSS","user_profile__create_list__container","item","user_profile__card_container","photos","url","getListAlbumsWithPhotosByUserIDAction","getListPhotosByAlbumIdAction","albumId","removePhotoFromCurrentAlbumAction","photoId","albumsForUserOwnerPage","albumsState","getList","useCallback","addChangeHandler","arrayFiles","files","arrayPhotos","AlbumsBlockCSS","main__user_profile__albums_block","removeAlbumAction","albums_block__button","label__input","multiple","getAvatarAction","userLogin","match","setAvatarForFront","avatarForBack","setAvatarForBack","setHomePageStatus","idUserOwnerPage","params","render","preventDefault","userInformationPageCSS","container__user_information_page","display","p","m","bgcolor","URL","createObjectURL","useStyles","makeStyles","theme","createStyles","root","margin","spacing","width","FormDataUsersRender","namePage","nameButton","classes","FormDataUsersRenderCSS","form_logIn_container","name","required","label","TextField","form_logIn__fields_container","autoComplete","Edit","SingUp","submitHandler","initialValues","password","validationSchema","Yup","max","onSubmit","values","Typography","GetLoginPageCSS","main__log_in__header","getUserLogin","LogIn","logUpHandler","GetLogUpPageCSS","main__sign_up__header","GetStartPage","GetStartPageCSS","main__container__start_page__header","NavbarRenderUserBlock","NavbarRenderUserBlockCSS","navbar__user_block__container","navbar__user_block__name","navbar__user_block__avatar","NavbarRenderNavigation","handlerLogOut","Toolbar","NavbarRenderNavigationCSS","navbar__navigation_block__container","loadingState","loadingStateForNavbar","getUserAfterLogInAndRefresh","AppBar","position","NavbarCSS","navbar_container","CircularProgress","navbar_container_spinner","logOutUserForAllDevices","defaultPrivateRouteProps","isAuthenticated","authenticationPath","PrivateRoute","props","redirectPath","pathname","defaultPrivateRouteForAdminsProps","isAdmin","restrictedAdminPath","PrivateRouteForAdmins","PhotoModalWindow","arrayPhotosChosenAlbum","currentUrlPhotoForLoop","currentIndex","findIndex","photo","handleOnDragStart","PhotoModalWindowCSS","user_profile__chosen_album__photo_loop","startIndex","mouseTrackingEnabled","onDragStart","user_profile__chosen_album__photo_loop__img","common","userOwnerThisPageForSagas","currentAlbum","loadingStatePhotosInCurrentAlbum","statusPhotoModalWindow","setStatusPhotoModalWindow","setCurrentUrlPhotoForLoop","userOwnerThisPageId","GetAlbumByIDCSS","main__user_profile__album_block","photos__container_drag_and_drop","photos__container_drag_and_drop__label","allFriends","PageFriendsCSS","AllAlbumsPage","AllAlbumsPageCSS","AllAlbumPage__container","allPhotosForThisUser","thisUserId","AllPhotosPageCSS","AllPhotoPage__container","user_profile__photos_list__container","user_profile__photo_container","NotFound","AdminAllUsers","UserEditInformation","addNewDialog","dialog","initialState","currentDialog","allDialogs","messagesForCurrentDialog","setLoadingState","setLoadingStatePhotosInCurrentAlbumAction","combineReducers","concat","socket","openSocket","reconnection","valueInput","setValueInput","getMessagesFromBD","currentDialogId","addMessageState","message","on","joinInRoom","emit","removeAllListeners","handlerClickButton","idDialog","authorLogin","authorId","sendMessage","WindowDialogCSS","dialogs_page__dialog_page__window_dialog","dialogs_page__dialog_page__window_dialog__list_message","Fragment","dialogs_page__message__left_side","dialogs_page__message__right_side","dialogs_page__add_dialogs__block_button_input","dialogs_page__add_dialogs_input","handlerChangeInput","dialogs_page__add_dialogs_button","listDialogs","Loaded","stateLoading","flagModalWindow","setFlagModalWindow","getListDialogs","thisUserLogin","dialogName","members","PanelDialogsCSS","dialogs_page__rules_dialogs","dialogs_page__rules_dialogs__list_dialogs","setCurrentDialogInStore","secondUser","sendDialog","DialogsPage","DialogsPageCSS","dialogs_page","setAvatar","avatarSaga","actions","imgName","newUser","Object","assign","takeEvery","ServiceDialog","getAllDialogs","getAllDialogsById","addDialog","ServiceMessage","getAllMessagesByIdDialog","setAllDialogsByUserIdInStore","setInStoreAllMessagesCurrentDialogSaga","dialogSaga","listForRender","list","ServiceAlbums","getAllAlbums","addAlbum","album","editAlbum","getListPhotosByAlbumID","ServicePhotos","getPhotosById","i","fileNames","addPhoto","idUser","arrayUrl","addPhotoIntoAlbum","idAlbum","arrPhotoUrl","ownerAlbum","addPhotosIntoFsAndAlbum","setListAlbumsWithPhotosInStore","removeAlbum","addAlbumByUserId","setListPhotosForCurrentAlbum","addPhotosInCurrentAlbum","removePhotoFromCurrentAlbum","setListPhotosForUser","albumsSaga","listAlbums","Loading","arrayAlbums","albums","Error","setUserLoginInStoreSaga","setUserSignUpInStoreSaga","setUserRefreshInStoreSaga","setUserOwnerThisPageInStoreSaga","setAllUsersSaga","setAllUsersAfterPaginationSaga","getAllFriendsByUserIdSaga","setUserLogOutInStoreSaga","userSaga","setItem","userLog","call","removeItem","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","composeWithDevTools","trace","traceLimit","applyMiddleware","run","App","AppCSS","wrapper","path","exact","GetLoginPage","GetLogUpPage","UserInformationPage","PageFriends","GetAlbumByID","AllPhotosPage","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b9d4b267.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoAlbum__photoCard_block__card\":\"PhotoCard_photoAlbum__photoCard_block__card__1UAha\",\"photoAlbum__photoCard_block__card__photo\":\"PhotoCard_photoAlbum__photoCard_block__card__photo__2acQC\",\"photoAlbum__photoCard_block__card__actions\":\"PhotoCard_photoAlbum__photoCard_block__card__actions__D_rWh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main__user_profile__album_block\":\"GetAlbumByID_main__user_profile__album_block__3WGX-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__all_users__header\":\"headerAllUsersPage_container__all_users__header__3Ksm2\",\"container__all_users__header__checkboxBlock\":\"headerAllUsersPage_container__all_users__header__checkboxBlock__10hd8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_profile__user_information\":\"InformationBlock_user_profile__user_information__2xFcZ\",\"user_profile__user_information__block_information\":\"InformationBlock_user_profile__user_information__block_information__BzLBs\",\"user_profile__user_information__block_button\":\"InformationBlock_user_profile__user_information__block_button__2jtyd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main__user_profile__albums_block\":\"AlbumsBlock_main__user_profile__albums_block__3FyAU\",\"albums_block__button\":\"AlbumsBlock_albums_block__button__OhstE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar__user_block__container\":\"NavbarRenderUserBlock_navbar__user_block__container__UJmJW\",\"navbar__user_block__avatar\":\"NavbarRenderUserBlock_navbar__user_block__avatar__26i8f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AllPhotoPage__container\":\"allPhotosPage_AllPhotoPage__container__2SZqi\",\"user_profile__photos_list__container\":\"allPhotosPage_user_profile__photos_list__container__1H7Uk\",\"user_profile__photo_container\":\"allPhotosPage_user_profile__photo_container__3HYek\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_page__rules_dialogs\":\"PanelDialogs_dialogs_page__rules_dialogs__1Vn5z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all_users__header_block__search_box\":\"Search_all_users__header_block__search_box__FmYvP\",\"all_users__header_block__search_box__input\":\"Search_all_users__header_block__search_box__input__W4lE7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_profile__create_list__container\":\"CreateList_user_profile__create_list__container__3qWnu\",\"user_profile__card_container\":\"CreateList_user_profile__card_container__171A0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar_container\":\"Navbar_navbar_container__2gKTd\",\"navbar_container_spinner\":\"Navbar_navbar_container_spinner__17hv6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_profile__chosen_album__photo_loop\":\"PhotoModalWindow_user_profile__chosen_album__photo_loop__lln7y\",\"user_profile__chosen_album__photo_loop__img\":\"PhotoModalWindow_user_profile__chosen_album__photo_loop__img__3rQxj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__all_users__cards\":\"mainAllUsersBlock_container__all_users__cards__2iBpH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"All_Users__Pagination_Block\":\"PaginationBlock_All_Users__Pagination_Block__epzUG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"All_Users__Pagination_Block__Select_block\":\"AmountPagination_All_Users__Pagination_Block__Select_block__1S9YR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"All_Users__Pagination_Block__Button_block\":\"NumberBlockPagination_All_Users__Pagination_Block__Button_block__Mokw3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__all_users\":\"allUsersPage_container__all_users__3icT1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__user_information_page\":\"userInformationPage_container__user_information_page__3-ykp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__change_avatar__form\":\"AvatarBlock_profile__change_avatar__form__2-7J7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_information__navigation_block\":\"NavigationBlock_user_information__navigation_block__10KME\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main__log_in__header\":\"GetLoginPage_main__log_in__header__1ncqp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main__sign_up__header\":\"GetLogUpPage_main__sign_up__header__3psF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main__container__start_page__header\":\"GetStartPage_main__container__start_page__header__3QsCX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar__navigation_block__container\":\"NavbarRenderNavigation_navbar__navigation_block__container__a2EcG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__all_users__cards\":\"pageFriends_container__all_users__cards__3zkq9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AllAlbumPage__container\":\"allAlbumsPage_AllAlbumPage__container__1rlcS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__1JXlg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_page\":\"DialogsPage_dialogs_page__U-vLH\"};","import { Action } from \"../../actionsInterface/action.interface\"\r\nimport { Pagination } from \"../../entitiesInterface/pagination.interface\"\r\n// import { UserLogOut } from \"../../entitiesInterface/userLogOut.interface\"\r\n\r\nexport const ActionTypes = {\r\n  // SearchString\r\n  SET_INITIAL_SEARCH_STRING_STATE:\r\n    \"[pagination] set initial search string state\",\r\n  SET_CURRENT_SEARCH_STRING_STATE:\r\n    \"[pagination] set current search string state\",\r\n\r\n  //CheckBox\r\n  SET_CHECK_BOX_STATE: \"[pagination] set check box state\",\r\n  CHANGE_CHECK_BOX_STATE: \"[pagination] change check box state\",\r\n  SET_PREV_CHECK_BOX_STATE: \"[pagination] set prev check box state\",\r\n\r\n  // oldActions\r\n  PAGINATION_SET_VALUES:\r\n    \"[setValuesForPaginationAction] set values for pagination action\",\r\n  PAGINATION_SET_NUMBER_PAGE: \"[setNumberPage] set number page\",\r\n  PAGINATION_SET_LIMIT_USERS_FOR_RENDER:\r\n    \"[setLimitUsersForRender] set limit users for render\",\r\n  PAGINATION_SET_INITIAL_VALUE:\r\n    \"[setInitialValueForPagination] set initial value for pagination\",\r\n}\r\n\r\n// SearchString\r\nexport const setInitialSearchStringStateAction = (): Action<\"\"> => ({\r\n  type: ActionTypes.SET_INITIAL_SEARCH_STRING_STATE,\r\n})\r\n\r\nexport const setCurrentSearchStringState = (\r\n  searchStringState: String\r\n): Action<String> => ({\r\n  type: ActionTypes.SET_CURRENT_SEARCH_STRING_STATE,\r\n  payload: searchStringState,\r\n})\r\n\r\n//CheckBox\r\nexport const setCheckBoxStateAction = (\r\n  checkBoxState: boolean\r\n): Action<boolean> => ({\r\n  type: ActionTypes.SET_CHECK_BOX_STATE,\r\n  payload: checkBoxState,\r\n})\r\n\r\nexport const changeCheckBoxStateAction = (): Action<boolean> => ({\r\n  type: ActionTypes.CHANGE_CHECK_BOX_STATE,\r\n})\r\n\r\nexport const setPrevCheckBoxStateAction = (\r\n  checkBoxState: boolean\r\n): Action<boolean> => ({\r\n  type: ActionTypes.SET_PREV_CHECK_BOX_STATE,\r\n  payload: checkBoxState,\r\n})\r\n\r\n// oldActions\r\nexport const setValuesForPaginationAction = (\r\n  pagination: Pagination\r\n): Action<Pagination> => ({\r\n  type: ActionTypes.PAGINATION_SET_VALUES,\r\n  payload: pagination,\r\n})\r\n\r\n// export const setNumberPageAction = (\r\n//   pagination: Pagination\r\n// ): Action<Pagination> => ({\r\n//   type: ActionTypes.PAGINATION_SET_NUMBER_PAGE,\r\n//   payload: pagination,\r\n// })\r\n\r\n// export const setLimitUsersForRenderAction = (\r\n//   pagination: Pagination\r\n// ): Action<Pagination> => ({\r\n//   type: ActionTypes.PAGINATION_SET_LIMIT_USERS_FOR_RENDER,\r\n//   payload: pagination,\r\n// })\r\n\r\n// export const setInitialValueForPaginationAction = (): Action<Pagination> => ({\r\n//   type: ActionTypes.PAGINATION_SET_INITIAL_VALUE,\r\n// })\r\n","import React, { useState } from \"react\"\r\nimport InputBase from \"@material-ui/core/InputBase\"\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\nimport SearchCSS from \"./Search.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  setInitialSearchStringStateAction,\r\n  setCurrentSearchStringState,\r\n} from \"../../Redux/store/pagination/pagination.actions\"\r\n\r\ntype SearchProps = {\r\n  dispatch: any,\r\n}\r\n\r\nconst Search: React.FunctionComponent<SearchProps> = ({ dispatch }) => {\r\n  const [stateValue, setStateValue] = useState(\"\")\r\n  const handlerInputSearchBox = (e: any) => {\r\n    setStateValue(e.target.value)\r\n    if (e.target.value.length > 2)\r\n      dispatch(setCurrentSearchStringState(e.target.value))\r\n    else dispatch(setInitialSearchStringStateAction())\r\n  }\r\n\r\n  return (\r\n    <div className={SearchCSS.all_users__header_block__search_box}>\r\n      <SearchIcon />\r\n      <InputBase\r\n        id=\"InputBase\"\r\n        className={SearchCSS.all_users__header_block__search_box__input}\r\n        value={stateValue}\r\n        onInput={(e) => handlerInputSearchBox(e)}\r\n        placeholder=\"Search…\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\n// const mapStateToProps = (state: any) => ({\r\n//   searchStringState: state.pagination.searchString,\r\n// })\r\n\r\nexport default connect()(Search)\r\n","import React from \"react\"\r\nimport headerAllUsersPageCSS from \"./headerAllUsersPage.module.css\"\r\nimport Search from \"../../../components/Search/Search\"\r\nimport Checkbox from \"@material-ui/core/Checkbox\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  changeCheckBoxStateAction,\r\n  setPrevCheckBoxStateAction\r\n} from \"../../../Redux/store/pagination/pagination.actions\"\r\n\r\ntype HeaderAllUsersBlockProps = {\r\n  checkBoxState: boolean\r\n  dispatch: any\r\n}\r\n\r\nconst HeaderAllUsersBlock: React.FunctionComponent<HeaderAllUsersBlockProps> = ({\r\n  checkBoxState,\r\n  dispatch\r\n}) => {\r\n  const handleClickFriendCheckBox = async () => {\r\n    dispatch(setPrevCheckBoxStateAction(checkBoxState))\r\n    dispatch(changeCheckBoxStateAction())\r\n  }\r\n\r\n  return (\r\n    <div className={headerAllUsersPageCSS.container__all_users__header}>\r\n      <Search />\r\n      <h2>Make friends</h2>\r\n      <div\r\n        className={\r\n          headerAllUsersPageCSS.container__all_users__header__checkboxBlock\r\n        }\r\n      >\r\n        <p>Filter</p>\r\n        <Checkbox\r\n          checked={checkBoxState}\r\n          onClick={() => handleClickFriendCheckBox()}\r\n          className={\r\n            headerAllUsersPageCSS.container__all_users__header__sort_checkbox\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  checkBoxState: state.pagination.checkBox.checkBoxState\r\n})\r\n\r\nexport default connect(mapStateToProps)(HeaderAllUsersBlock)\r\n","const axios = require(\"axios\")\r\n\r\nexport default class ServiceSubscriptions {\r\n  static interceptor = axios.interceptors.request.use(\r\n    function (config: any) {\r\n      const token = localStorage.getItem(\"token\")\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`\r\n      }\r\n      return config\r\n    },\r\n    function (error: string) {\r\n      return Promise.reject(error)\r\n    }\r\n  )\r\n\r\n  static getStatusUsersSubscribeByID = async (idLogInUser: string) => {\r\n    const response = await axios.get(\r\n      `http://localhost:8080/subscriptions/getStatusUsersSubscribeByID/${idLogInUser}`\r\n    )\r\n    return response.data\r\n  }\r\n\r\n  static getAllObservables = async (idLogInUser: string) => {\r\n    const response = await axios.get(\r\n      `http://localhost:8080/subscriptions/withObservables/${idLogInUser}`\r\n    )\r\n    return response.data\r\n  }\r\n\r\n  static addSubscribe = async (idLogInUser: any, IdObserversUser: string) => {\r\n    const subscribe = {\r\n      requestSubscriberId: idLogInUser,\r\n      responseSubscriberId: IdObserversUser,\r\n    }\r\n    await axios.post(`http://localhost:8080/subscriptions/add`, subscribe)\r\n  }\r\n\r\n  static deleteSubscribe = async (\r\n    idLogInUser: any,\r\n    IdObserversUser: string\r\n  ) => {\r\n    await axios.delete(\r\n      `http://localhost:8080/subscriptions/deleteSubscribe/?idLogInUser=${idLogInUser}&IdObserversUser=${IdObserversUser}`\r\n    )\r\n  }\r\n\r\n  static deleteSubscribeAfterAddFriend = async (\r\n    IdObserversUser: string,\r\n    idLogInUser: any\r\n  ) => {\r\n    await axios.delete(\r\n      `http://localhost:8080/subscriptions/deleteSubscribeAfterAddFriend/?IdObserversUser=${IdObserversUser}&idLogInUser=${idLogInUser}`\r\n    )\r\n  }\r\n}\r\n","const axios = require(\"axios\")\r\n\r\nexport default class ServiceFriends {\r\n  static interceptor = axios.interceptors.request.use(\r\n    function (config: any) {\r\n      const token = localStorage.getItem(\"token\")\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`\r\n      }\r\n      return config\r\n    },\r\n    function (error: string) {\r\n      return Promise.reject(error)\r\n    }\r\n  )\r\n\r\n  static getLogInUserAllFriends = async (idLogInUser: string) => {\r\n    const response = await axios.get(\r\n      `http://localhost:8080/friends/logInUserAllFriends/?id=${idLogInUser}`\r\n    )\r\n    return response.data\r\n  }\r\n\r\n  static addFriend = async (idLogInUser: string, IdRequestUser: string) => {\r\n    const subscribe = {\r\n      requestFriendId: idLogInUser,\r\n      responseFriendId: IdRequestUser,\r\n    }\r\n    await axios.post(`http://localhost:8080/friends/add`, subscribe)\r\n  }\r\n\r\n  static removeFriend = async (idLogInUser: string, IdSecondUser: string) => {\r\n    await axios.delete(\r\n      `http://localhost:8080/friends/removeFriend/?idLogInUser=${idLogInUser}&IdSecondUser=${IdSecondUser}`\r\n    )\r\n  }\r\n\r\n  static getArrayFriendsByIdUser = async (idLogInUser: string) => {\r\n    const response = await axios.get(\r\n      `http://localhost:8080/friends/getArrayFriendsByIdUser/?idLogInUser=${idLogInUser}`\r\n    )\r\n    // console.log(response.data)\r\n    return response.data\r\n  }\r\n}\r\n","// import host from './service-hosting'\nconst axios = require(\"axios\")\n\nexport default class Service {\n  static interceptor = axios.interceptors.request.use(\n    function (config: any) {\n      const token = localStorage.getItem(\"token\")\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`\n      }\n      return config\n    },\n    function (error: string) {\n      return Promise.reject(error)\n    }\n  )\n\n  static getAllUsers = async () => {\n    try {\n      const request = await axios.get(\"http://localhost:8080/users/\")\n      return request.data\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  static getFilteredUsers = async (valueSearchBox: string) => {\n    try {\n      const request = await axios.get(\n        `http://localhost:8080/users/filter/${valueSearchBox}`\n      )\n      return request.data\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  static editUser = async (id: any, user: {}) => {\n    try {\n      const request = await axios.put(\n        `http://localhost:8080/users/update/${id}`,\n        user\n      )\n      return request.data\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  static removeHandler = async (id: string) => {\n    try {\n      return await axios.delete(`http://localhost:8080/users/delete/${id}`)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  static getUserByID = async (id: string) => {\n    try {\n      const request = await axios.get(`http://localhost:8080/users/${id}`)\n      return request.data\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  static getUserByToken = async () => {\n    try {\n      const request = await axios.get(\n        `http://localhost:8080/users/getUserByToken/`\n      )\n      return request.data\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  static getTokenForLogin = async (id: string, user: {}) => {\n    const response = await axios.post(`http://localhost:8080/users/login`, user)\n    return response.data\n  }\n\n  static getTokenForRegistration = async (id: string, user: {}) => {\n    const response = await axios.post(`http://localhost:8080/users/add`, user)\n    return response.data\n  }\n\n  static logOutAllDevices = async (id: string, user: {}) => {\n    const response = await axios.post(\n      `http://localhost:8080/users/logOutAllDevices`,\n      user\n    )\n    return response.data\n  }\n\n  static getListPetsByUserID = async (id: string) => {\n    const response = await axios.get(\n      `http://localhost:8080/users/withPets/${id}`\n    )\n    return response.data\n  }\n\n  static setImgUser = async (avatar: any, id: string) => {\n    const formData = new FormData()\n    formData.append(\"user\", avatar)\n\n    const response = await axios.post(\n      `http://localhost:8080/public/userSafeFileIntoImages/${id}`,\n      formData\n    )\n    return response.data.fileName\n  }\n\n  static getListAlbumsByUserID = async (id: string) => {\n    try {\n      const response = await axios.get(\n        `http://localhost:8080/users/withAlbums/${id}`\n      )\n\n      return response.data\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  static getListPhotosByUserID = async (id: string) => {\n    try {\n      const response = await axios.get(\n        `http://localhost:8080/users/withPhotos/${id}`\n      )\n      return response.data\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  static getListAlbumsWithPhotosByUserID = async (id: string) => {\n    try {\n      const response = await axios.get(\n        `http://localhost:8080/users/AlbumsWithPhotos/${id}`\n      )\n      return response.data\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  static getUserWithSubscriptionsById = async (userId: string) => {\n    try {\n      const response = await axios.get(\n        `http://localhost:8080/users/getUserWithSubscriptionsById/${userId}`\n      )\n      return response.data\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  static getUserAfterPaginationAndSearchAndFilter = async (body: {}) => {\n    try {\n      const response = await axios.post(\n        `http://localhost:8080/users/getUserAfterPaginationAndSearchAndFilter`,\n        body\n      )\n      return response.data\n    } catch (e) {\n      console.log(e)\n    }\n  }\n}\n","import React, { useEffect } from \"react\"\r\nimport UserCardCSS from \"./UserCard.module.css\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport ServiceSubscriptions from \"../../services/service-subscribe\"\r\nimport ServiceFriends from \"../../services/service-friend\"\r\nimport Service from \"../../services/service-user\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../Redux/entitiesInterface/user.interface\"\r\n\r\ntype UserCardProps = {\r\n  user: User,\r\n  userOwnerCard: User,\r\n  getLogInUserAllSubscriptionsAndObserver: any,\r\n}\r\n\r\nconst UserCard: React.FC<UserCardProps> = ({\r\n  user,\r\n  userOwnerCard,\r\n  getLogInUserAllSubscriptionsAndObserver,\r\n}) => {\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {}, [user.subscriptions])\r\n\r\n  const handlerClickSubscribe = async () => {\r\n    await ServiceSubscriptions.addSubscribe(user._id, userOwnerCard._id)\r\n    getLogInUserAllSubscriptionsAndObserver()\r\n  }\r\n\r\n  const handlerClickUnSubscribe = async () => {\r\n    await ServiceSubscriptions.deleteSubscribe(user._id, userOwnerCard._id)\r\n    getLogInUserAllSubscriptionsAndObserver()\r\n  }\r\n\r\n  const handlerClickAddFriend = async () => {\r\n    await ServiceSubscriptions.deleteSubscribeAfterAddFriend(\r\n      userOwnerCard._id,\r\n      user._id\r\n    )\r\n    await ServiceFriends.addFriend(user._id, userOwnerCard._id)\r\n    getLogInUserAllSubscriptionsAndObserver()\r\n  }\r\n\r\n  const handlerClickRemoveFriend = async () => {\r\n    await ServiceFriends.removeFriend(user._id, userOwnerCard._id)\r\n    getLogInUserAllSubscriptionsAndObserver()\r\n  }\r\n\r\n  const removeHandler = async (id: string) => {\r\n    await Service.removeHandler(id)\r\n    getLogInUserAllSubscriptionsAndObserver()\r\n  }\r\n\r\n  return (\r\n    <div className={UserCardCSS.container__all_users__card_user}>\r\n      {user.role === \"admin\" && (\r\n        <i\r\n          className={`material-icons ${UserCardCSS.container__all_users__card_user__delete}`}\r\n          onClick={() => removeHandler(userOwnerCard._id)}\r\n        >\r\n          delete\r\n        </i>\r\n      )}\r\n      {userOwnerCard.avatar ? (\r\n        <img\r\n          src={`http://localhost:8080/images/users/${userOwnerCard._id}/${userOwnerCard.avatar}`}\r\n          alt=\"avatar\"\r\n          onClick={() => {\r\n            history.push(`/user/profile/${userOwnerCard._id}`)\r\n          }}\r\n        />\r\n      ) : (\r\n        <img\r\n          src=\"http://localhost:8080/images/pattern-avatar.jpg\"\r\n          alt=\"avatar\"\r\n          onClick={() => {\r\n            history.push(`/user/profile/${userOwnerCard._id}`)\r\n          }}\r\n        />\r\n      )}\r\n      <h5\r\n        className={UserCardCSS.all_users__card_user__login}\r\n        onClick={() => {\r\n          history.push(`/user/profile/${userOwnerCard._id}`)\r\n        }}\r\n      >\r\n        {userOwnerCard.login}\r\n      </h5>\r\n      <p className={UserCardCSS.all_users__card_user__friends}>\r\n        {\" \"}\r\n        {userOwnerCard.subscriptions || \"it's not your friend\"}\r\n      </p>\r\n      <p className={UserCardCSS.all_users__card_user__role}>\r\n        {userOwnerCard.role}\r\n      </p>\r\n      <button\r\n        className={`waves-effect waves-light btn ${UserCardCSS.all_users__card_user__button}`}\r\n        onClick={\r\n          userOwnerCard.subscriptions === \"subscriber\"\r\n            ? () => handlerClickUnSubscribe()\r\n            : userOwnerCard.subscriptions === \"observer\"\r\n            ? () => handlerClickAddFriend()\r\n            : userOwnerCard.subscriptions === \"friend\"\r\n            ? () => handlerClickRemoveFriend()\r\n            : () => handlerClickSubscribe()\r\n        }\r\n      >\r\n        {userOwnerCard.subscriptions === \"subscriber\" ? (\r\n          <p>UnSubscribe</p>\r\n        ) : userOwnerCard.subscriptions === \"observer\" ? (\r\n          <p>Add friend</p>\r\n        ) : userOwnerCard.subscriptions === \"friend\" ? (\r\n          <p>Remove friend</p>\r\n        ) : (\r\n          <p>Subscribe</p>\r\n        )}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user.user,\r\n})\r\n\r\nexport default connect(mapStateToProps)(UserCard)\r\n","export enum UserFormViewModes {\r\n  LogIn = \"Log In\",\r\n  Edit = \"Edit\",\r\n  SingUp = \"Sing Up\",\r\n}\r\n\r\nexport enum UserFormViewButtons {\r\n  LogIn = \"Log In\",\r\n  Edit = \"Edit\",\r\n  SingUp = \"Sing Up\",\r\n}\r\n\r\nexport enum LoadingState {\r\n  Loading = \"loading\",\r\n  Loaded = \"loaded\",\r\n  NotFound = \"notFound\",\r\n  Error = \"error\",\r\n}\r\n\r\nexport enum LoadingStateForNavbar {\r\n  Loading = \"loading\",\r\n  Loaded = \"loaded\",\r\n  NotFound = \"notFound\",\r\n  Error = \"error\",\r\n}\r\n\r\n// export enum LoadingStatePhotosInCurrentAlbum {\r\n//   Loading = \"loading\",\r\n//   Loaded = \"loaded\",\r\n//   NotFound = \"notFound\",\r\n//   Error = \"error\",\r\n// }\r\n","import { Action } from \"../../actionsInterface/action.interface\"\r\nimport { User } from \"../../entitiesInterface/user.interface\"\r\n\r\nexport const ActionTypes = {\r\n  GET_USER_LOGIN: \"[user] get user login\",\r\n  GET_USER_SIGN_UP: \"[user] get user signUp\",\r\n  GET_USER_REFRESH: \"[user] get user refresh\",\r\n  SET_USER_LOGIN_IN_STORE: \"[user] set user login in store\",\r\n  REMOVE_USER_FROM_STORE: \"[user] remove user from store\",\r\n\r\n  GET_USER_OWNER_THIS_PAGE: \"[user] get user owner this page\",\r\n  SET_USER_OWNER_THIS_PAGE_IN_STORE: \"[user] set user owner this page in store\",\r\n  // maybe need REMOVE_USER_OWNER_THIS_PAGE_FROM_STORE\r\n\r\n  GET_ALL_USERS: \"[user] get all user\", // maybe don't need\r\n  // maybe need only GET_ALL_USERS_AFTER_PAGINATION\r\n  GET_ALL_USERS_AFTER_PAGINATION: \"[user] get all users after pagination\",\r\n  GET_ALL_FRIENDS_BY_USER_ID: \"[User] get all friends by userId\",\r\n  GET_ALL_SUBSCRIPTIONS_BY_USER_ID: \"[User] get all subscriptions by userId\",\r\n  GET_ALL_SUBSCRIBERS_BY_USER_ID: \"[User] get all subscribers by userId\",\r\n  SET_ALL_USERS_IN_STORE: \"[user] get all user in store\",\r\n  REMOVE_ALL_USERS_FROM_STORE: \"[user] remove all user in store from store\",\r\n\r\n  LOG_OUT_USER_FOR_ALL_DEVICES: \"[user] log out user for all devices\",\r\n  SET_INITIAL_STATE_FOR_USER_REDUCER:\r\n    \"[user] set initial state for userReducer\",\r\n\r\n  GET_FAILURE: \"[getFailureAction] get failure action\",\r\n}\r\n\r\n//User login or signUp\r\n\r\nexport const getUserLogin = (userId: string, user: {}): Action<{}> => ({\r\n  type: ActionTypes.GET_USER_LOGIN,\r\n  payload: { userId, user },\r\n})\r\n\r\nexport const getUserSignUp = (userId: string, user: {}): Action<{}> => ({\r\n  type: ActionTypes.GET_USER_SIGN_UP,\r\n  payload: { userId, user },\r\n})\r\n\r\nexport const getUserRefresh = (): Action<{}> => ({\r\n  type: ActionTypes.GET_USER_REFRESH,\r\n})\r\n\r\nexport const setUserLoginInStore = (user: User): Action<User> => ({\r\n  type: ActionTypes.SET_USER_LOGIN_IN_STORE,\r\n  payload: user,\r\n})\r\n\r\n// UserOwnerThisPage\r\n\r\nexport const getUserOwnerThisPage = (userId: string): Action<string> => ({\r\n  type: ActionTypes.GET_USER_OWNER_THIS_PAGE,\r\n  payload: userId,\r\n})\r\n\r\nexport const setUserOwnerThisPageInStore = (user: User): Action<User> => ({\r\n  type: ActionTypes.SET_USER_OWNER_THIS_PAGE_IN_STORE,\r\n  payload: user,\r\n})\r\n\r\n// All users\r\n\r\nexport const getAllUsers = (userId: string): Action<string> => ({\r\n  type: ActionTypes.GET_ALL_USERS,\r\n  payload: userId,\r\n})\r\n\r\nexport const getAllUsersAfterPagination = (parametersPagination: {}): Action<{}> => ({\r\n  type: ActionTypes.GET_ALL_USERS_AFTER_PAGINATION,\r\n  payload: parametersPagination,\r\n})\r\n\r\nexport const getAllFriendsByUserId = (userId: string): Action<string> => ({\r\n  type: ActionTypes.GET_ALL_FRIENDS_BY_USER_ID,\r\n  payload: userId,\r\n})\r\n\r\nexport const getAllSubscriptionsByUserId = (\r\n  userId: string\r\n): Action<string> => ({\r\n  type: ActionTypes.GET_ALL_SUBSCRIPTIONS_BY_USER_ID,\r\n  payload: userId,\r\n})\r\n\r\nexport const getAllSubscribersByUserId = (userId: string): Action<string> => ({\r\n  type: ActionTypes.GET_ALL_SUBSCRIBERS_BY_USER_ID,\r\n  payload: userId,\r\n})\r\n\r\nexport const setAllUsersInStore = (arrayUsers: [User]): Action<[User]> => ({\r\n  type: ActionTypes.SET_ALL_USERS_IN_STORE,\r\n  payload: arrayUsers,\r\n})\r\n\r\nexport const logOutUserForAllDevices = (\r\n  userId: string,\r\n  user: User\r\n): Action<any> => ({\r\n  type: ActionTypes.LOG_OUT_USER_FOR_ALL_DEVICES,\r\n  payload: { userId, user },\r\n})\r\n\r\nexport const setInitialStateForUserReducer = (): Action<{}> => ({\r\n  type: ActionTypes.SET_INITIAL_STATE_FOR_USER_REDUCER,\r\n})\r\n\r\n//Failures\r\n\r\nexport const getFailureAction = (error?: any): Action<any> => ({\r\n  type: ActionTypes.GET_FAILURE,\r\n  payload: error,\r\n})\r\n","import React, { useEffect, useState } from \"react\"\r\nimport UserCard from \"../../../components/UserCard/UserCard\"\r\nimport MainAllUsersBlockPageCSS from \"./mainAllUsersBlock.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../../Redux/entitiesInterface/user.interface\"\r\nimport { getAllUsers } from \"../../../Redux/store/user/user.actions\"\r\n\r\ntype MainAllUsersBlockProps = {\r\n  user: User\r\n  dispatch: any\r\n  allUsers: []\r\n}\r\n\r\nconst MainAllUsersBlock: React.FunctionComponent<MainAllUsersBlockProps> = ({\r\n  user,\r\n  dispatch,\r\n  allUsers\r\n}) => {\r\n  const [load, setLoad]: any = useState(\"loading\")\r\n\r\n  useEffect(() => {\r\n    if (allUsers) {\r\n      setLoad(\"loaded\")\r\n    } else {\r\n      // This need make notFound\r\n    }\r\n  },[allUsers])\r\n\r\n  const getLogInUserAllSubscriptionsAndObserver = () => {\r\n    dispatch(getAllUsers(user._id))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {load === \"loading\" && <h1>Ожидайте ответа</h1>}\r\n      {load === \"loaded\" && (\r\n        <ul className={MainAllUsersBlockPageCSS.container__all_users__cards}>\r\n          {allUsers &&\r\n            allUsers.length > 0 &&\r\n            allUsers.map((userOwnerCard: any) => {\r\n              return (\r\n                userOwnerCard._id !== user._id && (\r\n                  <UserCard\r\n                    key={userOwnerCard._id||1}\r\n                    userOwnerCard={userOwnerCard}\r\n                    getLogInUserAllSubscriptionsAndObserver={\r\n                      getLogInUserAllSubscriptionsAndObserver\r\n                    }\r\n                  />\r\n                )\r\n              )\r\n            })}\r\n        </ul>\r\n      )}\r\n      {load !== \"loading\" && load !== \"loaded\" && <h1>ошибка</h1>}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user.user,\r\n  allUsers: state.user.allUsers\r\n})\r\n\r\nexport default connect(mapStateToProps)(MainAllUsersBlock)\r\n","import React from \"react\"\r\nimport AmountPaginationCSS from \"./AmountPagination.module.css\"\r\nimport Select from \"@material-ui/core/Select\"\r\nimport InputLabel from \"@material-ui/core/InputLabel\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../../Redux/entitiesInterface/user.interface\"\r\nimport { Pagination } from \"../../../Redux/entitiesInterface/pagination.interface\"\r\nimport { setValuesForPaginationAction } from \"../../../Redux/store/pagination/pagination.actions\"\r\n\r\ntype AmountPaginationProps = {\r\n  allUsers: [User]\r\n  pagination: Pagination\r\n  dispatch: any\r\n  getUsersAfterPaginationAndSearchAndFilter: any\r\n}\r\n\r\nconst AmountPagination: React.FunctionComponent<AmountPaginationProps> = ({\r\n  allUsers,\r\n  pagination,\r\n  dispatch,\r\n  getUsersAfterPaginationAndSearchAndFilter\r\n}) => {\r\n  const limitRender = pagination.limitUsersForRender\r\n  const { numberPage } = pagination\r\n\r\n  const handleChangeSelect = (newLimitRender: any) => {\r\n    let page\r\n    if (\r\n      allUsers &&\r\n      allUsers[0] &&\r\n      allUsers[0].countUsers !== undefined &&\r\n      +numberPage * +limitRender > allUsers[0].countUsers\r\n    ) {\r\n      page = Math.ceil(+allUsers[0].countUsers / +newLimitRender)\r\n    } else {\r\n      page = Math.ceil((+numberPage * +limitRender) / +newLimitRender)\r\n    }\r\n    dispatch(\r\n      setValuesForPaginationAction({\r\n        numberPage: page || 1,\r\n        limitUsersForRender: +newLimitRender\r\n      })\r\n    )\r\n    getUsersAfterPaginationAndSearchAndFilter(page || 1, +newLimitRender)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={AmountPaginationCSS.All_Users__Pagination_Block__Select_block}\r\n    >\r\n      <InputLabel htmlFor=\"outlined-age-native-simple\">\r\n        Amount of Users\r\n      </InputLabel>\r\n      <Select native onChange={e => handleChangeSelect(e.target.value)}>\r\n        <option value={0}>{\"all users\"}</option>\r\n        <option value={2}>2</option>\r\n        <option value={4}>4</option>\r\n        <option value={8}>8</option>\r\n      </Select>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  allUsers: state.user.allUsers,\r\n  pagination: state.pagination.pagination\r\n})\r\n\r\nexport default connect(mapStateToProps)(AmountPagination)\r\n","// import React from 'react'\r\nimport React from \"react\"\r\nimport NumberBlockPaginationCSS from \"./NumberBlockPagination.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../../Redux/entitiesInterface/user.interface\"\r\nimport { Pagination } from \"../../../Redux/entitiesInterface/pagination.interface\"\r\nimport { setValuesForPaginationAction } from \"../../../Redux/store/pagination/pagination.actions\"\r\nimport Button from \"@material-ui/core/Button\"\r\n\r\ntype NumberBlockPaginationProps = {\r\n  allUsers: [User]\r\n  pagination: Pagination\r\n  dispatch: any\r\n  getUsersAfterPaginationAndSearchAndFilter: any\r\n}\r\n\r\nconst NumberBlockPagination: React.FunctionComponent<NumberBlockPaginationProps> = ({\r\n  allUsers,\r\n  pagination,\r\n  dispatch,\r\n  getUsersAfterPaginationAndSearchAndFilter\r\n}) => {\r\n  const limitRender = pagination.limitUsersForRender\r\n  const { numberPage } = pagination\r\n\r\n  const handlerClickPrevPage = () => {\r\n    if (numberPage > 1) {\r\n      dispatch(\r\n        setValuesForPaginationAction({\r\n          numberPage: +numberPage - 1,\r\n          limitUsersForRender: limitRender\r\n        })\r\n      )\r\n      getUsersAfterPaginationAndSearchAndFilter(+numberPage - 1, limitRender)\r\n    }\r\n  }\r\n\r\n  const handlerClickNextPage = () => {\r\n    dispatch(\r\n      setValuesForPaginationAction({\r\n        numberPage: +numberPage + 1,\r\n        limitUsersForRender: limitRender\r\n      })\r\n    )\r\n    getUsersAfterPaginationAndSearchAndFilter(+numberPage + 1, limitRender)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        NumberBlockPaginationCSS.All_Users__Pagination_Block__Button_block\r\n      }\r\n    >\r\n      <Button\r\n        variant=\"outlined\"\r\n        component=\"span\"\r\n        onClick={() => handlerClickPrevPage()}\r\n        disabled={numberPage < 2 && true}\r\n      >\r\n        Prev\r\n      </Button>\r\n\r\n      <div>{numberPage}</div>\r\n\r\n      <Button\r\n        variant=\"outlined\"\r\n        component=\"span\"\r\n        onClick={() => handlerClickNextPage()}\r\n        disabled={\r\n          (!limitRender && true) ||\r\n          (allUsers &&\r\n            allUsers[0] &&\r\n            allUsers[0].countPage !== undefined &&\r\n            allUsers[0].countPage === numberPage &&\r\n            true)\r\n        }\r\n      >\r\n        Next\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  allUsers: state.user.allUsers,\r\n  pagination: state.pagination.pagination\r\n})\r\n\r\nexport default connect(mapStateToProps)(NumberBlockPagination)\r\n","import React, { useEffect, useState } from \"react\"\r\nimport PaginationBlockCSS from \"./PaginationBlock.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../Redux/entitiesInterface/user.interface\"\r\nimport { Pagination } from \"../../Redux/entitiesInterface/pagination.interface\"\r\nimport { setValuesForPaginationAction } from \"../../Redux/store/pagination/pagination.actions\"\r\nimport { getAllUsers } from \"../../Redux/store/user/user.actions\"\r\nimport { getAllUsersAfterPagination } from \"../../Redux/store/user/user.actions\"\r\nimport AmountPagination from \"./AmountPagination/AmountPagination\"\r\nimport NumberBlockPagination from \"./NumberBlockPagination/NumberBlockPagination\"\r\n\r\ntype PaginationBlockProps = {\r\n  user: User\r\n  pagination: Pagination\r\n  dispatch: any\r\n  checked: boolean\r\n  prevChecked: boolean\r\n  valueSearchBox: string\r\n}\r\n\r\nconst PaginationBlock: React.FunctionComponent<PaginationBlockProps> = ({\r\n  user,\r\n  pagination,\r\n  dispatch,\r\n  checked,\r\n  prevChecked,\r\n  valueSearchBox\r\n}) => {\r\n  const limitRender = pagination.limitUsersForRender\r\n  const { numberPage } = pagination\r\n  const [timerId, setTimerId]: any = useState(undefined)\r\n\r\n  const getUsersAfterPaginationAndSearchAndFilter = async (\r\n    numberPage: Number,\r\n    limitRender: Number\r\n  ) => {\r\n    const body = {\r\n      idLogInUser: user._id,\r\n      valueSearchBox,\r\n      numberPage,\r\n      checked,\r\n      limitRender\r\n    }\r\n    if (limitRender) {\r\n      dispatch(getAllUsersAfterPagination(body))\r\n    } else {\r\n      if (user._id) dispatch(getAllUsers(user._id))\r\n      dispatch(\r\n        setValuesForPaginationAction({\r\n          numberPage: 1,\r\n          limitUsersForRender: limitRender\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUsersAfterPaginationAndSearchAndFilter(numberPage, limitRender)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [numberPage, limitRender, user])\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      setValuesForPaginationAction({\r\n        numberPage: 1,\r\n        limitUsersForRender: limitRender\r\n      })\r\n    )\r\n    // call function after click checkbox or search\r\n    if (prevChecked !== undefined || valueSearchBox) {\r\n      clearTimeout(timerId)\r\n      const clearInterval = setTimeout(() => {\r\n        getUsersAfterPaginationAndSearchAndFilter(1, limitRender)\r\n      }, 500)\r\n      setTimerId(clearInterval)\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [checked, valueSearchBox])\r\n\r\n  return (\r\n    <section className={PaginationBlockCSS.All_Users__Pagination_Block}>\r\n      <AmountPagination\r\n        getUsersAfterPaginationAndSearchAndFilter={\r\n          getUsersAfterPaginationAndSearchAndFilter\r\n        }\r\n      />\r\n      <NumberBlockPagination\r\n        getUsersAfterPaginationAndSearchAndFilter={\r\n          getUsersAfterPaginationAndSearchAndFilter\r\n        }\r\n      />\r\n    </section>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user.user,\r\n  pagination: state.pagination.pagination,\r\n  checked: state.pagination.checkBox.checkBoxState,\r\n  prevChecked: state.pagination.checkBox.prevCheckBoxState,\r\n  valueSearchBox: state.pagination.searchString,\r\n})\r\n\r\nexport default connect(mapStateToProps)(PaginationBlock)\r\n","import React from \"react\"\r\nimport HeaderAllUsersBlock from \"./headerAllUsersBlock/headerAllUsersBlock\"\r\nimport MainAllUsersBlock from \"./mainAllUsersBlock/mainAllUsersBlock\"\r\nimport PaginationBlock from \"../../components/PaginationBlock/PaginationBlock\"\r\nimport allUsersPageCSS from \"./allUsersPage.module.css\"\r\n\r\nconst AllUsersPage: React.FunctionComponent = () => {\r\n  return (\r\n    <div className={allUsersPageCSS.container__all_users}>\r\n      <HeaderAllUsersBlock />\r\n      <MainAllUsersBlock />\r\n      <PaginationBlock />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllUsersPage\r\n","import React, { useEffect } from \"react\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../../Redux/entitiesInterface/user.interface\"\r\nimport AvatarBlockCSS from \"./AvatarBlock.module.css\"\r\n\r\ntype UserAvatarProps = {\r\n  user: User,\r\n  userOwnerThisPage: User,\r\n  homePageStatus: boolean,\r\n  avatarForFront: any,\r\n  handleChangeAvatar: any,\r\n  handleSubmit: any,\r\n}\r\n\r\nconst AvatarBlock: React.FC<UserAvatarProps> = ({\r\n  user,\r\n  userOwnerThisPage,\r\n  homePageStatus,\r\n  avatarForFront,\r\n  handleChangeAvatar,\r\n  handleSubmit,\r\n}) => {\r\n  useEffect(() => {}, [userOwnerThisPage])\r\n  return (\r\n    <form\r\n      action=\"submit\"\r\n      className={AvatarBlockCSS.profile__change_avatar__form}\r\n    >\r\n      {avatarForFront && (\r\n        <img className=\"chelik\" src={`${avatarForFront}`} alt=\"avatar\" />\r\n      )}\r\n      {!avatarForFront && userOwnerThisPage._id && userOwnerThisPage.avatar && (\r\n        <img\r\n          className=\"chelik\"\r\n          src={`http://localhost:8080/images/users/${userOwnerThisPage._id}/${userOwnerThisPage.avatar}`}\r\n          alt=\"avatar\"\r\n        />\r\n      )}\r\n      {!avatarForFront &&\r\n        userOwnerThisPage._id &&\r\n        !userOwnerThisPage.avatar && (\r\n          <img\r\n            className=\"chelik\"\r\n            src={`http://localhost:8080/images/pattern-avatar.jpg`}\r\n            alt=\"avatar\"\r\n          />\r\n        )}\r\n      {/* {(user.role === \"admin\" || homePageStatus) && ( */}\r\n      <>\r\n        <Button\r\n          variant=\"outlined\"\r\n          component=\"button\"\r\n          disabled={!homePageStatus && true}\r\n        >\r\n          Choose avatar\r\n          <input type=\"file\" onChange={(e) => handleChangeAvatar(e)} />\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          component=\"button\"\r\n          onClick={(e: any) => handleSubmit(e)}\r\n          disabled={!homePageStatus && true}\r\n        >\r\n          Change Avatar\r\n        </Button>\r\n      </>\r\n      {/* )} */}\r\n    </form>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user.user,\r\n  userOwnerThisPage: state.user.userOwnerThisPage,\r\n})\r\n\r\nexport default connect(mapStateToProps)(AvatarBlock)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport InformationBlockCSS from \"./InformationBlock.module.css\"\r\nimport { User } from \"../../../Redux/entitiesInterface/user.interface\"\r\nimport List from \"@material-ui/core/List\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\ntype InformationBlockProps = {\r\n  user: User\r\n  userOwnerThisPage: User\r\n  homePageStatus: boolean\r\n}\r\n\r\nconst InformationBlock: React.FC<InformationBlockProps> = ({\r\n  user,\r\n  userOwnerThisPage,\r\n  homePageStatus\r\n}) => {\r\n  const handleSubmit = (e: any) => {}\r\n  return (\r\n    <section className={InformationBlockCSS.user_profile__user_information}>\r\n      <h4>USER INFORMATION</h4>\r\n      <Box\r\n        className={\r\n          InformationBlockCSS.user_profile__user_information__block_information\r\n        }\r\n      >\r\n        <List component=\"ul\" aria-label=\"mailbox folders\">\r\n          <ListItem button>\r\n            <ListItemText\r\n              primary=\"Login:\"\r\n              secondary={`${userOwnerThisPage.login}`}\r\n            />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemText\r\n              primary=\"FirstName:\"\r\n              secondary={`${userOwnerThisPage.firstName}`}\r\n            />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemText\r\n              primary=\"LastName:\"\r\n              secondary={`${userOwnerThisPage.lastName}`}\r\n            />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemText\r\n              primary=\"Email:\"\r\n              secondary={`${userOwnerThisPage.email}`}\r\n            />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemText\r\n              primary=\"Phone:\"\r\n              secondary={`${userOwnerThisPage.phone}`}\r\n            />\r\n          </ListItem>\r\n        </List>\r\n        <Box\r\n          className={\r\n            InformationBlockCSS.user_profile__user_information__block_button\r\n          }\r\n        >\r\n          <Link to={`/user/${userOwnerThisPage._id}/edit`}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              component=\"button\"\r\n              onClick={(e: any) => handleSubmit(e)}\r\n              disabled={!homePageStatus && true}\r\n            >\r\n              EDIT INFORMATION\r\n            </Button>\r\n          </Link>\r\n          <Button\r\n            variant=\"outlined\"\r\n            component=\"button\"\r\n            onClick={(e: any) => handleSubmit(e)}\r\n            disabled={!homePageStatus && true}\r\n          >\r\n            DELETE PAGE\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user.user,\r\n  userOwnerThisPage: state.user.userOwnerThisPage\r\n})\r\n\r\nexport default connect(mapStateToProps)(InformationBlock)\r\n","import React from \"react\"\r\nimport List from \"@material-ui/core/List\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport PeopleAltOutlinedIcon from \"@material-ui/icons/PeopleAltOutlined\"\r\nimport FolderSharedOutlinedIcon from \"@material-ui/icons/FolderSharedOutlined\"\r\nimport PhotoLibraryOutlinedIcon from \"@material-ui/icons/PhotoLibraryOutlined\"\r\nimport EmojiPeopleOutlinedIcon from \"@material-ui/icons/EmojiPeopleOutlined\"\r\nimport GroupAddOutlinedIcon from \"@material-ui/icons/GroupAddOutlined\"\r\nimport Divider from \"@material-ui/core/Divider\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../../Redux/entitiesInterface/user.interface\"\r\nimport NavigationBlockCSS from \"./NavigationBlock.module.css\"\r\n\r\ntype NavigationBlockProps = {\r\n  user: User\r\n  userOwnerThisPage: User\r\n}\r\n\r\nconst NavigationBlock: React.FC<NavigationBlockProps> = ({\r\n  user,\r\n  userOwnerThisPage\r\n}) => {\r\n  return (\r\n    <List className={NavigationBlockCSS.user_information__navigation_block}>\r\n      <Link to={`/user/${userOwnerThisPage._id}/friends`}>\r\n        <ListItem button>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <PeopleAltOutlinedIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Friends\" secondary=\"Jan 9, 2014\" />\r\n        </ListItem>\r\n      </Link>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem button>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <EmojiPeopleOutlinedIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Subscriptions\" secondary=\"Jan 7, 2014\" />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem button>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <GroupAddOutlinedIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Subscribers\" secondary=\"July 20, 2014\" />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <Link to={`/user/${userOwnerThisPage._id}/allAlbums`}>\r\n        <ListItem button>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <FolderSharedOutlinedIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Albums\" secondary=\"Jan 7, 2014\" />\r\n        </ListItem>\r\n      </Link>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <Link to={`/user/${userOwnerThisPage._id}/allPhotos`}>\r\n        <ListItem button>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <PhotoLibraryOutlinedIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Photos\" secondary=\"July 20, 2014\" />\r\n        </ListItem>\r\n      </Link>\r\n    </List>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user.user,\r\n  userOwnerThisPage: state.user.userOwnerThisPage\r\n})\r\n\r\nexport default connect(mapStateToProps)(NavigationBlock)\r\n","import React from \"react\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CardActions from \"@material-ui/core/CardActions\"\r\nimport CardMedia from \"@material-ui/core/CardMedia\"\r\nimport PhotoCardCSS from \"./PhotoCard.module.css\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../Redux/entitiesInterface/user.interface\"\r\n\r\ntype UserPhotoCard = {\r\n  userOwnerThisPage: User\r\n  urlItem: any\r\n  idItem: any\r\n  removeHandler: any\r\n  editHandler: any\r\n  idChosenAlbum?: any\r\n  launchTogglePhotoModalWindow: any\r\n  ownerUser: any\r\n}\r\n\r\nconst PhotoCard: React.FC<UserPhotoCard> = ({\r\n  // idItem may be idCreateAlbum or idCreatePhoto\r\n  userOwnerThisPage,\r\n  urlItem,\r\n  idItem,\r\n  removeHandler,\r\n  editHandler,\r\n  idChosenAlbum,\r\n  launchTogglePhotoModalWindow,\r\n  ownerUser\r\n}) => {\r\n  return (\r\n    <Card className={PhotoCardCSS.photoAlbum__photoCard_block__card}>\r\n      {!idChosenAlbum && (\r\n        <Link to={`/user/${idItem}/album`}>\r\n          <CardMedia\r\n            image={`http://localhost:8080/images/users/${ownerUser}/${urlItem}`}\r\n            title=\"Image title\"\r\n            className={PhotoCardCSS.photoAlbum__photoCard_block__card__photo}\r\n          />\r\n        </Link>\r\n      )}\r\n      {idChosenAlbum && (\r\n        <CardMedia\r\n          image={`http://localhost:8080/images/users/${ownerUser}/${urlItem}`}\r\n          title={urlItem}\r\n          className={PhotoCardCSS.photoAlbum__photoCard_block__card__photo}\r\n          onClick={e => launchTogglePhotoModalWindow(e)}\r\n        />\r\n      )}\r\n\r\n      <CardActions\r\n        className={PhotoCardCSS.photoAlbum__photoCard_block__card__actions}\r\n      >\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          onClick={() => editHandler(idItem)}\r\n        >\r\n          Edit\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          onClick={() => removeHandler(idItem)}\r\n        >\r\n          Remove\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  userOwnerThisPage: state.user.userOwnerThisPage\r\n})\r\n\r\nexport default connect(mapStateToProps)(PhotoCard)\r\n","import React from \"react\"\r\nimport PhotoCard from \"../PhotoCard/PhotoCard\"\r\nimport CreateListCSS from \"./CreateList.module.css\"\r\n\r\ntype CreateListProps = {\r\n  arr: any\r\n  removeHandler: any\r\n  editHandler: any\r\n  idChosenAlbum?: any\r\n  createListFunction?: any\r\n  launchTogglePhotoModalWindow?: any\r\n}\r\n\r\nconst CreateList: React.FC<CreateListProps> = ({\r\n  arr,\r\n  removeHandler,\r\n  editHandler,\r\n  idChosenAlbum,\r\n  createListFunction,\r\n  launchTogglePhotoModalWindow\r\n}) => {\r\n  return (\r\n    <ul className={CreateListCSS.user_profile__create_list__container}>\r\n      {arr.length > 0 &&\r\n        arr.map((item: any) => (\r\n          <li\r\n            className={CreateListCSS.user_profile__card_container}\r\n            key={item._id || 1}\r\n          >\r\n            <PhotoCard\r\n              urlItem={\r\n                createListFunction === \"CreateListAlbums\" && item.photos.length\r\n                  ? item.photos[0].url\r\n                  : item.url\r\n              }\r\n              // idItem may be idCreateAlbum or idCreatePhoto\r\n              idItem={item._id}\r\n              removeHandler={removeHandler}\r\n              editHandler={editHandler}\r\n              idChosenAlbum={idChosenAlbum}\r\n              launchTogglePhotoModalWindow={launchTogglePhotoModalWindow}\r\n              ownerUser={item.ownerUser}\r\n            />\r\n          </li>\r\n        ))}\r\n      {!arr.length && <p>Your {createListFunction} is empty</p>}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default CreateList\r\n","import { Action } from \"../../actionsInterface/action.interface\"\r\nimport { Album } from \"../../entitiesInterface/album.interface\"\r\nimport { Photo } from \"../../entitiesInterface/photo.interface\"\r\n\r\nexport const ActionTypes = {\r\n  GET_LIST_ALBUMS_WITH_PHOTOS: \"[Album] Get list albums with photos by userId\",\r\n  SET_LIST_ALBUMS_WITH_PHOTOS: \"[Album] Set list albums with photos in store\",\r\n  REMOVE_ALBUM: \"[Album] remove album\",\r\n  ADD_ALBUM: \"[Album] add album by userId\",\r\n  GET_LIST_PHOTOS_BY_ALBUM_ID: \"[Album] Get list photos by albumId\",\r\n  SET_LIST_PHOTOS_FOR_CURRENT_ALBUM:\r\n    \"[Album] Set list photos for current album\",\r\n  ADD_PHOTOS_IN_CURRENT_ALBUM: \"[Album] add photos in current album\",\r\n  REMOVE_PHOTO_FROM_CURRENT_ALBUM: \"[Album] remove photo from current album\",\r\n  GET_LIST_PHOTOS_BY_USER_ID: \"[Photo] get list photos by UserId\",\r\n  SET_LIST_PHOTOS_FOR_USER: \"[Photo] set list photos For User\",\r\n  GET_FAILURE: \"[getFailure] Get failure\",\r\n}\r\n\r\nexport const getListAlbumsWithPhotosByUserIDAction = (\r\n  userId: string\r\n): Action<string> => ({\r\n  type: ActionTypes.GET_LIST_ALBUMS_WITH_PHOTOS,\r\n  payload: userId,\r\n})\r\n\r\nexport const setListAlbumsWithPhotosInStoreAction = (\r\n  albums: [Album]\r\n): Action<[Album]> => ({\r\n  type: ActionTypes.SET_LIST_ALBUMS_WITH_PHOTOS,\r\n  payload: albums,\r\n})\r\n\r\nexport const removeAlbumAction = (\r\n  albumId: string,\r\n  userId: string\r\n): Action<{}> => ({\r\n  type: ActionTypes.REMOVE_ALBUM,\r\n  payload: { albumId, userId },\r\n})\r\n\r\nexport const addAlbumWithPhotosByUserIdAction = (\r\n  userId: string,\r\n  arrayPhotos: []\r\n): Action<{}> => ({\r\n  type: ActionTypes.ADD_ALBUM,\r\n  payload: { userId, arrayPhotos },\r\n})\r\n\r\nexport const getListPhotosByAlbumIdAction = (\r\n  albumId: string\r\n): Action<string> => ({\r\n  type: ActionTypes.GET_LIST_PHOTOS_BY_ALBUM_ID,\r\n  payload: albumId,\r\n})\r\n\r\nexport const setListPhotosForCurrentAlbumAction = (\r\n  albums: [Photo]\r\n): Action<[Photo]> => ({\r\n  type: ActionTypes.SET_LIST_PHOTOS_FOR_CURRENT_ALBUM,\r\n  payload: albums,\r\n})\r\n\r\nexport const addPhotosInCurrentAlbumAction = (\r\n  userOwnerThisPageId: string,\r\n  albumId: string,\r\n  arrayPhotos: []\r\n): Action<{}> => ({\r\n  type: ActionTypes.ADD_PHOTOS_IN_CURRENT_ALBUM,\r\n  payload: { userOwnerThisPageId, albumId, arrayPhotos },\r\n})\r\n\r\nexport const removePhotoFromCurrentAlbumAction = (\r\n  photoId: string,\r\n  albumId: string\r\n): Action<{}> => ({\r\n  type: ActionTypes.REMOVE_PHOTO_FROM_CURRENT_ALBUM,\r\n  payload: { photoId, albumId },\r\n})\r\n\r\nexport const getListPhotosByUserIdIdAction = (\r\n  userId: string\r\n): Action<string> => ({\r\n  type: ActionTypes.GET_LIST_PHOTOS_BY_USER_ID,\r\n  payload: userId,\r\n})\r\n\r\nexport const setListPhotosForUserAction = (\r\n  photos: [Photo]\r\n): Action<[Photo]> => ({\r\n  type: ActionTypes.SET_LIST_PHOTOS_FOR_USER,\r\n  payload: photos,\r\n})\r\n\r\nexport const getFailureAction = (error?: any): Action<any> => ({\r\n  type: ActionTypes.GET_FAILURE,\r\n  payload: error,\r\n})\r\n","import React, { useEffect, useCallback } from \"react\"\r\nimport AlbumsBlockCSS from \"./AlbumsBlock.module.css\"\r\nimport CreateList from \"../../../components/CreateList/CreateList\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../../Redux/entitiesInterface/user.interface\"\r\nimport { Album } from \"../../../Redux/entitiesInterface/album.interface\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { getListAlbumsWithPhotosByUserIDAction } from \"../../../Redux/store/albums/albums.action\"\r\nimport { removeAlbumAction } from \"../../../Redux/store/albums/albums.action\"\r\nimport { addAlbumWithPhotosByUserIdAction } from \"../../../Redux/store/albums/albums.action\"\r\n\r\ntype AlbumsBlockProps = {\r\n  user: User\r\n  userOwnerThisPage: User\r\n  albumsForUserOwnerPage: [Album]\r\n  dispatch: any\r\n  homePageStatus?: boolean\r\n}\r\n\r\nconst AlbumsBlock: React.FC<AlbumsBlockProps> = ({\r\n  user,\r\n  userOwnerThisPage,\r\n  albumsForUserOwnerPage,\r\n  dispatch,\r\n  homePageStatus\r\n}) => {\r\n  const getList = useCallback(() => {\r\n    if (userOwnerThisPage._id) {\r\n      dispatch(getListAlbumsWithPhotosByUserIDAction(userOwnerThisPage._id))\r\n    }\r\n  }, [dispatch, userOwnerThisPage._id])\r\n\r\n  useEffect(() => {\r\n    getList()\r\n  }, [getList])\r\n\r\n  const editHandler = (albumId: string) => {}\r\n\r\n  const removeHandler = (albumId: string) => {\r\n    dispatch(removeAlbumAction(albumId, userOwnerThisPage._id))\r\n  }\r\n\r\n  const addChangeHandler = (e: any) => {\r\n    const arrayFiles = e.target.files\r\n    dispatch(\r\n      addAlbumWithPhotosByUserIdAction(userOwnerThisPage._id, arrayFiles)\r\n    )\r\n  }\r\n\r\n  const handleSubmit = (e: any) => {}\r\n\r\n  return (\r\n    <Box className={AlbumsBlockCSS.main__user_profile__albums_block}>\r\n      {/* {stateLoading === \"loading\" && <h1>Ожидайте ответа</h1>} */}\r\n      {// stateLoading === \"loaded\"   &&\r\n        albumsForUserOwnerPage.length &&\r\n        albumsForUserOwnerPage[0]._id !== undefined && (\r\n          <CreateList\r\n            arr={albumsForUserOwnerPage}\r\n            removeHandler={removeHandler}\r\n            editHandler={editHandler}\r\n            createListFunction={\"CreateListAlbums\"}\r\n          />\r\n        )}\r\n      <Button\r\n        variant=\"outlined\"\r\n        component=\"button\"\r\n        onClick={(e: any) => handleSubmit(e)}\r\n        className={AlbumsBlockCSS.albums_block__button}\r\n        disabled={homePageStatus !== undefined && !homePageStatus && true}\r\n      >\r\n        <p>ADD ALBUM</p>\r\n        <input\r\n          className={AlbumsBlockCSS.label__input}\r\n          type=\"file\"\r\n          multiple\r\n          onChange={e => {\r\n            addChangeHandler(e)\r\n          }}\r\n        />{\" \"}\r\n      </Button>\r\n      {/* {stateLoading !== \"loading\" && stateLoading !== \"loaded\" && (\r\n        <h1>ошибка</h1>\r\n      )} */}\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user.user,\r\n  userOwnerThisPage: state.user.userOwnerThisPage,\r\n  albumsForUserOwnerPage: state.albumsState.albumsForUserOwnerPage\r\n})\r\n\r\nexport default connect(mapStateToProps)(AlbumsBlock)\r\n","import { Action } from \"../../actionsInterface/action.interface\"\r\nimport { User } from \"../../entitiesInterface/user.interface\"\r\n\r\nexport const ActionTypes = {\r\n  GET_AVATAR: \"[avatar] Get avatar\",\r\n  SET_AVATAR: \"[avatar] Set avatar\",\r\n  DELETE_AVATAR: \"[avatar] Delete_avatar\",\r\n  GET_FAILURE: \"[getFailure] Get failure\",\r\n}\r\n\r\nexport const getAvatarAction = (\r\n  avatar: {},\r\n  userOwnerThisPage: User,\r\n  userLogin: User,\r\n  avatarForFront: {}\r\n): Action<any> => ({\r\n  type: ActionTypes.GET_AVATAR,\r\n  payload: {\r\n    avatar,\r\n    userOwnerThisPage,\r\n    userLogin,\r\n    avatarForFront,\r\n  },\r\n})\r\n\r\nexport const getFailureAction = (error?: any): Action<any> => ({\r\n  type: ActionTypes.GET_FAILURE,\r\n  payload: error,\r\n})\r\n","import React, { useEffect, useState, useCallback } from \"react\"\r\nimport userInformationPageCSS from \"./userInformationPage.module.css\"\r\nimport AvatarBlock from \"./AvatarBlock/AvatarBlock\"\r\nimport InformationBlock from \"./InformationBlock/InformationBlock\"\r\nimport NavigationBlock from \"./NavigationBlock/NavigationBlock\"\r\nimport AlbumsBlock from \"./AlbumsBlock/AlbumsBlock\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../Redux/entitiesInterface/user.interface\"\r\nimport { getUserOwnerThisPage } from \"../../Redux/store/user/user.actions\"\r\nimport { getAvatarAction } from \"../../Redux/store/avatar/avatar.actions\"\r\n\r\ntype UserInformationPageProps = {\r\n  user: User,\r\n  dispatch: any,\r\n  match: any,\r\n  userOwnerThisPage: User,\r\n}\r\n\r\nconst UserInformationPage: React.FC<UserInformationPageProps> = ({\r\n  user,\r\n  dispatch,\r\n  match,\r\n  userOwnerThisPage,\r\n}) => {\r\n  const [avatarForFront, setAvatarForFront] = useState(\"\")\r\n  const [avatarForBack, setAvatarForBack] = useState(\"\")\r\n  const [homePageStatus, setHomePageStatus] = useState(false)\r\n  const idUserOwnerPage = match.params.id\r\n\r\n  const render = useCallback(async () => {\r\n    if (idUserOwnerPage) dispatch(getUserOwnerThisPage(idUserOwnerPage))\r\n    if (idUserOwnerPage === user._id) setHomePageStatus(true)\r\n  }, [dispatch, idUserOwnerPage, user._id])\r\n\r\n  useEffect(() => {\r\n    render()\r\n  }, [render])\r\n\r\n  const handleChangeAvatar = (e: any) => {\r\n    const target = e.target.files[0]\r\n    if (target) {\r\n      setAvatarForFront(URL.createObjectURL(target))\r\n      setAvatarForBack(target)\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      getAvatarAction(avatarForBack, userOwnerThisPage, user, avatarForFront)\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={userInformationPageCSS.container__user_information_page}>\r\n      <Box\r\n        component=\"section\"\r\n        display=\"grid\"\r\n        p={1}\r\n        m={1}\r\n        bgcolor=\"background.paper\"\r\n      >\r\n        <AvatarBlock\r\n          homePageStatus={homePageStatus}\r\n          avatarForFront={avatarForFront}\r\n          handleChangeAvatar={handleChangeAvatar}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </Box>\r\n      <Box\r\n        component=\"section\"\r\n        display=\"block\"\r\n        p={1}\r\n        m={1}\r\n        bgcolor=\"background.paper\"\r\n      >\r\n        <InformationBlock homePageStatus={homePageStatus} />\r\n      </Box>\r\n      <Box\r\n        component=\"section\"\r\n        display=\"block\"\r\n        p={1}\r\n        m={1}\r\n        bgcolor=\"background.paper\"\r\n      >\r\n        <NavigationBlock />\r\n      </Box>\r\n      <Box\r\n        component=\"section\"\r\n        display=\"block\"\r\n        p={1}\r\n        m={1}\r\n        bgcolor=\"background.paper\"\r\n      >\r\n        <AlbumsBlock homePageStatus={homePageStatus} />\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user.user,\r\n  userOwnerThisPage: state.user.userOwnerThisPage,\r\n})\r\n\r\nexport default connect(mapStateToProps)(UserInformationPage)\r\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      \"& > *\": {\r\n        margin: theme.spacing(1),\r\n        width: \"25ch\",\r\n      },\r\n    },\r\n  })\r\n)\r\n\r\nexport default useStyles\r\n","import React from \"react\"\r\nimport { Field, Form, ErrorMessage } from \"formik\"\r\nimport {\r\n  UserFormViewModes,\r\n  UserFormViewButtons,\r\n} from \"../../../shared/constants/user-from-view-mode.enum\"\r\nimport FormDataUsersRenderCSS from \"./FormDataUsersRender.module.css\"\r\nimport { User } from \"../../../Redux/entitiesInterface/user.interface\"\r\nimport { Button } from \"@material-ui/core\"\r\nimport useStyles from \"./FormDataUsersUseStyles\"\r\nimport { TextField } from \"formik-material-ui\"\r\n\r\ntype FormDataUsersRenderProps = {\r\n  user: User,\r\n  userOwnerThisPage: User,\r\n  namePage: UserFormViewModes,\r\n  nameButton: UserFormViewButtons,\r\n}\r\n\r\nconst FormDataUsersRender: React.FC<FormDataUsersRenderProps> = ({\r\n  user,\r\n  userOwnerThisPage,\r\n  namePage,\r\n  nameButton,\r\n}) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Form\r\n      className={`${FormDataUsersRenderCSS.form_logIn_container} ${classes.root}`}\r\n    >\r\n      <Field\r\n        name=\"login\"\r\n        required\r\n        label=\"Login\"\r\n        component={TextField}\r\n        className={FormDataUsersRenderCSS.form_logIn__fields_container}\r\n      />\r\n      <ErrorMessage name=\"login\" />\r\n      <Field\r\n        name=\"password\"\r\n        id=\"standard-password-input\"\r\n        label=\"Password\"\r\n        type=\"password\"\r\n        autoComplete=\"current-password\"\r\n        component={TextField}\r\n        className={FormDataUsersRenderCSS.form_logIn__fields_container}\r\n      />\r\n      <ErrorMessage name=\"password\" />\r\n      {(namePage === UserFormViewModes.Edit ||\r\n        namePage === UserFormViewModes.SingUp) && (\r\n        <>\r\n          <Field\r\n            name=\"firstName\"\r\n            label=\"First Name\"\r\n            component={TextField}\r\n            className={FormDataUsersRenderCSS.form_logIn__fields_container}\r\n          />\r\n          <ErrorMessage name=\"firstName\" />\r\n          <Field\r\n            name=\"lastName\"\r\n            label=\"Last Name\"\r\n            component={TextField}\r\n            className={FormDataUsersRenderCSS.form_logIn__fields_container}\r\n          />\r\n          <ErrorMessage name=\"lastName\" />\r\n          <Field\r\n            name=\"email\"\r\n            type=\"email\"\r\n            label=\"Email Address\"\r\n            component={TextField}\r\n            className={FormDataUsersRenderCSS.form_logIn__fields_container}\r\n          />\r\n          <ErrorMessage name=\"email\" />\r\n          <Field\r\n            name=\"phone\"\r\n            label=\"Phone\"\r\n            component={TextField}\r\n            className={FormDataUsersRenderCSS.form_logIn__fields_container}\r\n          />\r\n          <ErrorMessage name=\"phone\" />\r\n          <Field\r\n            name=\"role\"\r\n            disabled\r\n            label=\"Role\"\r\n            component={TextField}\r\n            className={FormDataUsersRenderCSS.form_logIn__fields_container}\r\n            // defaultValue={user.role || \"User\"}\r\n          />\r\n          <ErrorMessage name=\"role\" />\r\n        </>\r\n      )}\r\n      {(namePage !== UserFormViewModes.Edit ||\r\n        user.role === \"admin\" ||\r\n        user._id === userOwnerThisPage._id) && (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n        >{`${nameButton}`}</Button>\r\n      )}\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default FormDataUsersRender\r\n","import React from \"react\"\r\nimport { Formik } from \"formik\"\r\nimport * as Yup from \"yup\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../Redux/entitiesInterface/user.interface\"\r\nimport FormDataUsersRender from \"./FormDataUsersRender/FormDataUsersRender\"\r\nimport {\r\n  UserFormViewButtons,\r\n  UserFormViewModes,\r\n} from \"../../shared/constants/user-from-view-mode.enum\"\r\n\r\ntype FormDataUsersProps = {\r\n  user: User,\r\n  userOwnerThisPage: User,\r\n  submitHandler: any,\r\n  namePage: UserFormViewModes,\r\n  nameButton: UserFormViewButtons,\r\n}\r\n\r\nconst FormDataUsers: React.FC<FormDataUsersProps> = ({\r\n  user,\r\n  userOwnerThisPage,\r\n  submitHandler,\r\n  namePage,\r\n  nameButton,\r\n}) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        login: \"\",\r\n        password: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        role: userOwnerThisPage ? userOwnerThisPage.role : \"user\",\r\n      }}\r\n      validationSchema={Yup.object({\r\n        login: Yup.string().max(15, \"Must be 15 characters or less\"),\r\n        // .required(\"You need fill this field\"),\r\n        firstName: Yup.string().max(10, \"Must be 10 characters or less\"),\r\n        lastName: Yup.string().max(10, \"Must be 10 characters or less\"),\r\n        email: Yup.string().email(\"Invalid email address\"),\r\n        // phone: Yup.string().phone<string>(\"Invalid email address\")\r\n      })}\r\n      onSubmit={(values: {}) => {\r\n        submitHandler(user ? user._id : undefined, values)\r\n      }}\r\n    >\r\n      <FormDataUsersRender\r\n        user={user}\r\n        userOwnerThisPage={userOwnerThisPage}\r\n        namePage={namePage}\r\n        nameButton={nameButton}\r\n      />\r\n    </Formik>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user.user,\r\n  userOwnerThisPage: state.user.userOwnerThisPage,\r\n})\r\n\r\nexport default connect(mapStateToProps)(FormDataUsers)\r\n","import React, { useEffect } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport FormDataUsers from \"../../components/FormDataUsers/FormDataUsers\"\r\nimport {\r\n  UserFormViewModes,\r\n  UserFormViewButtons,\r\n} from \"../../shared/constants/user-from-view-mode.enum\"\r\nimport GetLoginPageCSS from \"./GetLoginPage.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../Redux/entitiesInterface/user.interface\"\r\nimport { getUserLogin } from \"../../Redux/store/user/user.actions\"\r\nimport { Typography } from \"@material-ui/core\"\r\n\r\ntype GetLoginPageProps = {\r\n  user: User,\r\n  dispatch: any,\r\n}\r\n\r\nconst GetLoginPage: React.FC<GetLoginPageProps> = ({ dispatch, user }) => {\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    if (user._id) history.push(`/user/allUsers`)\r\n  }, [history, user])\r\n\r\n  const logInHandler = (id: string, user: {}) =>\r\n    dispatch(getUserLogin(id, user))\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h4\" className={GetLoginPageCSS.main__log_in__header}>\r\n        Welcome Back\r\n      </Typography>\r\n      {!user.login && (\r\n        <FormDataUsers\r\n          submitHandler={logInHandler}\r\n          namePage={UserFormViewModes.LogIn}\r\n          nameButton={UserFormViewButtons.LogIn}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user.user,\r\n})\r\n\r\nexport default connect(mapStateToProps)(GetLoginPage)\r\n","import React, { useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport FormDataUsers from \"../../components/FormDataUsers/FormDataUsers\"\r\nimport {\r\n  UserFormViewModes,\r\n  UserFormViewButtons\r\n} from \"../../shared/constants/user-from-view-mode.enum\"\r\nimport GetLogUpPageCSS from \"./GetLogUpPage.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../Redux/entitiesInterface/user.interface\"\r\nimport {getUserSignUp} from \"../../Redux/store/user/user.actions\"\r\n\r\ntype GetLogUpPageProps = {\r\n  user: User\r\n  dispatch: any\r\n}\r\n\r\nconst GetLogUpPage: React.FC<GetLogUpPageProps> = ({ user, dispatch }) => {\r\n  const history = useHistory()\r\n\r\n  useEffect(()=>{\r\n    if(user._id) history.push(`/user/allUsers`)\r\n  },[user])\r\n\r\n  const logUpHandler = async (id: string, user: {}) =>\r\n    dispatch(getUserSignUp(id, user))\r\n\r\n  return (\r\n    <>\r\n      <h3 className={GetLogUpPageCSS.main__sign_up__header}>\r\n        Make the best decision in your life\r\n      </h3>\r\n      <FormDataUsers\r\n        submitHandler={logUpHandler}\r\n        namePage={UserFormViewModes.SingUp}\r\n        nameButton={UserFormViewButtons.SingUp}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user.user\r\n})\r\n\r\nexport default connect(mapStateToProps)(GetLogUpPage)\r\n","import React from \"react\"\r\nimport GetStartPageCSS from \"./GetStartPage.module.css\"\r\n\r\nexport const GetStartPage: React.FC = () => {\r\n  return (\r\n    <>\r\n      <h1\r\n        className={GetStartPageCSS.main__container__start_page__header}\r\n      >{`You are in the best application :))`}</h1>\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\"\nimport NavbarRenderUserBlockCSS from \"./NavbarRenderUserBlock.module.css\"\nimport { User } from \"../../../Redux/entitiesInterface/user.interface\"\nimport { Typography, Avatar, Box } from \"@material-ui/core\"\n\ntype NavbarRenderUserBlockProps = {\n  user: User,\n}\n\nconst NavbarRenderUserBlock: React.FunctionComponent<NavbarRenderUserBlockProps> = ({\n  user,\n}) => {\n  return (\n    <Box\n      component=\"div\"\n      className={NavbarRenderUserBlockCSS.navbar__user_block__container}\n    >\n      <Typography\n        variant=\"h5\"\n        className={NavbarRenderUserBlockCSS.navbar__user_block__name}\n      >\n        {(user.login && `Hello, ${user.login}`) || \"Hello, incognito\"}\n      </Typography>\n      <Avatar\n        className={NavbarRenderUserBlockCSS.navbar__user_block__avatar}\n        src={\n          (user.avatar &&\n            `http://localhost:8080/images/users/${user._id}/${user.avatar}`) ||\n          \"http://localhost:8080/images/pattern-avatar.jpg\"\n        }\n        alt=\"avatar\"\n      />\n    </Box>\n  )\n}\n\nexport default NavbarRenderUserBlock\n","import React from \"react\"\nimport { NavLink } from \"react-router-dom\"\nimport NavbarRenderNavigationCSS from \"./NavbarRenderNavigation.module.css\"\nimport { User } from \"../../../Redux/entitiesInterface/user.interface\"\nimport { Toolbar, ListItem, Button } from \"@material-ui/core\"\n\ntype NavbarRenderNavigationProps = {\n  user: User,\n  handlerLogOut: any,\n}\n\nconst NavbarRenderNavigation: React.FunctionComponent<NavbarRenderNavigationProps> = ({\n  user,\n  handlerLogOut,\n}) => {\n  return (\n    <Toolbar\n      component=\"ul\"\n      className={NavbarRenderNavigationCSS.navbar__navigation_block__container}\n    >\n      <ListItem component=\"li\">\n        {user._id && (\n          <NavLink to={`/user/profile/${user._id}`}>\n            <Button color=\"inherit\">User Profile</Button>\n          </NavLink>\n        )}\n      </ListItem>\n\n      <ListItem>\n        {user._id && (\n          <NavLink to={`/user/allUsers`}>\n            <Button color=\"inherit\">All Users</Button>\n          </NavLink>\n        )}\n      </ListItem>\n      <ListItem>\n        <NavLink to={(user._id && `/${user._id}/dialogs`) || \"/LogIn\"}>\n          <Button color=\"inherit\">\n            {(user._id && \"My Dialogs\") || \"Log In\"}\n          </Button>\n        </NavLink>\n      </ListItem>\n      <ListItem>\n        <NavLink\n          onClick={() => {\n            user._id && handlerLogOut()\n          }}\n          to={(user._id && \"/social-network-client\") || \"/SignUp\"}\n        >\n          <Button color=\"inherit\">\n            {(user._id && \"Log Out\") || \"Sign Up\"}\n          </Button>\n        </NavLink>\n      </ListItem>\n    </Toolbar>\n  )\n}\n\nexport default NavbarRenderNavigation\n","import React, { useEffect, useCallback } from \"react\"\nimport NavbarCSS from \"./Navbar.module.css\"\nimport { connect } from \"react-redux\"\nimport { User } from \"../../Redux/entitiesInterface/user.interface\"\nimport { getUserRefresh } from \"../../Redux/store/user/user.actions\"\nimport { logOutUserForAllDevices } from \"../../Redux/store/user/user.actions\"\nimport NavbarRenderUserBlock from \"./NavbarRenderUserBlock/NavbarRenderUserBlock\"\nimport { AppBar, Typography, CircularProgress } from \"@material-ui/core\"\nimport NavbarRenderNavigation from \"./NavbarRenderNavigation/NavbarRenderNavigation\"\n\ntype NavbarProps = {\n  user: User,\n  dispatch: any,\n  loadingState: String,\n}\n\nconst Navbar: React.FunctionComponent<NavbarProps> = ({\n  user,\n  dispatch,\n  loadingState,\n}) => {\n  const getUserAfterLogInAndRefresh = useCallback(() => {\n    if (localStorage.getItem(\"token\")) dispatch(getUserRefresh())\n  }, [dispatch])\n\n  useEffect(() => {\n    getUserAfterLogInAndRefresh()\n  }, [getUserAfterLogInAndRefresh])\n\n  const handlerLogOut = () => {\n    dispatch(logOutUserForAllDevices(user._id, user))\n  }\n\n  return (\n    <AppBar position=\"static\" className={NavbarCSS.navbar_container}>\n      {(loadingState === \"loading\" && (\n        <CircularProgress\n          color=\"inherit\"\n          className={NavbarCSS.navbar_container_spinner}\n        />\n      )) ||\n        (loadingState === \"notFound\" && (\n          <Typography variant=\"h6\">\n            Not found anything on your request!\n          </Typography>\n        )) ||\n        (loadingState === \"loaded\" && user && (\n          <>\n            <NavbarRenderUserBlock user={user} />\n            <NavbarRenderNavigation user={user} handlerLogOut={handlerLogOut} />\n          </>\n        )) ||\n        (loadingState === \"error\" && (\n          <Typography variant=\"h6\">ERROR, try refresh page!</Typography>\n        ))}\n    </AppBar>\n  )\n}\n\nconst mapStateToProps = (state: any) => ({\n  user: state.user.user,\n  loadingState: state.loadingState.loadingStateForNavbar,\n})\n\nexport default connect(mapStateToProps)(Navbar)\n","import React from \"react\"\r\nimport { Route, Redirect, RouteProps } from \"react-router-dom\"\r\n\r\nconst token = () => {\r\n  return localStorage.getItem(\"token\") ? true : false\r\n}\r\n\r\nexport interface PrivateRouteProps extends RouteProps {\r\n  isAuthenticated: () => {}\r\n  authenticationPath: string\r\n}\r\n\r\nexport const defaultPrivateRouteProps: PrivateRouteProps = {\r\n  isAuthenticated: token,\r\n  authenticationPath: \"/LogIn\"\r\n}\r\n\r\nexport const PrivateRoute: React.FC<PrivateRouteProps> = props => {\r\n  let redirectPath = \"\"\r\n  if (!props.isAuthenticated()) {\r\n    redirectPath = props.authenticationPath\r\n  }\r\n\r\n  if (redirectPath) {\r\n    const renderComponent = () => <Redirect to={{ pathname: redirectPath }} />\r\n    return <Route {...props} component={renderComponent} render={undefined} />\r\n  } else {\r\n    return <Route {...props} />\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { Route, Redirect, RouteProps } from \"react-router-dom\"\r\n\r\nconst token = () => {\r\n  return localStorage.getItem(\"token\") ? true : false\r\n}\r\n\r\nconst admin = () => {\r\n  return localStorage.getItem(\"userRole\") === \"admin\" ? true : false\r\n}\r\nexport interface PrivateRouteForAdminsProps extends RouteProps {\r\n  isAuthenticated: () => {}\r\n  authenticationPath: string\r\n  isAdmin: () => {}\r\n  restrictedAdminPath: string\r\n}\r\n\r\nexport const defaultPrivateRouteForAdminsProps: PrivateRouteForAdminsProps = {\r\n  isAuthenticated: token,\r\n  authenticationPath: \"/LogIn\",\r\n  isAdmin: admin,\r\n  restrictedAdminPath: \"/user/All\"\r\n}\r\n\r\nexport const PrivateRouteForAdmins: React.FC<PrivateRouteForAdminsProps> = props => {\r\n  let redirectPath = \"\"\r\n  if (!props.isAuthenticated()) {\r\n    redirectPath = props.authenticationPath\r\n  }\r\n  if (props.isAuthenticated() && !props.isAdmin()) {\r\n    redirectPath = props.restrictedAdminPath\r\n  }\r\n\r\n  if (redirectPath) {\r\n    const renderComponent = () => <Redirect to={{ pathname: redirectPath }} />\r\n    return <Route {...props} component={renderComponent} render={undefined} />\r\n  } else {\r\n    return <Route {...props} />\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport PhotoModalWindowCSS from \"./PhotoModalWindow.module.css\"\r\nimport AliceCarousel from \"react-alice-carousel\"\r\nimport \"react-alice-carousel/lib/alice-carousel.css\"\r\n\r\ntype PhotoModalWindowProps = {\r\n  arrayPhotosChosenAlbum: any,\r\n  launchTogglePhotoModalWindow: any,\r\n  currentUrlPhotoForLoop: string,\r\n}\r\n\r\nconst PhotoModalWindow: React.FC<PhotoModalWindowProps> = ({\r\n  arrayPhotosChosenAlbum,\r\n  launchTogglePhotoModalWindow,\r\n  currentUrlPhotoForLoop,\r\n}) => {\r\n  const currentIndex = arrayPhotosChosenAlbum.findIndex(\r\n    (photo: any) => photo.url === currentUrlPhotoForLoop\r\n  )\r\n\r\n  const handleOnDragStart = (e: any) => e.preventDefault()\r\n\r\n  return (\r\n    <div className={PhotoModalWindowCSS.user_profile__chosen_album__photo_loop}>\r\n      <p onClick={() => launchTogglePhotoModalWindow()}>\r\n        BACK TO PHOTO LIST IN THIS ALBUM\r\n      </p>\r\n\r\n      <div>\r\n        <AliceCarousel startIndex={currentIndex} mouseTrackingEnabled>\r\n          {arrayPhotosChosenAlbum.length &&\r\n            arrayPhotosChosenAlbum.map((item: any) => (\r\n              <img\r\n                onDragStart={handleOnDragStart}\r\n                key={item._id}\r\n                src={`http://localhost:8080/images/users/${item.ownerUser}/${item.url}`}\r\n                className={\r\n                  PhotoModalWindowCSS.user_profile__chosen_album__photo_loop__img\r\n                }\r\n                alt=\"title\"\r\n              />\r\n            ))}\r\n        </AliceCarousel>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PhotoModalWindow\r\n","import React, { useState, useEffect, useCallback } from \"react\"\r\nimport GetAlbumByIDCSS from \"./GetAlbumByID.module.css\"\r\nimport CreateList from \"../../components/CreateList/CreateList\"\r\nimport { Link } from \"react-router-dom\"\r\nimport PhotoModalWindow from \"../../components/PhotoModalWindow/PhotoModalWindow\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../Redux/entitiesInterface/user.interface\"\r\nimport { Photo } from \"../../Redux/entitiesInterface/photo.interface\"\r\nimport { getListPhotosByAlbumIdAction } from \"../../Redux/store/albums/albums.action\"\r\nimport { addPhotosInCurrentAlbumAction } from \"../../Redux/store/albums/albums.action\"\r\nimport { removePhotoFromCurrentAlbumAction } from \"../../Redux/store/albums/albums.action\"\r\n\r\ntype GetAlbumByIDProps = {\r\n  user: User\r\n  userOwnerThisPage: User\r\n  currentAlbum: [Photo]\r\n  loadingState: string\r\n  match: any\r\n  dispatch: any\r\n}\r\n\r\nconst GetAlbumByID: React.FC<GetAlbumByIDProps> = ({\r\n  user,\r\n  userOwnerThisPage,\r\n  currentAlbum,\r\n  loadingState,\r\n  match,\r\n  dispatch\r\n}) => {\r\n  const [statusPhotoModalWindow, setStatusPhotoModalWindow]: any = useState(\r\n    false\r\n  )\r\n  const [currentUrlPhotoForLoop, setCurrentUrlPhotoForLoop]: any = useState(\"\")\r\n  const idChosenAlbum = match.params.id\r\n\r\n  const getList = useCallback(async () => {\r\n    dispatch(getListPhotosByAlbumIdAction(idChosenAlbum))\r\n  }, [dispatch, idChosenAlbum])\r\n\r\n  useEffect(() => {\r\n    getList()\r\n  }, [getList, user])\r\n\r\n  const launchTogglePhotoModalWindow = (e: any) => {\r\n    if (!statusPhotoModalWindow) setCurrentUrlPhotoForLoop(e.target.title)\r\n    setStatusPhotoModalWindow(!statusPhotoModalWindow)\r\n  }\r\n\r\n  const editHandler = async (id: string) => {}\r\n\r\n  const removeHandler = async (photoId: string) => {\r\n    dispatch(removePhotoFromCurrentAlbumAction(photoId, idChosenAlbum))\r\n  }\r\n\r\n  const addChangeHandler = async (e: any) => {\r\n    const arrayFiles = e.target.files\r\n    dispatch(\r\n      addPhotosInCurrentAlbumAction(\r\n        userOwnerThisPage._id,\r\n        idChosenAlbum,\r\n        arrayFiles\r\n      )\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={GetAlbumByIDCSS.main__user_profile__album_block}>\r\n        {loadingState === \"loading\" && <h1>Ожидайте ответа</h1>}\r\n        {loadingState === \"loaded\" && (\r\n          <>\r\n            <Link to={`/user/profile/${userOwnerThisPage._id}`}>\r\n              <p>BACK TO ALBUM LIST</p>\r\n            </Link>\r\n            <CreateList\r\n              arr={currentAlbum}\r\n              removeHandler={removeHandler}\r\n              editHandler={editHandler}\r\n              idChosenAlbum={idChosenAlbum}\r\n              createListFunction={\"CreateListPhotos\"}\r\n              launchTogglePhotoModalWindow={launchTogglePhotoModalWindow}\r\n            />\r\n          </>\r\n        )}\r\n        {loadingState === \"error\" && <h1>ошибка</h1>}\r\n        <div className={GetAlbumByIDCSS.photos__container_drag_and_drop}></div>\r\n        {/* I need user for advance feature for user and loginUser and admin  */}\r\n        {(user.role === \"admin\" || user._id === userOwnerThisPage._id) && (\r\n          <label\r\n            className={GetAlbumByIDCSS.photos__container_drag_and_drop__label}\r\n            htmlFor=\"addFiles\"\r\n          >\r\n            Add photos\r\n            <input\r\n              className={GetAlbumByIDCSS.label__input}\r\n              id=\"addFiles\"\r\n              type=\"file\"\r\n              multiple\r\n              onChange={e => {\r\n                addChangeHandler(e)\r\n              }}\r\n            />\r\n          </label>\r\n        )}\r\n      </div>\r\n      {statusPhotoModalWindow && (\r\n        <PhotoModalWindow\r\n          arrayPhotosChosenAlbum={currentAlbum}\r\n          launchTogglePhotoModalWindow={launchTogglePhotoModalWindow}\r\n          currentUrlPhotoForLoop={currentUrlPhotoForLoop}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.common.user,\r\n  userOwnerThisPage: state.userOwnerThisPageForSagas.userOwnerThisPage,\r\n  currentAlbum: state.albumsState.currentAlbum,\r\n  loadingState: state.loadingState.loadingStatePhotosInCurrentAlbum\r\n})\r\n\r\nexport default connect(mapStateToProps)(GetAlbumByID)\r\n","import React, { useEffect } from \"react\"\r\nimport UserCard from \"../../components/UserCard/UserCard\"\r\nimport PageFriendsCSS from \"./pageFriends.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../Redux/entitiesInterface/user.interface\"\r\nimport { getAllFriendsByUserId } from \"../../Redux/store/user/user.actions\"\r\n\r\ntype PageFriendsProps = {\r\n  user: User\r\n  dispatch: any\r\n  allFriends: [User]\r\n  match: any\r\n}\r\n\r\nconst PageFriends: React.FunctionComponent<PageFriendsProps> = ({\r\n  user,\r\n  dispatch,\r\n  allFriends,\r\n  match\r\n}) => {\r\n  const idUserOwnerPage = match.params.id\r\n  useEffect(() => {\r\n    dispatch(getAllFriendsByUserId(idUserOwnerPage))\r\n  }, [dispatch, idUserOwnerPage])\r\n\r\n  const getLogInUserAllSubscriptionsAndObserver = () => {\r\n    dispatch(getAllFriendsByUserId(idUserOwnerPage))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* {load === \"loading\" && <h1>Ожидайте ответа</h1>}\r\n      {load === \"loaded\" && */}\r\n\r\n      <ul className={PageFriendsCSS.container__all_users__cards}>\r\n        {allFriends &&\r\n          allFriends.length > 0 &&\r\n          allFriends.map((userOwnerCard: any) => {\r\n            return (\r\n              userOwnerCard._id !== idUserOwnerPage && (\r\n                <UserCard\r\n                  key={userOwnerCard._id || 1}\r\n                  userOwnerCard={userOwnerCard}\r\n                  getLogInUserAllSubscriptionsAndObserver={\r\n                    getLogInUserAllSubscriptionsAndObserver\r\n                  }\r\n                />\r\n              )\r\n            )\r\n          })}\r\n      </ul>\r\n      {/* {load !== \"loading\" && load !== \"loaded\" && <h1>ошибка</h1>} */}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user.user,\r\n  allFriends: state.user.allUsers\r\n})\r\n\r\nexport default connect(mapStateToProps)(PageFriends)\r\n","import React from \"react\"\r\nimport AlbumsBlock from \"../../pages/userInformationPage/AlbumsBlock/AlbumsBlock\"\r\nimport AllAlbumsPageCSS from \"./allAlbumsPage.module.css\"\r\n\r\nconst AllAlbumsPage: React.FC = () => {\r\n  return (\r\n    <div className={AllAlbumsPageCSS.AllAlbumPage__container}>\r\n      <AlbumsBlock />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllAlbumsPage\r\n","import React, { useEffect, useCallback } from \"react\"\r\nimport AllPhotosPageCSS from \"./allPhotosPage.module.css\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../Redux/entitiesInterface/user.interface\"\r\nimport { Photo } from \"../../Redux/entitiesInterface/photo.interface\"\r\nimport { getListPhotosByUserIdIdAction } from \"../../Redux/store/albums/albums.action\"\r\n\r\ntype AllPhotosPageProps = {\r\n  user: User\r\n  userOwnerThisPage: User\r\n  currentAlbum: [Photo]\r\n  allPhotosForThisUser: [Photo]\r\n  loadingState: string\r\n  match: any\r\n  dispatch: any\r\n}\r\n\r\nconst AllPhotosPage: React.FC<AllPhotosPageProps> = ({\r\n  user,\r\n  userOwnerThisPage,\r\n  currentAlbum,\r\n  loadingState,\r\n  allPhotosForThisUser,\r\n  match,\r\n  dispatch\r\n}) => {\r\n  const thisUserId = match.params.id\r\n  console.log(allPhotosForThisUser)\r\n\r\n  const getList = useCallback(async () => {\r\n    dispatch(getListPhotosByUserIdIdAction(thisUserId))\r\n  }, [dispatch, thisUserId])\r\n\r\n  useEffect(() => {\r\n    getList()\r\n  }, [getList])\r\n\r\n  return (\r\n    <div className={AllPhotosPageCSS.AllPhotoPage__container}>\r\n      <Link to={`/user/profile/${userOwnerThisPage._id}`}>\r\n        <p>BACK TO ALBUM LIST</p>\r\n      </Link>\r\n      {/* <CreateList\r\n              arr={currentAlbum}\r\n              removeHandler={removeHandler}\r\n              editHandler={editHandler}\r\n              idChosenAlbum={idChosenAlbum}\r\n              createListFunction={\"CreateListPhotos\"}\r\n              launchTogglePhotoModalWindow={launchTogglePhotoModalWindow}\r\n            /> */}\r\n      <ul className={AllPhotosPageCSS.user_profile__photos_list__container}>\r\n        {allPhotosForThisUser.length > 0 &&\r\n          allPhotosForThisUser.map((item: any) => (\r\n            <li\r\n              className={AllPhotosPageCSS.user_profile__photo_container}\r\n              key={item._id || 1}\r\n            >\r\n              <img\r\n                src={`http://localhost:8080/images/users/${thisUserId}/${item.url}`}\r\n                alt=\"userPhoto\"\r\n              />\r\n            </li>\r\n          ))}\r\n        {!allPhotosForThisUser.length && <p>Your list photos is empty</p>}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.common.user,\r\n  userOwnerThisPage: state.userOwnerThisPageForSagas.userOwnerThisPage,\r\n  currentAlbum: state.albumsState.currentAlbum,\r\n  loadingState: state.loadingState.loadingStatePhotosInCurrentAlbum,\r\n  allPhotosForThisUser: state.albumsState.allPhotosForThisUser\r\n})\r\n\r\nexport default connect(mapStateToProps)(AllPhotosPage)\r\n","import React from \"react\"\r\n\r\nconst NotFound = () => {\r\n  return <div>page not found</div>\r\n}\r\n\r\nexport default NotFound\r\n","import React from \"react\"\r\n\r\nexport const AdminAllUsers: React.FC = () => {\r\n  return (\r\n    <>\r\n      <div>Admin page</div>\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport FormDataUsers from \"../../components/FormDataUsers/FormDataUsers\"\r\nimport {\r\n  UserFormViewModes,\r\n  UserFormViewButtons\r\n} from \"../../shared/constants/user-from-view-mode.enum\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport Service from \"../../services/service-user\"\r\n\r\nexport const UserEditInformation = (props: any) => {\r\n  const idUserOwnerPage = props.match.params.id\r\n\r\n  const history = useHistory()\r\n\r\n  const submitHandler = async (id: number, user: any) => {\r\n    await Service.editUser(id, user)\r\n    history.push(`/user/profile/${idUserOwnerPage}`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to={`/user/profile/${idUserOwnerPage}`}>\r\n        <p>BACK TO USER INFORMATION</p>\r\n      </Link>\r\n      <div>\r\n        <FormDataUsers\r\n          submitHandler={submitHandler}\r\n          namePage={UserFormViewModes.Edit}\r\n          nameButton={UserFormViewButtons.Edit}\r\n        />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { Action } from \"../../actionsInterface/action.interface\"\r\nimport { Dialog } from \"../../entitiesInterface/dialog.interface\"\r\nimport { Message } from \"../../entitiesInterface/message.interface\"\r\n\r\nexport const ActionTypes = {\r\n  // dialog\r\n  SET_CURRENT_DIALOG_IN_STORE: \"[dialog] set current dialog in store\",\r\n  GET_ALL_DIALOGS_BY_USER_ID: \"[dialog] get all dialogs by userId\",\r\n  SET_ALL_USER_DIALOGS_IN_STORE: \"[dialog] set all dialogs by userId\",\r\n  ADD_NEW_DIALOG: \"[dialog] add new dialog\",\r\n  //message\r\n  GET_ALL_MESSAGES_FOR_CURRENT_DIALOG:\r\n    \"[message]  get all messages for current dialog\",\r\n  SET_IN_STORE_ALL_MESSAGES_FOR_CURRENT_DIALOG:\r\n    \"[message] set in store all messages for current dialog\",\r\n  SET_IN_STORE_NEW_MESSAGE_FOR_CURRENT_DIALOG:\r\n    \"[message] set in store new message for current dialog\",\r\n\r\n  GET_FAILURE: \"[getFailureAction] get failure action\",\r\n}\r\n\r\n//dialog\r\nexport const setCurrentDialogInStore = (\r\n  currentDialog: Dialog\r\n): Action<Dialog> => ({\r\n  type: ActionTypes.SET_CURRENT_DIALOG_IN_STORE,\r\n  payload: currentDialog,\r\n})\r\n\r\nexport const getAllDialogsByUserId = (userId: string): Action<string> => ({\r\n  type: ActionTypes.GET_ALL_DIALOGS_BY_USER_ID,\r\n  payload: userId,\r\n})\r\n\r\nexport const setAllUserDialogInStore = (\r\n  dialogs: [Dialog]\r\n): Action<[Dialog]> => ({\r\n  type: ActionTypes.SET_ALL_USER_DIALOGS_IN_STORE,\r\n  payload: dialogs,\r\n})\r\n\r\nexport const addNewDialog = (dialog: {}): Action<{}> => ({\r\n  type: ActionTypes.ADD_NEW_DIALOG,\r\n  payload: dialog,\r\n})\r\n\r\n// message\r\nexport const getAllMessagesCurrentDialog = (\r\n  currentDialogId: string\r\n): Action<string> => ({\r\n  type: ActionTypes.GET_ALL_MESSAGES_FOR_CURRENT_DIALOG,\r\n  payload: currentDialogId,\r\n})\r\n\r\nexport const setInStoreAllMessagesCurrentDialog = (\r\n  allMessagesCurrentDialogAction: [Message]\r\n): Action<any> => ({\r\n  type: ActionTypes.SET_IN_STORE_ALL_MESSAGES_FOR_CURRENT_DIALOG,\r\n  payload: allMessagesCurrentDialogAction,\r\n})\r\n\r\nexport const setInStoreNewMessageForCurrentDialog = (\r\n  newMessageForCurrentDialog: Message\r\n): Action<{}> => ({\r\n  type: ActionTypes.SET_IN_STORE_NEW_MESSAGE_FOR_CURRENT_DIALOG,\r\n  payload: newMessageForCurrentDialog,\r\n})\r\n\r\nexport const getFailureAction = (error?: any): Action<any> => ({\r\n  type: ActionTypes.GET_FAILURE,\r\n  payload: error,\r\n})\r\n","import { Dialog } from \"../../entitiesInterface/dialog.interface\"\r\nimport { Message } from \"../../entitiesInterface/message.interface\"\r\nimport { ActionTypes } from \"./dialogs.actions\"\r\nimport { Action } from \"../../actionsInterface/action.interface\"\r\n\r\nexport interface State {\r\n  currentDialog: Dialog\r\n  allDialogs: [Dialog]\r\n  messagesForCurrentDialog: [Message]\r\n}\r\n\r\nconst initialState: State = {\r\n  currentDialog: {} as Dialog,\r\n  allDialogs: [{} as Dialog],\r\n  messagesForCurrentDialog: [{} as Message],\r\n}\r\n\r\nexport const dialogReducer = (\r\n  state: State = initialState,\r\n  action: Action<any>\r\n) => {\r\n  switch (action.type) {\r\n  case ActionTypes.SET_CURRENT_DIALOG_IN_STORE:\r\n    return {\r\n      ...state,\r\n      currentDialog: action.payload\r\n    }\r\n  case ActionTypes.SET_ALL_USER_DIALOGS_IN_STORE:\r\n    return {\r\n      ...state,\r\n      allDialogs: action.payload\r\n    }\r\n  case ActionTypes.SET_IN_STORE_ALL_MESSAGES_FOR_CURRENT_DIALOG:\r\n    return {\r\n      ...state,\r\n      messagesForCurrentDialog: action.payload\r\n    }\r\n  case ActionTypes.SET_IN_STORE_NEW_MESSAGE_FOR_CURRENT_DIALOG:\r\n    return {\r\n      ...state,\r\n      messagesForCurrentDialog: state.messagesForCurrentDialog.concat(action.payload)\r\n    }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n","import { ActionTypes } from \"./pagination.actions\"\r\nimport { Action } from \"../../actionsInterface/action.interface\"\r\nimport { Pagination } from \"../../entitiesInterface/pagination.interface\"\r\nimport {CheckBoxInterface } from \"../../entitiesInterface/checkBox.interface\"\r\n\r\nexport interface State {\r\n  searchString: string\r\n  checkBox: CheckBoxInterface\r\n  pagination: Pagination\r\n}\r\n\r\nconst initialState: State = {\r\n  searchString: '',\r\n  checkBox: {checkBoxState: false, prevCheckBoxState: undefined},\r\n  pagination: { numberPage: 1, limitUsersForRender: 0 }\r\n}\r\n\r\nexport const paginationReducer = (\r\n  state: State = initialState,\r\n  action: Action<{}>\r\n) => {\r\n  switch (action.type) {\r\n  //  searchString\r\n  case ActionTypes.SET_INITIAL_SEARCH_STRING_STATE:\r\n    return {\r\n      ...state,\r\n      searchString: initialState.searchString\r\n    }\r\n  case ActionTypes.SET_CURRENT_SEARCH_STRING_STATE:\r\n    return {\r\n      ...state,\r\n      searchString: action.payload\r\n    }\r\n  //checkBox\r\n  case ActionTypes.SET_CHECK_BOX_STATE:\r\n    return {\r\n      ...state,\r\n      checkBox: {...state.checkBox, checkBoxState: action.payload}\r\n    }\r\n  case ActionTypes.CHANGE_CHECK_BOX_STATE:\r\n    return {\r\n      ...state,\r\n      checkBox: {...state.checkBox, checkBoxState: !state.checkBox.checkBoxState}\r\n    }\r\n  case ActionTypes.SET_PREV_CHECK_BOX_STATE:\r\n    return {\r\n      ...state,\r\n      checkBox: {...state.checkBox, prevCheckBoxState: action.payload}\r\n    }\r\n  //pagination\r\n  case ActionTypes.PAGINATION_SET_VALUES:\r\n    return {\r\n      ...state,\r\n      pagination: action.payload\r\n    }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n","import { Action } from \"../../actionsInterface/action.interface\"\r\n// import { LoadingState } from \"../../entitiesInterface/loading.entitiesInterface\"\r\n\r\nexport const ActionTypes = {\r\n  SET_LOADING_STATE: \"[loading] set loading state\",\r\n  SET_LOADING_STATE_PHOTOS_IN_ALBUM:\r\n    \"[loading] set loading state photos in current album\",\r\n\r\n  SET_LOADING_STATE_FOR_NAVBAR: \"[loading] set loading state for navbar\",\r\n}\r\n\r\nexport const setLoadingState = (loadingState: string): Action<string> => ({\r\n  type: ActionTypes.SET_LOADING_STATE,\r\n  payload: loadingState,\r\n})\r\n\r\nexport const setLoadingStatePhotosInCurrentAlbumAction = (\r\n  loadingState: string\r\n): Action<string> => ({\r\n  type: ActionTypes.SET_LOADING_STATE_PHOTOS_IN_ALBUM,\r\n  payload: loadingState,\r\n})\r\n\r\nexport const loadingStateForNavbar = (\r\n  loadingState: string\r\n): Action<string> => ({\r\n  type: ActionTypes.SET_LOADING_STATE_FOR_NAVBAR,\r\n  payload: loadingState,\r\n})\r\n","import { ActionTypes } from \"./loading.actions\"\r\nimport { Action } from \"../../actionsInterface/action.interface\"\r\n\r\nexport interface State {\r\n  loadingState: string\r\n  loadingStatePhotosInCurrentAlbum: string\r\n  loadingStateForNavbar: string\r\n}\r\n\r\nconst initialState: State = {\r\n  loadingState: \"loaded\",\r\n  loadingStatePhotosInCurrentAlbum: \"loaded\",\r\n  loadingStateForNavbar: \"loaded\",\r\n}\r\n\r\nexport const loadingStateReducer = (\r\n  state: State = initialState,\r\n  action: Action<String>\r\n) => {\r\n  switch (action.type) {\r\n  case ActionTypes.SET_LOADING_STATE:\r\n    return { ...state, loadingState: action.payload }\r\n  case ActionTypes.SET_LOADING_STATE_PHOTOS_IN_ALBUM:\r\n    return { ...state, loadingStatePhotosInCurrentAlbum: action.payload }\r\n  case ActionTypes.SET_LOADING_STATE_FOR_NAVBAR:\r\n    return { ...state, loadingStateForNavbar: action.payload }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n","import { Album } from \"../../entitiesInterface/album.interface\"\r\nimport { ActionTypes } from \"./albums.action\"\r\nimport { Action } from \"../../actionsInterface/action.interface\"\r\nimport { Photo } from \"../../entitiesInterface/photo.interface\"\r\n\r\nexport interface State {\r\n  albumsForUserOwnerPage: [Album]\r\n  currentAlbum: [Photo]\r\n  allPhotosForThisUser: [Photo]\r\n}\r\n\r\nconst initialState: State = {\r\n  albumsForUserOwnerPage: [{} as Album],\r\n  currentAlbum: [{} as Photo],\r\n  allPhotosForThisUser: [{} as Photo]\r\n}\r\n\r\nexport const albumsReducer = (\r\n  state: State = initialState,\r\n  action: Action<[{}]>\r\n) => {\r\n  switch (action.type) {\r\n  case ActionTypes.SET_LIST_ALBUMS_WITH_PHOTOS:\r\n    return {\r\n      ...state,\r\n      albumsForUserOwnerPage: action.payload\r\n    }\r\n  case ActionTypes.SET_LIST_PHOTOS_FOR_CURRENT_ALBUM:\r\n    return {\r\n      ...state,\r\n      currentAlbum: action.payload\r\n    }\r\n  case ActionTypes.SET_LIST_PHOTOS_FOR_USER:\r\n    return {\r\n      ...state,\r\n      allPhotosForThisUser: action.payload\r\n    }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n","import { ActionTypes } from \"./user.actions\"\r\nimport { Action } from \"../../actionsInterface/action.interface\"\r\nimport { User } from \"../../entitiesInterface/user.interface\"\r\nexport interface State {\r\n  user: User\r\n  userOwnerThisPage: User\r\n  allUsers: [User]\r\n}\r\n\r\nconst initialState: State = {\r\n  user: {} as User,\r\n  userOwnerThisPage: {} as User,\r\n  allUsers: [{} as User],\r\n}\r\n\r\nexport const userReducer = (state: State = initialState, action: Action<{}>) => {\r\n  switch (action.type) {\r\n  case ActionTypes.SET_USER_LOGIN_IN_STORE:\r\n    return {\r\n      ...state,\r\n      user: action.payload\r\n    }\r\n  case ActionTypes.SET_USER_OWNER_THIS_PAGE_IN_STORE:\r\n    return {\r\n      ...state,\r\n      userOwnerThisPage: action.payload\r\n    }\r\n  case ActionTypes.SET_ALL_USERS_IN_STORE:\r\n    return {\r\n      ...state,\r\n      allUsers: action.payload\r\n    }\r\n  case ActionTypes.SET_INITIAL_STATE_FOR_USER_REDUCER:\r\n    return initialState\r\n  default:\r\n    return state\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\"\r\nimport { dialogReducer } from \"./store/dialogs/dialogs.reducer\"\r\nimport { paginationReducer } from \"./store/pagination/pagination.reducer\"\r\nimport { loadingStateReducer } from \"./store/loading/loading.reducer\"\r\nimport { albumsReducer } from \"./store/albums/albums.reducer\"\r\nimport { userReducer } from \"./store/user/user.reducer\"\r\n\r\nexport default combineReducers({\r\n  dialog: dialogReducer,\r\n  pagination: paginationReducer,\r\n  loadingState: loadingStateReducer,\r\n  albumsState: albumsReducer,\r\n  user: userReducer,\r\n})\r\n","import React, { useState, useEffect, useCallback } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../Redux/entitiesInterface/user.interface\"\r\nimport { Message } from \"../../Redux/entitiesInterface/message.interface\"\r\nimport { Dialog } from \"../../Redux/entitiesInterface/dialog.interface\"\r\nimport openSocket from \"socket.io-client\"\r\nimport WindowDialogCSS from \"./WindowDialog.module.css\"\r\nimport { getAllMessagesCurrentDialog } from \"../../Redux/store/dialogs/dialogs.actions\"\r\nimport { setInStoreNewMessageForCurrentDialog } from \"../../Redux/store/dialogs/dialogs.actions\"\r\n// const socket = openSocket(\"https://localhost:8000/myDialogs\")\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport ImageIcon from \"@material-ui/icons/Image\"\r\nconst socket = openSocket(\"http://localhost:8000\", { reconnection: true })\r\n\r\ntype WindowDialogProps = {\r\n  user: User\r\n  dispatch: any\r\n  currentDialog: Dialog\r\n  messagesForCurrentDialog: [Message]\r\n}\r\n\r\nconst WindowDialog: React.FunctionComponent<WindowDialogProps> = ({\r\n  user,\r\n  dispatch,\r\n  currentDialog,\r\n  messagesForCurrentDialog\r\n}) => {\r\n  // const [listMessage, setListMessage]: any = useState([])\r\n  const [valueInput, setValueInput] = useState(\"\")\r\n\r\n  const getMessagesFromBD = useCallback(async () => {\r\n    dispatch(getAllMessagesCurrentDialog(currentDialog._id))\r\n  }, [currentDialog._id, dispatch])\r\n\r\n  const addMessageState = useCallback(\r\n    (message: any) => {\r\n      try {\r\n        // setListMessage((prevState:any)=>{\r\n        //   return [...prevState, message]\r\n        // })\r\n        dispatch(setInStoreNewMessageForCurrentDialog(message))\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  useEffect(() => {\r\n    socket.on(\"receiveMessageDialog\", (message: Message) => {\r\n      addMessageState(message)\r\n    })\r\n  }, [addMessageState])\r\n\r\n  const joinInRoom = useCallback(async () => {\r\n    socket.emit(\"join\", currentDialog)\r\n    await getMessagesFromBD()\r\n    setValueInput(\"\")\r\n  }, [currentDialog, getMessagesFromBD])\r\n\r\n  useEffect(() => {\r\n    if (currentDialog._id !== undefined) {\r\n      joinInRoom()\r\n    }\r\n    return () => {\r\n      socket.emit(\"end\")\r\n    }\r\n  }, [currentDialog._id, joinInRoom])\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      socket.removeAllListeners()\r\n    }\r\n  }, [])\r\n\r\n  function sendMessage(e: any) {\r\n    // e.preventDefault()\r\n    const message = {\r\n      idDialog: currentDialog._id,\r\n      authorLogin: user.login,\r\n      authorId: user._id,\r\n      message: valueInput\r\n    }\r\n    console.log(message)\r\n    socket.emit(\"messageDialog\", message)\r\n    setValueInput(\"\")\r\n  }\r\n\r\n  const handlerClickButton = (e: any) => {\r\n    sendMessage(e)\r\n  }\r\n\r\n  const handlerChangeInput = (e: any) => {\r\n    setValueInput(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      component=\"div\"\r\n      display=\"grid\"\r\n      className={WindowDialogCSS.dialogs_page__dialog_page__window_dialog}\r\n    >\r\n      <Box\r\n        component=\"ul\"\r\n        display=\"grid\"\r\n        className={\r\n          WindowDialogCSS.dialogs_page__dialog_page__window_dialog__list_message\r\n        }\r\n      >\r\n        {messagesForCurrentDialog &&\r\n          messagesForCurrentDialog.length > 0 &&\r\n          messagesForCurrentDialog[0]._id !== undefined &&\r\n          messagesForCurrentDialog.map((message: Message) => (\r\n            <React.Fragment key={message._id}>\r\n              <ListItem\r\n                className={\r\n                  (message.authorId === user._id &&\r\n                    WindowDialogCSS.dialogs_page__message__left_side) ||\r\n                  WindowDialogCSS.dialogs_page__message__right_side\r\n                }\r\n              >\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <ImageIcon />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={`${message.authorLogin}`}\r\n                  secondary={`${message.message}`}\r\n                />\r\n              </ListItem>\r\n            </React.Fragment>\r\n          ))}\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        display=\"grid\"\r\n        className={\r\n          WindowDialogCSS.dialogs_page__add_dialogs__block_button_input\r\n        }\r\n      >\r\n        <TextField\r\n          id=\"outlined-full-width\"\r\n          variant=\"outlined\"\r\n          label=\"Input Message\"\r\n          className={WindowDialogCSS.dialogs_page__add_dialogs_input}\r\n          type=\"text\"\r\n          value={valueInput}\r\n          onChange={e => handlerChangeInput(e)}\r\n        />\r\n        <Button\r\n          className={WindowDialogCSS.dialogs_page__add_dialogs_button}\r\n          onClick={(e: any) => handlerClickButton(e)}\r\n          variant=\"outlined\"\r\n          component=\"button\"\r\n          disabled={currentDialog._id === undefined && true}\r\n        >\r\n          {currentDialog._id === undefined ? \"Chose Dialog\" : \"Send Message\"}\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user.user,\r\n  currentDialog: state.dialog.currentDialog,\r\n  messagesForCurrentDialog:\r\n    state.dialog.messagesForCurrentDialog\r\n})\r\n\r\nexport default connect(mapStateToProps)(WindowDialog)\r\n\r\n// var element = document.getElementById(\"yourDivID\");\r\n// element.scrollTop = element.scrollHeight;\r\n\r\n// \"preserveNullAndEmptyArrays\": true\r\n\r\n// white-space: pre-wrap;\r\n// word-break: break-word\r\n","import React, { useState, useEffect, useCallback } from \"react\"\r\nimport PanelDialogsCSS from \"./PanelDialogs.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../Redux/entitiesInterface/user.interface\"\r\nimport { Dialog } from \"../../Redux/entitiesInterface/dialog.interface\"\r\nimport { LoadingState } from \"../../shared/constants/user-from-view-mode.enum\"\r\nimport List from \"@material-ui/core/List\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport { setCurrentDialogInStore } from \"../../Redux/store/dialogs/dialogs.actions\"\r\nimport { getAllUsers } from \"../../Redux/store/user/user.actions\"\r\nimport { getAllDialogsByUserId } from \"../../Redux/store/dialogs/dialogs.actions\"\r\nimport { addNewDialog } from \"../../Redux/store/dialogs/dialogs.actions\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Box from \"@material-ui/core/Box\"\r\n\r\ntype PanelDialogsProps = {\r\n  user: User,\r\n  dispatch: any,\r\n  allUsers: [User],\r\n  currentDialog: Dialog,\r\n  listDialogs: [Dialog],\r\n}\r\n\r\nconst PanelDialogs: React.FunctionComponent<PanelDialogsProps> = ({\r\n  user,\r\n  dispatch,\r\n  allUsers,\r\n  currentDialog,\r\n  listDialogs,\r\n}) => {\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  const [stateLoading, setStateLoading] = useState(LoadingState.Loaded)\r\n  const [flagModalWindow, setFlagModalWindow] = useState(false)\r\n\r\n  const getListDialogs = useCallback(async () => {\r\n    if (user._id) {\r\n      dispatch(getAllDialogsByUserId(user._id))\r\n      if (allUsers[0]._id === undefined) dispatch(getAllUsers(user._id))\r\n    }\r\n  }, [allUsers, dispatch, user._id])\r\n\r\n  useEffect(() => {\r\n    getListDialogs()\r\n  }, [getListDialogs, user])\r\n\r\n  const handlerClickButton = () => {\r\n    setFlagModalWindow(!flagModalWindow)\r\n    if (flagModalWindow) dispatch(getAllUsers(user._id))\r\n  }\r\n\r\n  async function sendDialog(\r\n    userId: String,\r\n    thisUserId: String,\r\n    thisUserLogin: String\r\n  ) {\r\n    dispatch(\r\n      addNewDialog({\r\n        dialogName: thisUserLogin,\r\n        members: [userId, thisUserId],\r\n      })\r\n    )\r\n    getListDialogs()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {stateLoading === \"loading\" && <h1>Ожидайте ответа</h1>}\r\n      {stateLoading === \"loaded\" && (\r\n        <Box\r\n          component=\"div\"\r\n          display=\"grid\"\r\n          className={PanelDialogsCSS.dialogs_page__rules_dialogs}\r\n        >\r\n          <List\r\n            className={\r\n              PanelDialogsCSS.dialogs_page__rules_dialogs__list_dialogs\r\n            }\r\n          >\r\n            {(listDialogs.length > 0 &&\r\n              listDialogs[0]._id &&\r\n              !flagModalWindow &&\r\n              listDialogs.map((dialog: any) => (\r\n                <ListItem\r\n                  key={dialog._id}\r\n                  button\r\n                  onClick={() => dispatch(setCurrentDialogInStore(dialog))}\r\n                >\r\n                  <ListItemAvatar>\r\n                    <Avatar\r\n                      alt={`Avatar n°${dialog._id}`}\r\n                      src={\r\n                        (dialog.members.avatar &&\r\n                          `http://localhost:8080/images/users/${dialog.members._id}/${dialog.members.avatar}`) ||\r\n                        `http://localhost:8080/images/pattern-avatar.jpg`\r\n                      }\r\n                    />\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    id={dialog._id}\r\n                    primary={`${dialog.members.login}`}\r\n                  />\r\n                  {/* <Divider variant=\"inset\" component=\"li\" />             */}\r\n                </ListItem>\r\n              ))) ||\r\n              (allUsers.length > 0 &&\r\n                flagModalWindow &&\r\n                allUsers.map((secondUser: any) => (\r\n                  <ListItem\r\n                    key={secondUser._id}\r\n                    button\r\n                    onClick={() =>\r\n                      sendDialog(user._id, secondUser._id, secondUser.login)\r\n                    }\r\n                  >\r\n                    <ListItemAvatar>\r\n                      <Avatar\r\n                        alt={`Avatar n°${secondUser._id}`}\r\n                        src={\r\n                          (secondUser.avatar &&\r\n                            `http://localhost:8080/images/users/${secondUser._id}/${secondUser.avatar}`) ||\r\n                          `http://localhost:8080/images/pattern-avatar.jpg`\r\n                        }\r\n                      />\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      id={secondUser._id}\r\n                      primary={`${secondUser.login}`}\r\n                    />\r\n                    {/* <Divider variant=\"inset\" component=\"li\" />          */}\r\n                  </ListItem>\r\n                )))}\r\n          </List>\r\n          <Button\r\n            className={PanelDialogsCSS.dialogs_page__add_dialogs_button}\r\n            variant=\"outlined\"\r\n            component=\"button\"\r\n            onClick={() => handlerClickButton()}\r\n          >\r\n            {(!flagModalWindow && \"Add Dialog\") ||\r\n              (flagModalWindow && \"Menu Dialogs\")}\r\n          </Button>\r\n        </Box>\r\n      )}\r\n      {stateLoading === \"notFound\" && <h1>not found</h1>}\r\n      {stateLoading === \"error\" && <h1>ошибка</h1>}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user.user,\r\n  allUsers: state.user.allUsers,\r\n  currentDialog: state.dialog.currentDialog,\r\n  listDialogs: state.dialog.allDialogs,\r\n})\r\n\r\nexport default connect(mapStateToProps)(PanelDialogs)\r\n","import React from \"react\"\r\nimport DialogsPageCSS from \"./DialogsPage.module.css\"\r\nimport WindowDialog from \"../../components/WindowDialog/WindowDialog\"\r\nimport PanelDialogs from \"../../components/PanelDialogs/PanelDialogs\"\r\nimport Box from \"@material-ui/core/Box\"\r\n\r\nconst DialogsPage: React.FunctionComponent<any> = () => {\r\n  return (\r\n    <Box\r\n      component=\"div\"\r\n      display=\"grid\"\r\n      // p={1}\r\n      // m={1}\r\n      // bgcolor=\"background.paper\"\r\n      className={DialogsPageCSS.dialogs_page}\r\n    >\r\n      <PanelDialogs />\r\n      <WindowDialog />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default DialogsPage\r\n","import { put, takeEvery } from \"redux-saga/effects\"\r\nimport Service from \"../../../services/service-user\"\r\nimport { setUserLoginInStore } from \"../user/user.actions\"\r\nimport { ActionTypes, getFailureAction } from \"./avatar.actions\"\r\n\r\nfunction* setAvatar(actions: any) {\r\n  try {\r\n    const imgName = yield Service.setImgUser(\r\n      actions.payload.avatar,\r\n      actions.payload.userOwnerThisPage._id\r\n    )\r\n    yield Service.editUser(actions.payload.userOwnerThisPage._id, {\r\n      avatar: imgName,\r\n      password: \"\",\r\n    })\r\n    if (\r\n      actions.payload.userOwnerThisPage._id === actions.payload.userLogin._id &&\r\n      actions.payload.avatarForFront\r\n    ) {\r\n      const newUser = Object.assign({}, actions.payload.userOwnerThisPage, {\r\n        avatar: imgName,\r\n      })\r\n      yield put(setUserLoginInStore(newUser))\r\n    }\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nexport default function* avatarSaga() {\r\n  yield takeEvery(ActionTypes.GET_AVATAR, setAvatar)\r\n}\r\n","const axios = require(\"axios\")\r\n\r\nexport default class ServiceDialog {\r\n  static interceptor = axios.interceptors.request.use(\r\n    function (config: any) {\r\n      const token = localStorage.getItem(\"token\")\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`\r\n      }\r\n      return config\r\n    },\r\n    function (error: string) {\r\n      return Promise.reject(error)\r\n    }\r\n  )\r\n\r\n  static getAllDialogs = async () => {\r\n    try {\r\n      const request = await axios.get(\"http://localhost:8080/dialogs/\")\r\n      return request.data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  static getAllDialogsById = async (id: string) => {\r\n    try {\r\n      // console.log(id)\r\n      const request = await axios.get(`http://localhost:8080/dialogs/${id}`)\r\n      return request.data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  static addDialog = async (body: {}) => {\r\n    console.log(body)\r\n    const response = await axios.post(\r\n      \"http://localhost:8080/dialogs/addDialog\",\r\n      body\r\n    )\r\n    return response.data\r\n  }\r\n}\r\n","const axios = require(\"axios\")\n\nexport default class ServiceMessage {\n  static interceptor = axios.interceptors.request.use(\n    function (config: any) {\n      const token = localStorage.getItem(\"token\")\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`\n      }\n      return config\n    },\n    function (error: string) {\n      return Promise.reject(error)\n    }\n  )\n\n  static getAllMessagesByIdDialog = async (idDialog: string) => {\n    try {\n      const request = await axios.get(\n        `http://localhost:8080/messages/${idDialog}`\n      )\n      return request.data\n    } catch (e) {\n      console.log(e)\n    }\n  }\n}\n","import { put, takeEvery } from \"redux-saga/effects\"\r\nimport ServiceDialog from \"../../../services/service-dialog\"\r\nimport ServiceMessage from \"../../../services/service-message\"\r\nimport {\r\n  ActionTypes,\r\n  setAllUserDialogInStore,\r\n  setInStoreAllMessagesCurrentDialog,\r\n  getFailureAction,\r\n} from \"./dialogs.actions\"\r\n\r\nfunction* setAllDialogsByUserIdInStore(actions: any) {\r\n  try {\r\n    const listForRender = yield ServiceDialog.getAllDialogsById(actions.payload)\r\n    yield put(setAllUserDialogInStore(listForRender))\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* addDialog(actions: any) {\r\n  try {\r\n    yield ServiceDialog.addDialog(actions.payload)\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* setInStoreAllMessagesCurrentDialogSaga(actions: any) {\r\n  try {\r\n    const list = yield ServiceMessage.getAllMessagesByIdDialog(actions.payload)\r\n    yield put(setInStoreAllMessagesCurrentDialog(list))\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nexport default function* dialogSaga() {\r\n  yield takeEvery(\r\n    ActionTypes.GET_ALL_DIALOGS_BY_USER_ID,\r\n    setAllDialogsByUserIdInStore\r\n  )\r\n  yield takeEvery(ActionTypes.ADD_NEW_DIALOG, addDialog)\r\n  yield takeEvery(\r\n    ActionTypes.GET_ALL_MESSAGES_FOR_CURRENT_DIALOG,\r\n    setInStoreAllMessagesCurrentDialogSaga\r\n  )\r\n}\r\n","const axios = require(\"axios\")\r\n\r\nexport default class ServiceAlbums {\r\n  static interceptor = axios.interceptors.request.use(\r\n    function (config: any) {\r\n      const token = localStorage.getItem(\"token\")\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`\r\n      }\r\n      return config\r\n    },\r\n    function (error: string) {\r\n      return Promise.reject(error)\r\n    }\r\n  )\r\n\r\n  static getAllAlbums = async () => {\r\n    try {\r\n      const request = await axios.get(\"http://localhost:8080/Albums/\")\r\n      return request.data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  static addAlbum = async (id: string) => {\r\n    const album = {\r\n      name: \"new album\",\r\n      ownerUser: id,\r\n    }\r\n    const response = await axios.post(`http://localhost:8080/albums/add`, album)\r\n    return response.data\r\n  }\r\n\r\n  static editAlbum = async (id: string, user: string) => {\r\n    try {\r\n      const request = await axios.put(\r\n        `http://localhost:8080/albums/update/${id}`,\r\n        user\r\n      )\r\n      return request.data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  static removeHandler = async (id: string) => {\r\n    try {\r\n      return await axios.delete(`http://localhost:8080/albums/delete/${id}`)\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  static getListPhotosByAlbumID = async (id: string) => {\r\n    try {\r\n      // console.log(id)\r\n      const response = await axios.get(\r\n        `http://localhost:8080/albums/withPhotos/${id}`\r\n      )\r\n      return response.data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n}\r\n","const axios = require(\"axios\")\r\n\r\nexport default class ServicePhotos {\r\n  static interceptor = axios.interceptors.request.use(\r\n    function (config: any) {\r\n      const token = localStorage.getItem(\"token\")\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`\r\n      }\r\n      return config\r\n    },\r\n    function (error: string) {\r\n      return Promise.reject(error)\r\n    }\r\n  )\r\n\r\n  static getPhotosById = async (userId: string) => {\r\n    try {\r\n      return await axios.get(`http://localhost:8080/photos/${userId}`)\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  static setImgUser = async (avatar: any) => {\r\n    const formData = new FormData()\r\n    for (let i = 0; i < avatar.length; i++) {\r\n      formData.append(\"multipleUser\", avatar[i])\r\n    }\r\n    const response = await axios.post(\r\n      `http://localhost:8080/public/multipleUserSafeFileIntoImages`,\r\n      formData\r\n    )\r\n    return response.data.fileNames\r\n  }\r\n\r\n  static addPhoto = async (idUser: string, arrayUrl: string) => {\r\n    for (let i = 0; i < arrayUrl.length; i++) {\r\n      const photo = {\r\n        name: `${arrayUrl[i]}`,\r\n        url: arrayUrl[i],\r\n        ownerUser: idUser,\r\n      }\r\n      const response = await axios.post(\r\n        `http://localhost:8080/photos/add`,\r\n        photo\r\n      )\r\n      console.log(response)\r\n    }\r\n  }\r\n\r\n  static removeHandler = async (id: string) => {\r\n    try {\r\n      return await axios.delete(`http://localhost:8080/photos/delete/${id}`)\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  static addPhotoIntoAlbum = async (\r\n    idUser: string,\r\n    idAlbum: string,\r\n    arrayUrl: []\r\n  ) => {\r\n    let arrPhotoUrl: any = []\r\n    for (let i = 0; i < arrayUrl.length; i++) {\r\n      const photo = {\r\n        name: `${arrayUrl[i]}`,\r\n        url: arrayUrl[i],\r\n        ownerUser: idUser,\r\n        ownerAlbum: idAlbum,\r\n      }\r\n      const response = await axios.post(\r\n        `http://localhost:8080/photos/addIntoAlbum`,\r\n        photo\r\n      )\r\n      arrPhotoUrl = arrPhotoUrl.concat(response.data.photo.url)\r\n    }\r\n    return arrPhotoUrl\r\n  }\r\n\r\n  static addPhotosIntoFsAndAlbum = async (\r\n    idUser: any,\r\n    idAlbum: string,\r\n    arrayFiles: any\r\n  ) => {\r\n    const formData = new FormData()\r\n    for (let i = 0; i < arrayFiles.length; i++) {\r\n      formData.append(\"multipleUser\", arrayFiles[i])\r\n    }\r\n    const response = await axios.post(\r\n      `http://localhost:8080/public/multipleUserSafeFileIntoImages/?idUser=${idUser}&idAlbum=${idAlbum}`,\r\n      formData\r\n    )\r\n    return response.data.fileNames\r\n  }\r\n}\r\n","import { put, takeEvery } from \"redux-saga/effects\"\r\nimport Service from \"../../../services/service-user\"\r\nimport ServiceAlbums from \"../../../services/service-album\"\r\nimport ServicePhotos from \"../../../services/service-photo\"\r\nimport { LoadingState } from \"../../../shared/constants/user-from-view-mode.enum\"\r\nimport { setLoadingStatePhotosInCurrentAlbumAction } from \"../loading/loading.actions\"\r\n\r\nimport {\r\n  ActionTypes,\r\n  getListAlbumsWithPhotosByUserIDAction,\r\n  setListAlbumsWithPhotosInStoreAction,\r\n  setListPhotosForCurrentAlbumAction,\r\n  getListPhotosByAlbumIdAction,\r\n  setListPhotosForUserAction,\r\n  getFailureAction,\r\n} from \"./albums.action\"\r\n\r\nimport { getUserOwnerThisPage } from \"../user/user.actions\"\r\n\r\nfunction* setListAlbumsWithPhotosInStore(actions: any) {\r\n  try {\r\n    const listAlbums = yield Service.getListAlbumsWithPhotosByUserID(\r\n      actions.payload\r\n    )\r\n    yield put(setListAlbumsWithPhotosInStoreAction(listAlbums))\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* removeAlbum(actions: any) {\r\n  try {\r\n    yield ServiceAlbums.removeHandler(actions.payload.albumId)\r\n    yield put(getListAlbumsWithPhotosByUserIDAction(actions.payload.userId))\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* addAlbumByUserId(actions: any) {\r\n  try {\r\n    const data = yield ServiceAlbums.addAlbum(actions.payload.userId)\r\n    yield ServicePhotos.addPhotosIntoFsAndAlbum(\r\n      actions.payload.userId,\r\n      data.album._id,\r\n      actions.payload.arrayPhotos\r\n    )\r\n    yield put(getListAlbumsWithPhotosByUserIDAction(actions.payload.userId))\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* setListPhotosForCurrentAlbum(actions: any) {\r\n  try {\r\n    yield put(setLoadingStatePhotosInCurrentAlbumAction(LoadingState.Loading))\r\n    const arrayAlbums = yield ServiceAlbums.getListPhotosByAlbumID(\r\n      actions.payload\r\n    )\r\n    if (arrayAlbums.length) {\r\n      yield put(getUserOwnerThisPage(arrayAlbums[0].ownerUser))\r\n      yield put(setListPhotosForCurrentAlbumAction(arrayAlbums[0].photos))\r\n      yield put(setLoadingStatePhotosInCurrentAlbumAction(LoadingState.Loaded))\r\n    } else {\r\n      yield put(\r\n        setLoadingStatePhotosInCurrentAlbumAction(LoadingState.NotFound)\r\n      )\r\n    }\r\n  } catch (e) {\r\n    yield put(setLoadingStatePhotosInCurrentAlbumAction(LoadingState.Error))\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* addPhotosInCurrentAlbum(actions: any) {\r\n  try {\r\n    yield ServicePhotos.addPhotosIntoFsAndAlbum(\r\n      actions.payload.userOwnerThisPageId,\r\n      actions.payload.albumId,\r\n      actions.payload.arrayPhotos\r\n    )\r\n    yield put(getListPhotosByAlbumIdAction(actions.payload.albumId))\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* removePhotoFromCurrentAlbum(actions: any) {\r\n  try {\r\n    yield ServicePhotos.removeHandler(actions.payload.photoId)\r\n    yield put(getListPhotosByAlbumIdAction(actions.payload.albumId))\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* setListPhotosForUser(actions: any) {\r\n  try {\r\n    const arrayPhotos = yield ServicePhotos.getPhotosById(actions.payload)\r\n    yield put(setListPhotosForUserAction(arrayPhotos.data))\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nexport default function* albumsSaga() {\r\n  yield takeEvery(\r\n    ActionTypes.GET_LIST_ALBUMS_WITH_PHOTOS,\r\n    setListAlbumsWithPhotosInStore\r\n  )\r\n  yield takeEvery(ActionTypes.REMOVE_ALBUM, removeAlbum)\r\n  yield takeEvery(ActionTypes.ADD_ALBUM, addAlbumByUserId)\r\n  yield takeEvery(\r\n    ActionTypes.GET_LIST_PHOTOS_BY_ALBUM_ID,\r\n    setListPhotosForCurrentAlbum\r\n  )\r\n  yield takeEvery(\r\n    ActionTypes.ADD_PHOTOS_IN_CURRENT_ALBUM,\r\n    addPhotosInCurrentAlbum\r\n  )\r\n  yield takeEvery(\r\n    ActionTypes.REMOVE_PHOTO_FROM_CURRENT_ALBUM,\r\n    removePhotoFromCurrentAlbum\r\n  )\r\n  yield takeEvery(ActionTypes.GET_LIST_PHOTOS_BY_USER_ID, setListPhotosForUser)\r\n}\r\n","import { call, put, takeEvery } from \"redux-saga/effects\"\r\nimport Service from \"../../../services/service-user\"\r\nimport ServiceFriends from \"../../../services/service-friend\"\r\nimport { LoadingState } from \"../../../shared/constants/user-from-view-mode.enum\"\r\nimport { LoadingStateForNavbar } from \"../../../shared/constants/user-from-view-mode.enum\"\r\nimport {\r\n  setLoadingState,\r\n  loadingStateForNavbar,\r\n} from \"../loading/loading.actions\"\r\n\r\nimport {\r\n  ActionTypes,\r\n  setUserLoginInStore,\r\n  setUserOwnerThisPageInStore,\r\n  setAllUsersInStore,\r\n  setInitialStateForUserReducer,\r\n  getFailureAction,\r\n} from \"./user.actions\"\r\n\r\nfunction* setUserLoginInStoreSaga(actions: any) {\r\n  try {\r\n    yield put(setLoadingState(LoadingState.Loading))\r\n    const data = yield Service.getTokenForLogin(\r\n      actions.payload.userId,\r\n      actions.payload.user\r\n    )\r\n    if (data.user._id) {\r\n      yield localStorage.setItem(\"token\", data.token)\r\n      yield put(setUserLoginInStore(data.user))\r\n      yield put(setLoadingState(LoadingState.Loaded))\r\n    } else {\r\n      yield put(setLoadingState(LoadingState.NotFound))\r\n    }\r\n  } catch (e) {\r\n    yield put(setLoadingState(LoadingState.Error))\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* setUserSignUpInStoreSaga(actions: any) {\r\n  try {\r\n    yield put(setLoadingState(LoadingState.Loading))\r\n    const data = yield Service.getTokenForRegistration(\r\n      actions.payload.userId,\r\n      actions.payload.user\r\n    )\r\n    if (data.user._id) {\r\n      yield localStorage.setItem(\"token\", data.token)\r\n      yield put(setUserLoginInStore(data.user))\r\n      yield put(setLoadingState(LoadingState.Loaded))\r\n    } else {\r\n      yield put(setLoadingState(LoadingState.NotFound))\r\n    }\r\n  } catch (e) {\r\n    yield put(setLoadingState(LoadingState.Error))\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* setUserRefreshInStoreSaga() {\r\n  try {\r\n    yield put(loadingStateForNavbar(LoadingStateForNavbar.Loading))\r\n    const userLog = yield Service.getUserByToken()\r\n    if (userLog._id) {\r\n      yield put(setUserLoginInStore(userLog))\r\n      yield put(loadingStateForNavbar(LoadingStateForNavbar.Loaded))\r\n    } else {\r\n      yield put(loadingStateForNavbar(LoadingStateForNavbar.NotFound))\r\n    }\r\n  } catch (e) {\r\n    yield put(loadingStateForNavbar(LoadingStateForNavbar.Error))\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* setUserOwnerThisPageInStoreSaga(actions: any) {\r\n  try {\r\n    yield put(setLoadingState(LoadingState.Loading))\r\n    const userOwnerThisPage = yield call(Service.getUserByID, actions.payload)\r\n    if (userOwnerThisPage._id) {\r\n      yield put(setUserOwnerThisPageInStore(userOwnerThisPage))\r\n      yield put(setLoadingState(LoadingState.Loaded))\r\n    } else {\r\n      yield put(setLoadingState(LoadingState.NotFound))\r\n    }\r\n  } catch (e) {\r\n    yield put(setLoadingState(LoadingState.Error))\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* setAllUsersSaga(actions: any) {\r\n  try {\r\n    yield put(setLoadingState(LoadingState.Loading))\r\n    let list\r\n    if (actions.payload === \"\") list = []\r\n    else list = yield Service.getUserWithSubscriptionsById(actions.payload)\r\n    if (list.length) {\r\n      yield put(setAllUsersInStore(list))\r\n      yield put(setLoadingState(LoadingState.Loaded))\r\n    } else {\r\n      yield put(setLoadingState(LoadingState.NotFound))\r\n    }\r\n  } catch (e) {\r\n    yield put(setLoadingState(LoadingState.Error))\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* setAllUsersAfterPaginationSaga(actions: any) {\r\n  try {\r\n    // yield put(setLoadingState(LoadingState.Loading))\r\n    let list\r\n    if (actions.payload === \"\") list = []\r\n    else\r\n      list = yield Service.getUserAfterPaginationAndSearchAndFilter(\r\n        actions.payload\r\n      )\r\n    // if (list.length) {\r\n    yield put(setAllUsersInStore(list))\r\n    // yield put(setLoadingState(LoadingState.Loaded))\r\n    // } else {\r\n    // yield put(setLoadingState(LoadingState.NotFound))\r\n    // }\r\n  } catch (e) {\r\n    // yield put(setLoadingState(LoadingState.Error))\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* getAllFriendsByUserIdSaga(actions: any) {\r\n  try {\r\n    yield put(setLoadingState(LoadingState.Loading))\r\n    let list\r\n    if (actions.payload === \"\") list = []\r\n    else list = yield ServiceFriends.getArrayFriendsByIdUser(actions.payload)\r\n    if (list.length) {\r\n      yield put(setAllUsersInStore(list))\r\n      yield put(setLoadingState(LoadingState.Loaded))\r\n    } else {\r\n      yield put(setLoadingState(LoadingState.NotFound))\r\n    }\r\n  } catch (e) {\r\n    yield put(setLoadingState(LoadingState.Error))\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* setUserLogOutInStoreSaga(actions: any) {\r\n  try {\r\n    yield Service.logOutAllDevices(actions.userId, actions.user)\r\n    yield put(setInitialStateForUserReducer())\r\n    yield localStorage.removeItem(\"token\")\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield takeEvery(ActionTypes.GET_USER_LOGIN, setUserLoginInStoreSaga)\r\n  yield takeEvery(ActionTypes.GET_USER_SIGN_UP, setUserSignUpInStoreSaga)\r\n  yield takeEvery(ActionTypes.GET_USER_REFRESH, setUserRefreshInStoreSaga)\r\n  yield takeEvery(\r\n    ActionTypes.GET_USER_OWNER_THIS_PAGE,\r\n    setUserOwnerThisPageInStoreSaga\r\n  )\r\n  yield takeEvery(\r\n    ActionTypes.LOG_OUT_USER_FOR_ALL_DEVICES,\r\n    setUserLogOutInStoreSaga\r\n  )\r\n  yield takeEvery(ActionTypes.GET_ALL_USERS, setAllUsersSaga)\r\n  yield takeEvery(\r\n    ActionTypes.GET_ALL_USERS_AFTER_PAGINATION,\r\n    setAllUsersAfterPaginationSaga\r\n  )\r\n  yield takeEvery(\r\n    ActionTypes.GET_ALL_FRIENDS_BY_USER_ID,\r\n    getAllFriendsByUserIdSaga\r\n  )\r\n  // yield takeEvery(\r\n  //   ActionTypes.GET_ALL_SUBSCRIPTIONS_BY_USER_ID,\r\n  //   setAllSubscriptionsByUserIdSaga\r\n  // )\r\n  // yield takeEvery(\r\n  //   ActionTypes.GET_ALL_SUBSCRIBERS_BY_USER_ID,\r\n  //   setAllSubscribersByUserIdSaga\r\n  // )\r\n}\r\n","import React from \"react\"\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\nimport { Provider } from \"react-redux\"\nimport { createStore, applyMiddleware } from \"redux\"\nimport { composeWithDevTools } from \"redux-devtools-extension\"\nimport createSagaMiddleware from \"redux-saga\"\nimport AllUsersPage from \"./pages/allUsersPage/allUsersPage\"\nimport UserInformationPage from \"./pages/userInformationPage/userInformationPage\"\nimport GetLoginPage from \"./pages/GetLoginPage/GetLoginPage\"\nimport GetLogUpPage from \"./pages/GetLogUpPage/GetLogUpPage\"\nimport { GetStartPage } from \"./pages/GetStartPage/GetStartPage\"\nimport Navbar from \"./components/Navbar/Navbar\"\nimport {\n  PrivateRoute,\n  defaultPrivateRouteProps,\n} from \"./PrivateRoutes/PrivateRouteForUsers\"\nimport {\n  PrivateRouteForAdmins,\n  defaultPrivateRouteForAdminsProps,\n} from \"./PrivateRoutes/PrivateRouteForAdmins\"\nimport GetAlbumByID from \"./pages/GetAlbumByID/GetAlbumByID\"\nimport PageFriends from \"./pages/pageFriends/pageFriends\"\nimport AllAlbumsPage from \"./pages/allAlbumsPage/allAlbumsPage\"\nimport AllPhotosPage from \"./pages/allPhotosPage/allPhotosPage\"\nimport NotFound from \"./pages/NotFoundPage/NotFound\"\nimport { AdminAllUsers } from \"./pages/AdminPages/AdminAllUser/AdminAllUser\"\nimport { UserEditInformation } from \"./pages/UserEditInformationPage/UserEditInformationPage\"\nimport rootReducer from \"./Redux\"\nimport AppCSS from \"./App.module.css\"\nimport Box from \"@material-ui/core/Box\"\nimport DialogsPage from \"./pages/DialogsPage/DialogsPage\"\nimport avatarSaga from \"./Redux/store/avatar/avatar.sagas\"\nimport dialogSaga from \"./Redux/store/dialogs/dialogs.sagas\"\nimport albumsSaga from \"./Redux/store/albums/albums.sagas\"\nimport userSaga from \"./Redux/store/user/user.sagas\"\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools({ trace: true, traceLimit: 25 })(\n    applyMiddleware(sagaMiddleware)\n  )\n)\n\nsagaMiddleware.run(avatarSaga)\nsagaMiddleware.run(dialogSaga)\nsagaMiddleware.run(albumsSaga)\nsagaMiddleware.run(userSaga)\n\nexport const App: React.FC = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <Box component=\"div\" className={AppCSS.wrapper}>\n        <Navbar />\n        <Box component=\"main\" className=\"main\">\n          <Switch>\n            <Route\n              component={GetStartPage}\n              path=\"/social-network-client\"\n              exact\n            />\n            <Route component={GetLoginPage} path=\"/LogIn\" exact />\n            <Route component={GetLogUpPage} path=\"/SignUp\" exact />\n            <PrivateRoute\n              {...defaultPrivateRouteProps}\n              component={DialogsPage}\n              path=\"/:id/dialogs\"\n              exact\n            />\n            <PrivateRoute\n              {...defaultPrivateRouteProps}\n              component={AllUsersPage}\n              path=\"/user/allUsers\"\n              exact\n            />\n            <PrivateRoute\n              {...defaultPrivateRouteProps}\n              component={UserInformationPage}\n              path=\"/user/profile/:id\"\n              exact\n            />\n            <PrivateRoute\n              {...defaultPrivateRouteProps}\n              component={PageFriends}\n              path=\"/user/:id/friends\"\n              exact\n            />\n            <PrivateRoute\n              {...defaultPrivateRouteProps}\n              component={GetAlbumByID}\n              path=\"/user/:id/album\"\n              exact\n            />\n            <PrivateRoute\n              {...defaultPrivateRouteProps}\n              component={AllAlbumsPage}\n              path=\"/user/:id/allAlbums\"\n              exact\n            />\n            <PrivateRoute\n              {...defaultPrivateRouteProps}\n              component={AllPhotosPage}\n              path=\"/user/:id/allPhotos\"\n              exact\n            />\n            <PrivateRoute\n              {...defaultPrivateRouteProps}\n              component={UserEditInformation}\n              path=\"/user/:id/edit\"\n              exact\n            />\n            <PrivateRouteForAdmins\n              {...defaultPrivateRouteForAdminsProps}\n              component={AdminAllUsers}\n              path=\"/admin/all\"\n              exact\n            />\n            <PrivateRouteForAdmins\n              {...defaultPrivateRouteForAdminsProps}\n              component={AdminAllUsers}\n              path=\"/admin/:id\"\n              exact\n            />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </Box>\n      </Box>\n    </BrowserRouter>\n  </Provider>\n)\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    )\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\")\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\")\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport { App } from \"./App\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\nimport ScopedCssBaseline from \"@material-ui/core/ScopedCssBaseline/ScopedCssBaseline\"\r\n\r\nReactDOM.render(\r\n  <ScopedCssBaseline>\r\n    <App />\r\n  </ScopedCssBaseline>,\r\n  document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_logIn_container\":\"FormDataUsersRender_form_logIn_container__3WlAZ\",\"form_logIn__fields_container\":\"FormDataUsersRender_form_logIn__fields_container__XlzWG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_page__dialog_page__window_dialog\":\"WindowDialog_dialogs_page__dialog_page__window_dialog__WmoMr\",\"dialogs_page__dialog_page__window_dialog__list_message\":\"WindowDialog_dialogs_page__dialog_page__window_dialog__list_message__1LULb\",\"dialogs_page__add_dialogs__block_button_input\":\"WindowDialog_dialogs_page__add_dialogs__block_button_input__2NSQ5\",\"dialogs_page__add_dialogs_input\":\"WindowDialog_dialogs_page__add_dialogs_input__24ZVH\",\"dialogs_page__add_dialogs_button\":\"WindowDialog_dialogs_page__add_dialogs_button__3qYI8\",\"dialogs_page__message__left_side\":\"WindowDialog_dialogs_page__message__left_side__LmyHF\",\"dialogs_page__message__right_side\":\"WindowDialog_dialogs_page__message__right_side__tI6CJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__all_users__card_user__delete\":\"UserCard_container__all_users__card_user__delete__Ym2YZ\",\"container__all_users__card_user\":\"UserCard_container__all_users__card_user__2m3NR\",\"all_users__card_user__login\":\"UserCard_all_users__card_user__login__AWnnr\",\"all_users__card_user__friends\":\"UserCard_all_users__card_user__friends__3iXr1\",\"all_users__card_user__role\":\"UserCard_all_users__card_user__role__1hpxV\",\"all_users__card_user__button\":\"UserCard_all_users__card_user__button__3MqpX\"};"],"sourceRoot":""}