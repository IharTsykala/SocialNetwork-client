{"version":3,"sources":["pages/allUsersPage/headerAllUsersBlock/headerAllUsersPage.module.css","pages/userInformationPage/InformationBlock/InformationBlock.module.css","pages/userInformationPage/AlbumsBlock/AlbumsBlock.module.css","pages/allPhotosPage/allPhotosPage.module.css","components/PanelDialogs/PanelDialogs.module.css","components/Search/Search.module.css","components/CreateList/CreateList.module.css","components/PhotoModalWindow/PhotoModalWindow.module.css","pages/allUsersPage/mainAllUsersBlock/mainAllUsersBlock.module.css","components/PaginationBlock/PaginationBlock.module.css","components/PaginationBlock/AmountPagination/AmountPagination.module.css","components/PaginationBlock/NumberBlockPagination/NumberBlockPagination.module.css","pages/allUsersPage/allUsersPage.module.css","pages/userInformationPage/userInformationPage.module.css","pages/userInformationPage/AvatarBlock/AvatarBlock.module.css","pages/userInformationPage/NavigationBlock/NavigationBlock.module.css","pages/GetLoginPage/GetLoginPage.module.css","pages/GetLogUpPage/GetLogUpPage.module.css","pages/GetStartPage/GetStartPage.module.css","pages/pageFriends/pageFriends.module.css","pages/allAlbumsPage/allAlbumsPage.module.css","pages/DialogsPage/DialogsPage.module.css","Redux/store/searchStringState/searchStringState.actions.ts","components/Search/Search.tsx","Redux/store/checkBoxState/checkBoxState.actions.ts","pages/allUsersPage/headerAllUsersBlock/headerAllUsersBlock.tsx","services/service-subscribe.ts","services/service-friend.ts","services/service-user.ts","components/UserCard/UserCard.tsx","shared/constants/user-from-view-mode.enum.ts","Redux/store/allUsers/allUsers.actions.ts","pages/allUsersPage/mainAllUsersBlock/mainAllUsersBlock.tsx","Redux/store/pagination/pagination.actions.ts","Redux/store/allUsersWithPaginationSearchFilter/allUsersWithPaginationSearchFilter.actions.ts","components/PaginationBlock/AmountPagination/AmountPagination.tsx","components/PaginationBlock/NumberBlockPagination/NumberBlockPagination.tsx","components/PaginationBlock/PaginationBlock.tsx","pages/allUsersPage/allUsersPage.tsx","pages/userInformationPage/AvatarBlock/AvatarBlock.tsx","pages/userInformationPage/InformationBlock/InformationBlock.tsx","pages/userInformationPage/NavigationBlock/NavigationBlock.tsx","components/PhotoCard/PhotoCard.tsx","components/CreateList/CreateList.tsx","Redux/store/albums/albums.action.ts","pages/userInformationPage/AlbumsBlock/AlbumsBlock.tsx","Redux/store/userOwnerThisPage/userOwnerThisPage.actions.ts","Redux/store/avatar/avatar.actions.ts","pages/userInformationPage/userInformationPage.tsx","components/FormDataUsers/FormDataUsers.tsx","Redux/store/userLogin/userLogin.actions.ts","pages/GetLoginPage/GetLoginPage.tsx","pages/GetLogUpPage/GetLogUpPage.tsx","pages/GetStartPage/GetStartPage.tsx","components/Navbar/Navbar.tsx","PrivateRoutes/PrivateRouteForUsers.tsx","PrivateRoutes/PrivateRouteForAdmins.tsx","components/PhotoModalWindow/PhotoModalWindow.tsx","pages/GetAlbumByID/GetAlbumByID.tsx","pages/pageFriends/pageFriends.tsx","pages/allAlbumsPage/allAlbumsPage.tsx","pages/allPhotosPage/allPhotosPage.tsx","pages/NotFoundPage/NotFound.tsx","pages/AdminPages/AdminAllUser/AdminAllUser.tsx","pages/UserEditInformationPage/UserEditInformationPage.tsx","Redux/store/userOwnerThisPage/userOwnerThisPage.reducer.ts","Redux/store/userLogin/userLogin.reducer.ts","Redux/store/allUsers/allUsers.reducer.ts","Redux/store/dialogs/dialogs.actions.ts","Redux/store/dialogs/dialogs.reducer.ts","Redux/store/listMessagesForCurrentDialog/listMessagesForCurrentDialog.actions.ts","Redux/store/listMessagesForCurrentDialog/listMessagesForCurrentDialog.reducer.ts","Redux/store/pagination/pagination.reducer.ts","Redux/store/checkBoxState/checkBoxState.reducer.ts","Redux/store/searchStringState/searchStringState.reducer.ts","Redux/store/loading/loading.actions.ts","Redux/store/loading/loading.reducer.ts","Redux/store/albums/albums.reducer.ts","Redux/store/index.ts","components/WindowDialog/WindowDialog.tsx","components/PanelDialogs/PanelDialogs.tsx","pages/DialogsPage/DialogsPage.tsx","Redux/store/userOwnerThisPage/userOwnerThisPage.sagas.ts","services/service-message.ts","Redux/store/listMessagesForCurrentDialog/listMessagesForCurrentDialog.sagas.ts","Redux/store/allUsers/allUsers.sagas.ts","Redux/store/userLogin/userLogin.sagas.ts","Redux/store/avatar/avatar.sagas.ts","services/service-dialog.ts","Redux/store/dialogs/dialogs.sagas.ts","services/service-album.ts","services/service-photo.ts","Redux/store/albums/albums.sagas.ts","App.tsx","serviceWorker.ts","index.tsx","components/WindowDialog/WindowDialog.module.css","components/UserCard/UserCard.module.css","components/PhotoCard/PhotoCard.module.css","components/Navbar/Navbar.module.css","pages/GetAlbumByID/GetAlbumByID.module.css"],"names":["module","exports","ActionTypes","connect","state","searchStringState","dispatch","useState","stateValue","setStateValue","handlerInputSearchBox","e","target","value","length","type","payload","className","SearchCSS","all_users__header_block__search_box","InputBase","id","all_users__header_block__search_box__input","onInput","placeholder","setPrevCheckBoxStateAction","checkBoxState","handleClickFriendCheckBox","a","headerAllUsersPageCSS","container__all_users__header","container__all_users__header__checkboxBlock","Checkbox","checked","onClick","container__all_users__header__sort_checkbox","axios","require","ServiceSubscriptions","interceptor","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","getStatusUsersSubscribeByID","idLogInUser","get","response","data","getAllObservables","addSubscribe","IdObserversUser","subscribe","requestSubscriberId","responseSubscriberId","post","deleteSubscribe","delete","deleteSubscribeAfterAddFriend","ServiceFriends","getLogInUserAllFriends","addFriend","IdRequestUser","requestFriendId","responseFriendId","removeFriend","IdSecondUser","getArrayFriendsByIdUser","Service","getAllUsers","console","log","getFilteredUsers","valueSearchBox","editUser","user","put","removeHandler","getUserByID","getUserByToken","getTokenForLogin","getTokenForRegistration","logOutAllDevices","getListPetsByUserID","setImgUser","avatar","formData","FormData","append","fileName","getListAlbumsByUserID","getListPhotosByUserID","getListAlbumsWithPhotosByUserID","getUserWithSubscriptionsById","userLogin","getUserAfterPaginationAndSearchAndFilter","body","UserFormViewModes","UserFormViewButtons","LoadingState","common","userOwnerCard","getLogInUserAllSubscriptionsAndObserver","history","useHistory","useEffect","subscriptions","handlerClickSubscribe","_id","handlerClickUnSubscribe","handlerClickAddFriend","handlerClickRemoveFriend","UserCardCSS","container__all_users__card_user","role","container__all_users__card_user__delete","src","alt","push","all_users__card_user__login","login","all_users__card_user__friends","all_users__card_user__role","all_users__card_user__button","getAllUsersForSagasAction","userId","getFriendsByUserIdAction","getFailureAction","allUsers","load","setLoad","MainAllUsersBlockPageCSS","container__all_users__cards","map","key","setValuesForPaginationAction","pagination","getUsersAfterPaginationAndSearchAndFilter","limitRender","limitUsersForRender","numberPage","AmountPaginationCSS","All_Users__Pagination_Block__Select_block","InputLabel","htmlFor","Select","native","onChange","newLimitRender","page","undefined","countUsers","Math","ceil","handleChangeSelect","NumberBlockPaginationCSS","All_Users__Pagination_Block__Button_block","Button","variant","component","disabled","countPage","prevChecked","prevCheckBoxState","timerId","setTimerId","clearTimeout","clearInterval","setTimeout","PaginationBlockCSS","All_Users__Pagination_Block","AllUsersPage","allUsersPageCSS","container__all_users","userOwnerThisPage","userOwnerThisPageForSagas","homePageStatus","avatarForFront","handleChangeAvatar","handleSubmit","action","AvatarBlockCSS","profile__change_avatar__form","InformationBlockCSS","user_profile__user_information","Box","user_profile__user_information__block_information","List","aria-label","ListItem","button","ListItemText","primary","secondary","firstName","lastName","email","phone","user_profile__user_information__block_button","to","NavigationBlockCSS","user_information__navigation_block","ListItemAvatar","Avatar","Divider","urlItem","idItem","editHandler","idChosenAlbum","launchTogglePhotoModalWindow","ownerUser","Card","PhotoCardCSS","photoAlbum__photoCard_block__card","CardMedia","image","title","photoAlbum__photoCard_block__card__photo","CardActions","photoAlbum__photoCard_block__card__actions","size","color","CreateList","arr","createListFunction","CreateListCSS","user_profile__create_list__container","item","user_profile__card_container","photos","url","getListAlbumsWithPhotosByUserIDAction","getListPhotosByAlbumIdAction","albumId","removePhotoFromCurrentAlbumAction","photoId","albumsForUserOwnerPage","albumsState","getList","useCallback","addChangeHandler","arrayFiles","files","arrayPhotos","AlbumsBlockCSS","main__user_profile__albums_block","removeAlbumAction","albums_block__button","label__input","multiple","getUserOwnerThisPageActionForSagas","setUserOwnerThisPageActionForSagas","getAvatarAction","match","setAvatarForFront","avatarForBack","setAvatarForBack","setHomePageStatus","idUserOwnerPage","params","render","preventDefault","userInformationPageCSS","container__user_information_page","display","p","m","bgcolor","URL","createObjectURL","submitHandler","namePage","nameButton","initialValues","password","validationSchema","Yup","max","required","onSubmit","values","FormDataUsersCSS","user_information__edit","user_information__edit__label__input","name","Edit","SingUp","userLogIn","logInHandler","setItem","GetLoginPageCSS","main__log_in__header","LogIn","logUpHandler","GetLogUpPageCSS","main__sign_up__header","GetStartPage","GetStartPageCSS","main__container__start_page__header","loadingState","getUserAfterLogInAndRefresh","handlerLogOut","NavbarCSS","navbar_container","href","navbar__avatar__brand_logo","navbar__avatar","defaultPrivateRouteProps","isAuthenticated","authenticationPath","PrivateRoute","props","redirectPath","pathname","defaultPrivateRouteForAdminsProps","isAdmin","restrictedAdminPath","PrivateRouteForAdmins","PhotoModalWindow","arrayPhotosChosenAlbum","currentUrlPhotoForLoop","currentIndex","findIndex","photo","handleOnDragStart","PhotoModalWindowCSS","user_profile__chosen_album__photo_loop","startIndex","mouseTrackingEnabled","onDragStart","user_profile__chosen_album__photo_loop__img","currentAlbum","loadingStatePhotosInCurrentAlbum","statusPhotoModalWindow","setStatusPhotoModalWindow","setCurrentUrlPhotoForLoop","userOwnerThisPageId","GetAlbumByIDCSS","main__user_profile__album_block","photos__container_drag_and_drop","photos__container_drag_and_drop__label","allFriends","PageFriendsCSS","AllAlbumsPage","AllAlbumsPageCSS","AllAlbumPage__container","allPhotosForThisUser","thisUserId","AllPhotosPageCSS","AllPhotoPage__container","user_profile__photos_list__container","user_profile__photo_container","NotFound","AdminAllUsers","UserEditInformation","initialState","addDialogAction","dialog","currentDialog","allDialogs","listMessagesForCurrentDialog","setLoadingState","setLoadingStatePhotosInCurrentAlbumAction","combineReducers","concat","valueInput","setValueInput","getMessagesFromBD","currentDialogId","addMessageState","message","joinInRoom","handlerClickButton","sendMessage","WindowDialogCSS","dialogs_page__dialog_page__window_dialog","dialogs_page__dialog_page__window_dialog__list_message","Fragment","authorId","dialogs_page__message__left_side","dialogs_page__message__right_side","authorLogin","dialogs_page__add_dialogs__block_button_input","TextField","label","dialogs_page__add_dialogs_input","handlerChangeInput","dialogs_page__add_dialogs_button","listDialogs","loaded","stateLoading","flagModalWindow","setFlagModalWindow","getListDialogs","thisUserLogin","dialogName","members","PanelDialogsCSS","dialogs_page__rules_dialogs","dialogs_page__rules_dialogs__list_dialogs","currentDialogAction","secondUser","sendDialog","DialogsPage","DialogsPageCSS","dialogs_page","setUserOwnerThisPage","getUserOwnerThisPageForSaga","actions","call","takeEvery","ServiceMessage","getAllMessagesByIdDialog","idDialog","putInStoreAllMessagesCurrentDialog","putInStoreNewMessageForCurrentDialog2","putInStoreNewMessageForCurrentDialogSaga","list","newMessageForCurrentDialog","putAllUsersInState","setAllUsersWithPaginationSearchFilter","setFriendsForUser","putInStoreAllUsersSaga","setUserLoginInStore","setUserLogoutInStore","userLoginSaga","loading","userLog","notFound","removeItem","setAvatar","avatarSaga","imgName","newUser","Object","assign","ServiceDialog","getAllDialogs","getAllDialogsById","addDialog","setAllDialogsByUserIdInStore","dialogSaga","listForRender","ServiceAlbums","getAllAlbums","addAlbum","album","editAlbum","getListPhotosByAlbumID","ServicePhotos","getPhotosById","i","fileNames","addPhoto","idUser","arrayUrl","addPhotoIntoAlbum","idAlbum","arrPhotoUrl","ownerAlbum","addPhotosIntoFsAndAlbum","setListAlbumsWithPhotosInStore","removeAlbum","addAlbumByUserId","setListPhotosForCurrentAlbum","addPhotosInCurrentAlbum","removePhotoFromCurrentAlbum","setListPhotosForUser","albumsSaga","listAlbums","arrayAlbums","albums","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","composeWithDevTools","trace","traceLimit","applyMiddleware","run","putInStoreNewMessageforCurrentDialogSaga","Boolean","window","location","hostname","ReactDOM","path","exact","GetLoginPage","GetLogUpPage","UserInformationPage","PageFriends","GetAlbumByID","AllPhotosPage","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b7768cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__all_users__header\":\"headerAllUsersPage_container__all_users__header__II6Ut\",\"container__all_users__header__checkboxBlock\":\"headerAllUsersPage_container__all_users__header__checkboxBlock__1ZnC-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_profile__user_information\":\"InformationBlock_user_profile__user_information__2S0ZV\",\"user_profile__user_information__block_information\":\"InformationBlock_user_profile__user_information__block_information__1fSah\",\"user_profile__user_information__block_button\":\"InformationBlock_user_profile__user_information__block_button__3wqwh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main__user_profile__albums_block\":\"AlbumsBlock_main__user_profile__albums_block__3oIdF\",\"albums_block__button\":\"AlbumsBlock_albums_block__button__2np2C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AllPhotoPage__container\":\"allPhotosPage_AllPhotoPage__container__dJhDJ\",\"user_profile__photos_list__container\":\"allPhotosPage_user_profile__photos_list__container__2YUpd\",\"user_profile__photo_container\":\"allPhotosPage_user_profile__photo_container__OFJ_Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_page__rules_dialogs\":\"PanelDialogs_dialogs_page__rules_dialogs__yN1S0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all_users__header_block__search_box\":\"Search_all_users__header_block__search_box__Y_9qW\",\"all_users__header_block__search_box__input\":\"Search_all_users__header_block__search_box__input__QO79a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_profile__create_list__container\":\"CreateList_user_profile__create_list__container__2eiVB\",\"user_profile__card_container\":\"CreateList_user_profile__card_container__1VLF6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_profile__chosen_album__photo_loop\":\"PhotoModalWindow_user_profile__chosen_album__photo_loop__1pWVb\",\"user_profile__chosen_album__photo_loop__img\":\"PhotoModalWindow_user_profile__chosen_album__photo_loop__img__32ych\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__all_users__cards\":\"mainAllUsersBlock_container__all_users__cards__349pq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"All_Users__Pagination_Block\":\"PaginationBlock_All_Users__Pagination_Block__3cmAh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"All_Users__Pagination_Block__Select_block\":\"AmountPagination_All_Users__Pagination_Block__Select_block__23hDJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"All_Users__Pagination_Block__Button_block\":\"NumberBlockPagination_All_Users__Pagination_Block__Button_block__UV6Tk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__all_users\":\"allUsersPage_container__all_users__3_CQ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__user_information_page\":\"userInformationPage_container__user_information_page__1ZAwk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__change_avatar__form\":\"AvatarBlock_profile__change_avatar__form__1E4LD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_information__navigation_block\":\"NavigationBlock_user_information__navigation_block__dLh-Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main__log_in__header\":\"GetLoginPage_main__log_in__header__2a7GQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main__sign_up__header\":\"GetLogUpPage_main__sign_up__header__1zVfm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main__container__start_page__header\":\"GetStartPage_main__container__start_page__header__2t7Rr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__all_users__cards\":\"pageFriends_container__all_users__cards__2mJeX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AllAlbumPage__container\":\"allAlbumsPage_AllAlbumPage__container__jQt-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_page\":\"DialogsPage_dialogs_page__2hhWE\"};","import { Action } from \"../interfaces/action.interface\"\r\n\r\nexport const ActionTypes = {\r\n  SET_INITIAL_SEARCH_STRING_STATE:\r\n    \"[setInitialSearchStringState] set initial search string state\",\r\n  SET_CURRENT_SEARCH_STRING_STATE:\r\n    \"[setCurrentSearchStringState] set current search string state\"\r\n}\r\n\r\nexport const setInitialSearchStringStateAction = (): Action<\"\"> => ({\r\n  type: ActionTypes.SET_INITIAL_SEARCH_STRING_STATE\r\n})\r\n\r\nexport const setCurrentSearchStringState = (\r\n  searchStringState: String\r\n): Action<String> => ({\r\n  type: ActionTypes.SET_CURRENT_SEARCH_STRING_STATE,\r\n  payload: searchStringState\r\n})\r\n","import React, { useState } from \"react\"\r\nimport InputBase from \"@material-ui/core/InputBase\"\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\nimport SearchCSS from \"./Search.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  setInitialSearchStringStateAction,\r\n  setCurrentSearchStringState\r\n} from \"../../Redux/store/searchStringState/searchStringState.actions\"\r\n\r\ntype SearchProps = {\r\n  dispatch: any\r\n}\r\n\r\nconst Search: React.FunctionComponent<SearchProps> = ({ dispatch }) => {\r\n  const [stateValue, setStateValue] = useState(\"\")\r\n  const handlerInputSearchBox = (e: any) => {\r\n    setStateValue(e.target.value)\r\n    if (e.target.value.length > 2)\r\n      dispatch(setCurrentSearchStringState(e.target.value))\r\n    else dispatch(setInitialSearchStringStateAction())\r\n  }\r\n\r\n  return (\r\n    <div className={SearchCSS.all_users__header_block__search_box}>\r\n      <SearchIcon />\r\n      <InputBase\r\n        id=\"InputBase\"\r\n        className={SearchCSS.all_users__header_block__search_box__input}\r\n        value={stateValue}\r\n        onInput={e => handlerInputSearchBox(e)}\r\n        placeholder=\"Search…\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  searchStringState: state.searchStringState.searchStringState\r\n})\r\n\r\nexport default connect(mapStateToProps)(Search)\r\n","import { Action } from \"../interfaces/action.interface\"\r\n\r\nexport const ActionTypes = {\r\n  SET_CHECK_BOX_STATE: \"[setCheckBoxState] set check box state\",\r\n  CHANGE_CHECK_BOX_STATE: \"[changeCheckBoxState] change check box state\",\r\n  SET_PREV_CHECK_BOX_STATE: \"[setPrevCheckBoxState] set prev check box state\"\r\n}\r\n\r\nexport const setCheckBoxStateAction = (\r\n  checkBoxState: boolean\r\n): Action<boolean> => ({\r\n  type: ActionTypes.SET_CHECK_BOX_STATE,\r\n  payload: checkBoxState\r\n})\r\n\r\nexport const changeCheckBoxStateAction = (): Action<boolean> => ({\r\n  type: ActionTypes.CHANGE_CHECK_BOX_STATE\r\n})\r\n\r\nexport const setPrevCheckBoxStateAction = (\r\n  checkBoxState: boolean\r\n): Action<boolean> => ({\r\n  type: ActionTypes.SET_PREV_CHECK_BOX_STATE,\r\n  payload: checkBoxState\r\n})\r\n","import React from \"react\"\r\nimport headerAllUsersPageCSS from \"./headerAllUsersPage.module.css\"\r\nimport Search from \"../../../components/Search/Search\"\r\nimport Checkbox from \"@material-ui/core/Checkbox\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  changeCheckBoxStateAction,\r\n  setPrevCheckBoxStateAction\r\n} from \"../../../Redux/store/checkBoxState/checkBoxState.actions\"\r\n\r\ntype HeaderAllUsersBlockProps = {\r\n  checkBoxState: boolean\r\n  dispatch: any\r\n}\r\n\r\nconst HeaderAllUsersBlock: React.FunctionComponent<HeaderAllUsersBlockProps> = ({\r\n  checkBoxState,\r\n  dispatch\r\n}) => {\r\n  const handleClickFriendCheckBox = async () => {\r\n    dispatch(setPrevCheckBoxStateAction(checkBoxState))\r\n    dispatch(changeCheckBoxStateAction())\r\n  }\r\n\r\n  return (\r\n    <div className={headerAllUsersPageCSS.container__all_users__header}>\r\n      <Search />\r\n      <h2>Make friends</h2>\r\n      <div\r\n        className={\r\n          headerAllUsersPageCSS.container__all_users__header__checkboxBlock\r\n        }\r\n      >\r\n        <p>Filter</p>\r\n        <Checkbox\r\n          checked={checkBoxState}\r\n          onClick={() => handleClickFriendCheckBox()}\r\n          className={\r\n            headerAllUsersPageCSS.container__all_users__header__sort_checkbox\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  checkBoxState: state.checkBoxState.checkBoxState\r\n})\r\n\r\nexport default connect(mapStateToProps)(HeaderAllUsersBlock)\r\n","const axios = require(\"axios\")\r\n\r\nexport default class ServiceSubscriptions {\r\n  static interceptor = axios.interceptors.request.use(\r\n    function(config: any) {\r\n      const token = localStorage.getItem(\"token\")\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`\r\n      }\r\n      return config\r\n    },\r\n    function(error: string) {\r\n      return Promise.reject(error)\r\n    }\r\n  )\r\n\r\n  static getStatusUsersSubscribeByID = async (idLogInUser: string) => {\r\n    const response = await axios.get(\r\n      `http://strawberry-tart-41911.herokuapp.com/subscriptions/getStatusUsersSubscribeByID/${idLogInUser}`\r\n    )\r\n    return response.data\r\n  }\r\n\r\n  static getAllObservables = async (idLogInUser: string) => {\r\n    const response = await axios.get(\r\n      `http://strawberry-tart-41911.herokuapp.com/subscriptions/withObservables/${idLogInUser}`\r\n    )\r\n    return response.data\r\n  }\r\n\r\n  static addSubscribe = async (idLogInUser: any, IdObserversUser: string) => {\r\n    const subscribe = {\r\n      requestSubscriberId: idLogInUser,\r\n      responseSubscriberId: IdObserversUser\r\n    }\r\n    await axios.post(\r\n      `http://strawberry-tart-41911.herokuapp.com/subscriptions/add`,\r\n      subscribe\r\n    )\r\n  }\r\n\r\n  static deleteSubscribe = async (\r\n    idLogInUser: any,\r\n    IdObserversUser: string\r\n  ) => {\r\n    await axios.delete(\r\n      `http://strawberry-tart-41911.herokuapp.com/subscriptions/deleteSubscribe/?idLogInUser=${idLogInUser}&IdObserversUser=${IdObserversUser}`\r\n    )\r\n  }\r\n\r\n  static deleteSubscribeAfterAddFriend = async (\r\n    IdObserversUser: string,\r\n    idLogInUser: any\r\n  ) => {\r\n    await axios.delete(\r\n      `http://strawberry-tart-41911.herokuapp.com/subscriptions/deleteSubscribeAfterAddFriend/?IdObserversUser=${IdObserversUser}&idLogInUser=${idLogInUser}`\r\n    )\r\n  }\r\n}\r\n","const axios = require(\"axios\")\r\n\r\nexport default class ServiceFriends {\r\n  static interceptor = axios.interceptors.request.use(\r\n    function(config: any) {\r\n      const token = localStorage.getItem(\"token\")\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`\r\n      }\r\n      return config\r\n    },\r\n    function(error: string) {\r\n      return Promise.reject(error)\r\n    }\r\n  )\r\n\r\n  static getLogInUserAllFriends = async (idLogInUser: string) => {\r\n    const response = await axios.get(\r\n      `http://strawberry-tart-41911.herokuapp.com/friends/logInUserAllFriends/?id=${idLogInUser}`\r\n    )\r\n    return response.data\r\n  }\r\n\r\n  static addFriend = async (idLogInUser: string, IdRequestUser: string) => {\r\n    const subscribe = {\r\n      requestFriendId: idLogInUser,\r\n      responseFriendId: IdRequestUser\r\n    }\r\n    await axios.post(\r\n      `http://strawberry-tart-41911.herokuapp.com/friends/add`,\r\n      subscribe\r\n    )\r\n  }\r\n\r\n  static removeFriend = async (idLogInUser: string, IdSecondUser: string) => {\r\n    await axios.delete(\r\n      `http://strawberry-tart-41911.herokuapp.com/friends/removeFriend/?idLogInUser=${idLogInUser}&IdSecondUser=${IdSecondUser}`\r\n    )\r\n  }\r\n\r\n  static getArrayFriendsByIdUser = async (idLogInUser: string) => {\r\n    const response = await axios.get(\r\n      `http://strawberry-tart-41911.herokuapp.com/friends/getArrayFriendsByIdUser/?idLogInUser=${idLogInUser}`\r\n    )\r\n    // console.log(response.data)\r\n    return response.data\r\n  }\r\n}\r\n","// import host from './service-hosting'\r\nconst axios = require(\"axios\")\r\n\r\nexport default class Service {\r\n  static interceptor = axios.interceptors.request.use(\r\n    function(config: any) {\r\n      const token = localStorage.getItem(\"token\")\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`\r\n      }\r\n      return config\r\n    },\r\n    function(error: string) {\r\n      return Promise.reject(error)\r\n    }\r\n  )\r\n\r\n  static getAllUsers = async () => {\r\n    try {\r\n      const request = await axios.get(\r\n        \"https://strawberry-tart-41911.herokuapp.com/users/\"\r\n      )\r\n      return request.data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  static getFilteredUsers = async (valueSearchBox: string) => {\r\n    try {\r\n      const request = await axios.get(\r\n        `https://strawberry-tart-41911.herokuapp.com/users/filter/${valueSearchBox}`\r\n      )\r\n      return request.data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  static editUser = async (id: any, user: {}) => {\r\n    try {\r\n      const request = await axios.put(\r\n        `https://strawberry-tart-41911.herokuapp.com/users/update/${id}`,\r\n        user\r\n      )\r\n      return request.data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  static removeHandler = async (id: string) => {\r\n    try {\r\n      return await axios.delete(\r\n        `https://strawberry-tart-41911.herokuapp.com/users/delete/${id}`\r\n      )\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  static getUserByID = async (id: string) => {\r\n    try {\r\n      const request = await axios.get(\r\n        `https://strawberry-tart-41911.herokuapp.com/users/${id}`\r\n      )\r\n      return request.data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  static getUserByToken = async () => {\r\n    try {\r\n      const request = await axios.get(\r\n        `https://strawberry-tart-41911.herokuapp.com/users/getUserByToken/`\r\n      )\r\n      return request.data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  static getTokenForLogin = async (id: string, user: {}) => {\r\n    const response = await axios.post(\r\n      `https://strawberry-tart-41911.herokuapp.com/users/login`,\r\n      user\r\n    )\r\n    return response.data\r\n  }\r\n\r\n  static getTokenForRegistration = async (id: string, user: {}) => {\r\n    const response = await axios.post(\r\n      `https://strawberry-tart-41911.herokuapp.com/users/add`,\r\n      user\r\n    )\r\n    return response.data\r\n  }\r\n\r\n  static logOutAllDevices = async (id: string, user: {}) => {\r\n    const response = await axios.post(\r\n      `https://strawberry-tart-41911.herokuapp.com/users/logOutAllDevices`,\r\n      user\r\n    )\r\n    return response.data\r\n  }\r\n\r\n  static getListPetsByUserID = async (id: string) => {\r\n    const response = await axios.get(\r\n      `https://strawberry-tart-41911.herokuapp.com/users/withPets/${id}`\r\n    )\r\n    return response.data\r\n  }\r\n\r\n  static setImgUser = async (avatar: any, id: string) => {\r\n    const formData = new FormData()\r\n    formData.append(\"user\", avatar)\r\n\r\n    const response = await axios.post(\r\n      `http://strawberry-tart-41911.herokuapp.com/public/userSafeFileIntoImages/${id}`,\r\n      formData\r\n    )\r\n    return response.data.fileName\r\n  }\r\n\r\n  static getListAlbumsByUserID = async (id: string) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://strawberry-tart-41911.herokuapp.com/users/withAlbums/${id}`\r\n      )\r\n\r\n      return response.data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  static getListPhotosByUserID = async (id: string) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://strawberry-tart-41911.herokuapp.com/users/withPhotos/${id}`\r\n      )\r\n      return response.data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  static getListAlbumsWithPhotosByUserID = async (id: string) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://strawberry-tart-41911.herokuapp.com/users/AlbumsWithPhotos/${id}`\r\n      )\r\n      return response.data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  static getUserWithSubscriptionsById = async (userLogin: {}) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://strawberry-tart-41911.herokuapp.com/users/getUserWithSubscriptionsById/${userLogin}`\r\n      )\r\n      return response.data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  static getUserAfterPaginationAndSearchAndFilter = async (body: {}) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `http://strawberry-tart-41911.herokuapp.com/users/getUserAfterPaginationAndSearchAndFilter`,\r\n        body\r\n      )\r\n      console.log(response)\r\n      return response.data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport UserCardCSS from \"./UserCard.module.css\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport ServiceSubscriptions from \"../../services/service-subscribe\"\r\nimport ServiceFriends from \"../../services/service-friend\"\r\nimport Service from \"../../services/service-user\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../Redux/interfaces/user.interface\"\r\n\r\ntype UserCardProps = {\r\n  user: User\r\n  userOwnerCard: any\r\n  getLogInUserAllSubscriptionsAndObserver: any\r\n}\r\n\r\nconst UserCard: React.FC<UserCardProps> = ({\r\n  user,\r\n  userOwnerCard,\r\n  getLogInUserAllSubscriptionsAndObserver\r\n}) => {\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {}, [user.subscriptions])\r\n\r\n  const handlerClickSubscribe = async () => {\r\n    await ServiceSubscriptions.addSubscribe(user._id, userOwnerCard._id)\r\n    getLogInUserAllSubscriptionsAndObserver()\r\n  }\r\n\r\n  const handlerClickUnSubscribe = async () => {\r\n    await ServiceSubscriptions.deleteSubscribe(user._id, userOwnerCard._id)\r\n    getLogInUserAllSubscriptionsAndObserver()\r\n  }\r\n\r\n  const handlerClickAddFriend = async () => {\r\n    await ServiceSubscriptions.deleteSubscribeAfterAddFriend(\r\n      userOwnerCard._id,\r\n      user._id\r\n    )\r\n    await ServiceFriends.addFriend(user._id, userOwnerCard._id)\r\n    getLogInUserAllSubscriptionsAndObserver()\r\n  }\r\n\r\n  const handlerClickRemoveFriend = async () => {\r\n    await ServiceFriends.removeFriend(user._id, userOwnerCard._id)\r\n    getLogInUserAllSubscriptionsAndObserver()\r\n  }\r\n\r\n  const removeHandler = async (id: string) => {\r\n    await Service.removeHandler(id)\r\n    getLogInUserAllSubscriptionsAndObserver()\r\n  }\r\n\r\n  return (\r\n    <div className={UserCardCSS.container__all_users__card_user}>\r\n      {user.role === \"admin\" && (\r\n        <i\r\n          className={`material-icons ${UserCardCSS.container__all_users__card_user__delete}`}\r\n          onClick={() => removeHandler(userOwnerCard._id)}\r\n        >\r\n          delete\r\n        </i>\r\n      )}\r\n      {userOwnerCard.avatar ? (\r\n        <img\r\n          src={`http://strawberry-tart-41911.herokuapp.com/images/users/${userOwnerCard._id}/${userOwnerCard.avatar}`}\r\n          alt=\"avatar\"\r\n          onClick={() => {\r\n            history.push(`/user/profile/${userOwnerCard._id}`)\r\n          }}\r\n        />\r\n      ) : (\r\n        <img\r\n          src=\"http://strawberry-tart-41911.herokuapp.com/images/pattern-avatar.jpg\"\r\n          alt=\"avatar\"\r\n          onClick={() => {\r\n            history.push(`/user/profile/${userOwnerCard._id}`)\r\n          }}\r\n        />\r\n      )}\r\n      <h5\r\n        className={UserCardCSS.all_users__card_user__login}\r\n        onClick={() => {\r\n          history.push(`/user/profile/${userOwnerCard._id}`)\r\n        }}\r\n      >\r\n        {userOwnerCard.login}\r\n      </h5>\r\n      <p className={UserCardCSS.all_users__card_user__friends}>\r\n        {\" \"}\r\n        {userOwnerCard.subscriptions || \"it's not your friend\"}\r\n      </p>\r\n      <p className={UserCardCSS.all_users__card_user__role}>\r\n        {userOwnerCard.role}\r\n      </p>\r\n      <button\r\n        className={`waves-effect waves-light btn ${UserCardCSS.all_users__card_user__button}`}\r\n        onClick={\r\n          userOwnerCard.subscriptions === \"subscriber\"\r\n            ? () => handlerClickUnSubscribe()\r\n            : userOwnerCard.subscriptions === \"observer\"\r\n            ? () => handlerClickAddFriend()\r\n            : userOwnerCard.subscriptions === \"friend\"\r\n            ? () => handlerClickRemoveFriend()\r\n            : () => handlerClickSubscribe()\r\n        }\r\n      >\r\n        {userOwnerCard.subscriptions === \"subscriber\" ? (\r\n          <p>UnSubscribe</p>\r\n        ) : userOwnerCard.subscriptions === \"observer\" ? (\r\n          <p>Add friend</p>\r\n        ) : userOwnerCard.subscriptions === \"friend\" ? (\r\n          <p>Remove friend</p>\r\n        ) : (\r\n          <p>Subscribe</p>\r\n        )}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.common.user\r\n})\r\n\r\nexport default connect(mapStateToProps)(UserCard)\r\n","export enum UserFormViewModes {\r\n  LogIn = \"Log In\",\r\n  Edit = \"Edit\",\r\n  SingUp = \"Sing Up\"\r\n}\r\n\r\nexport enum UserFormViewButtons {\r\n  LogIn = \"Log In\",\r\n  Edit = \"Edit\",\r\n  SingUp = \"Sing Up\"\r\n}\r\n\r\nexport enum LoadingState {\r\n  loading = \"loading\",\r\n  loaded = \"loaded\",\r\n  notFound = \"notFound\",\r\n  error = \"error\"\r\n}\r\n\r\n// export enum LoadingStatePhotosInCurrentAlbum {\r\n//   loading = \"loading\",\r\n//   loaded = \"loaded\",\r\n//   notFound = \"notFound\",\r\n//   error = \"error\"\r\n// }\r\n","import { Action } from \"../interfaces/action.interface\"\r\nimport { User } from \"../../interfaces/user.interface\"\r\nimport { BodyForPagination } from \"../../interfaces/bodyForPagination.interface\"\r\n\r\nexport const ActionTypes = {\r\n  ALL_USERS: \"[allUsers] all users\",\r\n\r\n  GET_ALL_USERS_FOR_SAGAS: \"[getAllUsersForSagas] get all users for sagas\",\r\n  PUT_ALL_USERS_IN_STATE: \"[putAllUsersInState] put all users in state\",\r\n\r\n  GET_ALL_USERS_WITH_PAGINATION_SEARCH_FILTER:\r\n    \"[getAllUsersWithPaginationSearchFilter] get all users with pagination search filter\",\r\n  SET_ALL_USERS_WITH_PAGINATION_SEARCH_FILTER:\r\n    \"[setAllUsersWithPaginationSearchFilter] set all users with pagination search filter\",\r\n  GET_ALL_FRIENDS_BY_USER_ID:\r\n    \"[User] get all friends by userId\",\r\n  SET_ALL_FRIENDS_FOR_USER:\r\n    \"[User] set all friend for user\",\r\n\r\n  GET_FAILURE: \"[getFailureAction] get failure action\"\r\n}\r\n\r\nexport const AllUsersAction = (allUsers: []): Action<[]> => ({\r\n  type: ActionTypes.ALL_USERS,\r\n  payload: allUsers\r\n})\r\n\r\nexport const getAllUsersForSagasAction = (userId: String): Action<String> => ({\r\n  type: ActionTypes.GET_ALL_USERS_FOR_SAGAS,\r\n  payload: userId\r\n})\r\n\r\nexport const putAllUsersInStateAction = (allUsers: [User]): Action<any> => ({\r\n  type: ActionTypes.PUT_ALL_USERS_IN_STATE,\r\n  payload: allUsers\r\n})\r\n\r\nexport const getAllUsersWithPaginationSearchFilterAction = (\r\n  bodyForPagination: BodyForPagination\r\n): Action<BodyForPagination> => ({\r\n  type: ActionTypes.GET_ALL_USERS_WITH_PAGINATION_SEARCH_FILTER,\r\n  payload: bodyForPagination\r\n})\r\n\r\nexport const setAllUsersWithPaginationSearchFilterAction = (\r\n  allUsers: [User]\r\n): Action<any> => ({\r\n  type: ActionTypes.SET_ALL_USERS_WITH_PAGINATION_SEARCH_FILTER,\r\n  payload: allUsers\r\n})\r\n\r\nexport const getFriendsByUserIdAction = (userId: String): Action<String> => ({\r\n  type: ActionTypes.GET_ALL_FRIENDS_BY_USER_ID,\r\n  payload: userId\r\n})\r\n\r\nexport const setFriendsForUserAction = (allFriends: [User]): Action<[User]> => ({\r\n  type: ActionTypes.SET_ALL_FRIENDS_FOR_USER,\r\n  payload: allFriends\r\n})\r\n\r\nexport const getFailureAction = (error?: any): Action<any> => ({\r\n  type: ActionTypes.GET_FAILURE,\r\n  payload: error\r\n})\r\n","import React, { useEffect, useState } from \"react\"\r\nimport UserCard from \"../../../components/UserCard/UserCard\"\r\nimport MainAllUsersBlockPageCSS from \"./mainAllUsersBlock.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../../Redux/interfaces/user.interface\"\r\nimport { getAllUsersForSagasAction } from \"../../../Redux/store/allUsers/allUsers.actions\"\r\n\r\ntype MainAllUsersBlockProps = {\r\n  user: User\r\n  dispatch: any\r\n  allUsers: []\r\n}\r\n\r\nconst MainAllUsersBlock: React.FunctionComponent<MainAllUsersBlockProps> = ({\r\n  user,\r\n  dispatch,\r\n  allUsers\r\n}) => {\r\n  const [load, setLoad]: any = useState(\"loading\")\r\n\r\n  useEffect(() => {    \r\n      if (allUsers) {\r\n        setLoad(\"loaded\")\r\n      } else {\r\n        // This need make notFound\r\n      }\r\n    },[allUsers])\r\n\r\n    const getLogInUserAllSubscriptionsAndObserver = () => {\r\n    dispatch(getAllUsersForSagasAction(user._id))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {load === \"loading\" && <h1>Ожидайте ответа</h1>}\r\n      {load === \"loaded\" && (\r\n        <ul className={MainAllUsersBlockPageCSS.container__all_users__cards}>\r\n          {allUsers &&\r\n            allUsers.length > 0 &&\r\n            allUsers.map((userOwnerCard: any) => {\r\n              return (\r\n                userOwnerCard._id !== user._id && (\r\n                  <UserCard\r\n                    key={userOwnerCard._id||1}\r\n                    userOwnerCard={userOwnerCard}\r\n                    getLogInUserAllSubscriptionsAndObserver={\r\n                      getLogInUserAllSubscriptionsAndObserver\r\n                    }\r\n                  />\r\n                )\r\n              )\r\n            })}\r\n        </ul>\r\n      )}\r\n      {load !== \"loading\" && load !== \"loaded\" && <h1>ошибка</h1>}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.common.user,\r\n  allUsers: state.allUsers.allUsers\r\n})\r\n\r\nexport default connect(mapStateToProps)(MainAllUsersBlock)\r\n","import { Action } from \"../interfaces/action.interface\"\r\nimport { Pagination } from \"../../interfaces/pagination.interface\"\r\n// import { UserLogOut } from \"../../interfaces/userLogOut.interface\"\r\n\r\nexport const ActionTypes = {\r\n  PAGINATION_SET_VALUES:\r\n    \"[setValuesForPaginationAction] set values for pagination action\",\r\n  PAGINATION_SET_NUMBER_PAGE: \"[setNumberPage] set number page\",\r\n  PAGINATION_SET_LIMIT_USERS_FOR_RENDER:\r\n    \"[setLimitUsersForRender] set limit users for render\",\r\n  PAGINATION_SET_INITIAL_VALUE:\r\n    \"[setInitialValueForPagination] set initial value for pagination\"\r\n}\r\n\r\nexport const setValuesForPaginationAction = (\r\n  pagination: Pagination\r\n): Action<Pagination> => ({\r\n  type: ActionTypes.PAGINATION_SET_VALUES,\r\n  payload: pagination\r\n})\r\n\r\nexport const setNumberPageAction = (\r\n  pagination: Pagination\r\n): Action<Pagination> => ({\r\n  type: ActionTypes.PAGINATION_SET_NUMBER_PAGE,\r\n  payload: pagination\r\n})\r\n\r\nexport const setLimitUsersForRenderAction = (\r\n  pagination: Pagination\r\n): Action<Pagination> => ({\r\n  type: ActionTypes.PAGINATION_SET_LIMIT_USERS_FOR_RENDER,\r\n  payload: pagination\r\n})\r\n\r\nexport const setInitialValueForPaginationAction = (): Action<Pagination> => ({\r\n  type: ActionTypes.PAGINATION_SET_INITIAL_VALUE\r\n})\r\n","import { Action } from \"../interfaces/action.interface\"\r\nimport { User } from \"../../interfaces/user.interface\"\r\nimport { BodyForPagination } from \"../../interfaces/bodyForPagination.interface\"\r\n\r\nexport const ActionTypes = {\r\n  GET_ALL_USERS_WITH_PAGINATION_SEARCH_FILTER:\r\n    \"[getAllUsersWithPaginationSearchFilter] get all users with pagination search filter\",\r\n  SET_ALL_USERS_WITH_PAGINATION_SEARCH_FILTER:\r\n    \"[setAllUsersWithPaginationSearchFilter] set all users with pagination search filter\",\r\n  GET_FAILURE: \"[getFailureAction] get failure action\"\r\n}\r\n\r\nexport const getAllUsersWithPaginationSearchFilterAction = (\r\n  bodyForPagination: BodyForPagination\r\n): Action<BodyForPagination> => ({\r\n  type: ActionTypes.GET_ALL_USERS_WITH_PAGINATION_SEARCH_FILTER,\r\n  payload: bodyForPagination\r\n})\r\n\r\nexport const setAllUsersWithPaginationSearchFilterAction = (\r\n  allUsers: [User]\r\n): Action<any> => ({\r\n  type: ActionTypes.SET_ALL_USERS_WITH_PAGINATION_SEARCH_FILTER,\r\n  payload: allUsers\r\n})\r\n\r\nexport const getFailureAction = (error?: any): Action<any> => ({\r\n  type: ActionTypes.GET_FAILURE,\r\n  payload: error\r\n})\r\n","import React from \"react\"\r\nimport AmountPaginationCSS from \"./AmountPagination.module.css\"\r\nimport Select from \"@material-ui/core/Select\"\r\nimport InputLabel from \"@material-ui/core/InputLabel\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../../Redux/interfaces/user.interface\"\r\nimport { Pagination } from \"../../../Redux/interfaces/pagination.interface\"\r\nimport { setValuesForPaginationAction } from \"../../../Redux/store/pagination/pagination.actions\"\r\n\r\ntype AmountPaginationProps = {\r\n  allUsers: [User]\r\n  pagination: Pagination\r\n  dispatch: any\r\n  getUsersAfterPaginationAndSearchAndFilter: any\r\n}\r\n\r\nconst AmountPagination: React.FunctionComponent<AmountPaginationProps> = ({\r\n  allUsers,\r\n  pagination,\r\n  dispatch,\r\n  getUsersAfterPaginationAndSearchAndFilter\r\n}) => {\r\n  const limitRender = pagination.limitUsersForRender\r\n  const { numberPage } = pagination\r\n\r\n  const handleChangeSelect = (newLimitRender: any) => {\r\n    let page\r\n    if (\r\n      allUsers &&\r\n      allUsers[0] &&\r\n      allUsers[0].countUsers !== undefined &&\r\n      +numberPage * +limitRender > allUsers[0].countUsers\r\n    ) {\r\n      page = Math.ceil(+allUsers[0].countUsers / +newLimitRender)\r\n    } else {\r\n      page = Math.ceil((+numberPage * +limitRender) / +newLimitRender)\r\n    }\r\n    dispatch(\r\n      setValuesForPaginationAction({\r\n        numberPage: page || 1,\r\n        limitUsersForRender: +newLimitRender\r\n      })\r\n    )\r\n    getUsersAfterPaginationAndSearchAndFilter(page || 1, +newLimitRender)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={AmountPaginationCSS.All_Users__Pagination_Block__Select_block}\r\n    >\r\n      <InputLabel htmlFor=\"outlined-age-native-simple\">\r\n        Amount of Users\r\n      </InputLabel>\r\n      <Select native onChange={e => handleChangeSelect(e.target.value)}>\r\n        <option value={0}>{\"all users\"}</option>\r\n        <option value={2}>2</option>\r\n        <option value={4}>4</option>\r\n        <option value={8}>8</option>\r\n      </Select>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  allUsers: state.allUsers.allUsers,\r\n  pagination: state.pagination.pagination\r\n})\r\n\r\nexport default connect(mapStateToProps)(AmountPagination)\r\n","// import React from 'react'\r\nimport React from \"react\"\r\nimport NumberBlockPaginationCSS from \"./NumberBlockPagination.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../../Redux/interfaces/user.interface\"\r\nimport { Pagination } from \"../../../Redux/interfaces/pagination.interface\"\r\nimport { setValuesForPaginationAction } from \"../../../Redux/store/pagination/pagination.actions\"\r\nimport Button from \"@material-ui/core/Button\"\r\n\r\ntype NumberBlockPaginationProps = {\r\n  allUsers: [User]\r\n  pagination: Pagination\r\n  dispatch: any\r\n  getUsersAfterPaginationAndSearchAndFilter: any\r\n}\r\n\r\nconst NumberBlockPagination: React.FunctionComponent<NumberBlockPaginationProps> = ({\r\n  allUsers,\r\n  pagination,\r\n  dispatch,\r\n  getUsersAfterPaginationAndSearchAndFilter\r\n}) => {\r\n  const limitRender = pagination.limitUsersForRender\r\n  const { numberPage } = pagination\r\n\r\n  const handlerClickPrevPage = () => {\r\n    if (numberPage > 1) {\r\n      dispatch(\r\n        setValuesForPaginationAction({\r\n          numberPage: +numberPage - 1,\r\n          limitUsersForRender: limitRender\r\n        })\r\n      )\r\n      getUsersAfterPaginationAndSearchAndFilter(+numberPage - 1, limitRender)\r\n    }\r\n  }\r\n\r\n  const handlerClickNextPage = () => {\r\n    dispatch(\r\n      setValuesForPaginationAction({\r\n        numberPage: +numberPage + 1,\r\n        limitUsersForRender: limitRender\r\n      })\r\n    )\r\n    getUsersAfterPaginationAndSearchAndFilter(+numberPage + 1, limitRender)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        NumberBlockPaginationCSS.All_Users__Pagination_Block__Button_block\r\n      }\r\n    >\r\n      <Button\r\n        variant=\"outlined\"\r\n        component=\"span\"\r\n        onClick={() => handlerClickPrevPage()}\r\n        disabled={numberPage < 2 && true}\r\n      >\r\n        Prev\r\n      </Button>\r\n\r\n      <div>{numberPage}</div>\r\n\r\n      <Button\r\n        variant=\"outlined\"\r\n        component=\"span\"\r\n        onClick={() => handlerClickNextPage()}\r\n        disabled={\r\n          (!limitRender && true) ||\r\n          (allUsers &&\r\n            allUsers[0] &&\r\n            allUsers[0].countPage !== undefined &&\r\n            allUsers[0].countPage === numberPage &&\r\n            true)\r\n        }\r\n      >\r\n        Next\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  allUsers: state.allUsers.allUsers,\r\n  pagination: state.pagination.pagination\r\n})\r\n\r\nexport default connect(mapStateToProps)(NumberBlockPagination)\r\n","import React, { useEffect, useState } from \"react\"\r\nimport PaginationBlockCSS from \"./PaginationBlock.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../Redux/interfaces/user.interface\"\r\nimport { Pagination } from \"../../Redux/interfaces/pagination.interface\"\r\nimport { setValuesForPaginationAction } from \"../../Redux/store/pagination/pagination.actions\"\r\nimport { getAllUsersForSagasAction } from \"../../Redux/store/allUsers/allUsers.actions\"\r\nimport { getAllUsersWithPaginationSearchFilterAction } from \"../../Redux/store/allUsersWithPaginationSearchFilter/allUsersWithPaginationSearchFilter.actions\"\r\nimport AmountPagination from \"./AmountPagination/AmountPagination\"\r\nimport NumberBlockPagination from \"./NumberBlockPagination/NumberBlockPagination\"\r\n// import ServiceFriends from '../../services/service-friend'\r\n\r\ntype PaginationBlockProps = {\r\n  user: User\r\n  pagination: Pagination\r\n  dispatch: any\r\n  checked: Boolean\r\n  prevChecked: Boolean\r\n  valueSearchBox: String | \"\"\r\n}\r\n\r\nconst PaginationBlock: React.FunctionComponent<PaginationBlockProps> = ({\r\n  user,\r\n  pagination,\r\n  dispatch,\r\n  checked,\r\n  prevChecked,\r\n  valueSearchBox\r\n}) => {\r\n  const limitRender = pagination.limitUsersForRender\r\n  const { numberPage } = pagination\r\n  const [timerId, setTimerId]: any = useState(undefined)\r\n\r\n  const getUsersAfterPaginationAndSearchAndFilter = async (\r\n    numberPage: Number,\r\n    limitRender: Number\r\n  ) => {\r\n    const body = {\r\n      idLogInUser: user._id,\r\n      valueSearchBox,\r\n      numberPage,\r\n      checked,\r\n      limitRender\r\n    }\r\n    if (limitRender) {\r\n      dispatch(getAllUsersWithPaginationSearchFilterAction(body))\r\n    } else {\r\n      if (user._id) dispatch(getAllUsersForSagasAction(user._id))\r\n      // await ServiceFriends.getArrayFriendsByIdUser(user._id)\r\n      // else dispatch(getAllUsersForSagasAction(\"\"))\r\n      dispatch(\r\n        setValuesForPaginationAction({\r\n          numberPage: 1,\r\n          limitUsersForRender: limitRender\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUsersAfterPaginationAndSearchAndFilter(numberPage, limitRender)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [numberPage, limitRender, user])\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      setValuesForPaginationAction({\r\n        numberPage: 1,\r\n        limitUsersForRender: limitRender\r\n      })\r\n    )\r\n    // call function after click checkbox or search\r\n    if (prevChecked !== undefined) {\r\n      clearTimeout(timerId)\r\n      const clearInterval = setTimeout(() => {\r\n        getUsersAfterPaginationAndSearchAndFilter(1, limitRender)\r\n      }, 500)\r\n      setTimerId(clearInterval)\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [checked, valueSearchBox])\r\n\r\n  return (\r\n    <section className={PaginationBlockCSS.All_Users__Pagination_Block}>\r\n      <AmountPagination\r\n        getUsersAfterPaginationAndSearchAndFilter={\r\n          getUsersAfterPaginationAndSearchAndFilter\r\n        }\r\n      />\r\n      <NumberBlockPagination\r\n        getUsersAfterPaginationAndSearchAndFilter={\r\n          getUsersAfterPaginationAndSearchAndFilter\r\n        }\r\n      />\r\n    </section>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.common.user,\r\n  pagination: state.pagination.pagination,\r\n  checked: state.checkBoxState.checkBoxState,\r\n  prevChecked: state.checkBoxState.prevCheckBoxState,\r\n  valueSearchBox: state.searchStringState.searchStringState\r\n})\r\n\r\nexport default connect(mapStateToProps)(PaginationBlock)\r\n","import React from \"react\"\r\nimport HeaderAllUsersBlock from \"./headerAllUsersBlock/headerAllUsersBlock\"\r\nimport MainAllUsersBlock from \"./mainAllUsersBlock/mainAllUsersBlock\"\r\nimport PaginationBlock from \"../../components/PaginationBlock/PaginationBlock\"\r\nimport allUsersPageCSS from \"./allUsersPage.module.css\"\r\n\r\nconst AllUsersPage: React.FunctionComponent = () => {\r\n  return (\r\n    <div className={allUsersPageCSS.container__all_users}>\r\n      <HeaderAllUsersBlock />\r\n      <MainAllUsersBlock />\r\n      <PaginationBlock />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllUsersPage\r\n","import React, { useEffect } from \"react\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../../Redux/interfaces/user.interface\"\r\nimport { UserOwnerThisPageInterface } from \"../../../Redux/interfaces/userOwnerThisPage.interface\"\r\nimport AvatarBlockCSS from \"./AvatarBlock.module.css\"\r\n\r\ntype UserAvatarProps = {\r\n  user: User\r\n  userOwnerThisPage: UserOwnerThisPageInterface\r\n  homePageStatus: boolean\r\n  avatarForFront: any\r\n  handleChangeAvatar: any\r\n  handleSubmit: any\r\n}\r\n\r\nconst AvatarBlock: React.FC<UserAvatarProps> = ({\r\n  user,\r\n  userOwnerThisPage,\r\n  homePageStatus,\r\n  avatarForFront,\r\n  handleChangeAvatar,\r\n  handleSubmit\r\n}) => {\r\n  useEffect(() => {}, [userOwnerThisPage])\r\n  return (\r\n    <form\r\n      action=\"submit\"\r\n      className={AvatarBlockCSS.profile__change_avatar__form}\r\n    >\r\n      {avatarForFront && (\r\n        <img className=\"chelik\" src={`${avatarForFront}`} alt=\"avatar\" />\r\n      )}\r\n      {!avatarForFront && userOwnerThisPage._id && userOwnerThisPage.avatar && (\r\n        <img\r\n          className=\"chelik\"\r\n          src={`http://strawberry-tart-41911.herokuapp.com/images/users/${userOwnerThisPage._id}/${userOwnerThisPage.avatar}`}\r\n          alt=\"avatar\"\r\n        />\r\n      )}\r\n      {!avatarForFront &&\r\n        userOwnerThisPage._id &&\r\n        !userOwnerThisPage.avatar && (\r\n          <img\r\n            className=\"chelik\"\r\n            src={`http://strawberry-tart-41911.herokuapp.com/images/pattern-avatar.jpg`}\r\n            alt=\"avatar\"\r\n          />\r\n        )}\r\n      {/* {(user.role === \"admin\" || homePageStatus) && ( */}\r\n      <>\r\n        <Button\r\n          variant=\"outlined\"\r\n          component=\"button\"\r\n          disabled={!homePageStatus && true}\r\n        >\r\n          Choose avatar\r\n          <input type=\"file\" onChange={e => handleChangeAvatar(e)} />\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          component=\"button\"\r\n          onClick={(e: any) => handleSubmit(e)}\r\n          disabled={!homePageStatus && true}\r\n        >\r\n          Change Avatar\r\n        </Button>\r\n      </>\r\n      {/* )} */}\r\n    </form>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.common.user,\r\n  userOwnerThisPage: state.userOwnerThisPageForSagas.userOwnerThisPage\r\n})\r\n\r\nexport default connect(mapStateToProps)(AvatarBlock)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport InformationBlockCSS from \"./InformationBlock.module.css\"\r\nimport { User } from \"../../../Redux/interfaces/user.interface\"\r\nimport { UserOwnerThisPageInterface } from \"../../../Redux/interfaces/userOwnerThisPage.interface\"\r\nimport List from \"@material-ui/core/List\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\ntype InformationBlockProps = {\r\n  user: User\r\n  userOwnerThisPage: UserOwnerThisPageInterface\r\n  homePageStatus: boolean\r\n}\r\n\r\nconst InformationBlock: React.FC<InformationBlockProps> = ({\r\n  user,\r\n  userOwnerThisPage,\r\n  homePageStatus\r\n}) => {\r\n  const handleSubmit = (e: any) => {}\r\n  return (\r\n    <section className={InformationBlockCSS.user_profile__user_information}>\r\n      <h4>USER INFORMATION</h4>\r\n      <Box\r\n        className={\r\n          InformationBlockCSS.user_profile__user_information__block_information\r\n        }\r\n      >\r\n        <List component=\"ul\" aria-label=\"mailbox folders\">\r\n          <ListItem button>\r\n            <ListItemText\r\n              primary=\"Login:\"\r\n              secondary={`${userOwnerThisPage.login}`}\r\n            />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemText\r\n              primary=\"FirstName:\"\r\n              secondary={`${userOwnerThisPage.firstName}`}\r\n            />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemText\r\n              primary=\"LastName:\"\r\n              secondary={`${userOwnerThisPage.lastName}`}\r\n            />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemText\r\n              primary=\"Email:\"\r\n              secondary={`${userOwnerThisPage.email}`}\r\n            />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemText\r\n              primary=\"Phone:\"\r\n              secondary={`${userOwnerThisPage.phone}`}\r\n            />\r\n          </ListItem>\r\n        </List>\r\n        <Box\r\n          className={\r\n            InformationBlockCSS.user_profile__user_information__block_button\r\n          }\r\n        >\r\n          <Link to={`/user/${userOwnerThisPage._id}/edit`}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              component=\"button\"\r\n              onClick={(e: any) => handleSubmit(e)}\r\n              disabled={!homePageStatus && true}\r\n            >\r\n              EDIT INFORMATION\r\n            </Button>\r\n          </Link>\r\n          <Button\r\n            variant=\"outlined\"\r\n            component=\"button\"\r\n            onClick={(e: any) => handleSubmit(e)}\r\n            disabled={!homePageStatus && true}\r\n          >\r\n            DELETE PAGE\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.common.user,\r\n  userOwnerThisPage: state.userOwnerThisPageForSagas.userOwnerThisPage\r\n})\r\n\r\nexport default connect(mapStateToProps)(InformationBlock)\r\n","import React from \"react\"\r\nimport List from \"@material-ui/core/List\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport PeopleAltOutlinedIcon from \"@material-ui/icons/PeopleAltOutlined\"\r\nimport FolderSharedOutlinedIcon from \"@material-ui/icons/FolderSharedOutlined\"\r\nimport PhotoLibraryOutlinedIcon from \"@material-ui/icons/PhotoLibraryOutlined\"\r\nimport EmojiPeopleOutlinedIcon from \"@material-ui/icons/EmojiPeopleOutlined\"\r\nimport GroupAddOutlinedIcon from \"@material-ui/icons/GroupAddOutlined\"\r\nimport Divider from \"@material-ui/core/Divider\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../../Redux/interfaces/user.interface\"\r\nimport { UserOwnerThisPageInterface } from \"../../../Redux/interfaces/userOwnerThisPage.interface\"\r\nimport NavigationBlockCSS from \"./NavigationBlock.module.css\"\r\n\r\ntype NavigationBlockProps = {\r\n  user: User\r\n  userOwnerThisPage: UserOwnerThisPageInterface\r\n}\r\n\r\nconst NavigationBlock: React.FC<NavigationBlockProps> = ({\r\n  user,\r\n  userOwnerThisPage\r\n}) => {\r\n  return (\r\n    <List className={NavigationBlockCSS.user_information__navigation_block}>\r\n      <Link to={`/user/${userOwnerThisPage._id}/friends`}>\r\n        <ListItem button>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <PeopleAltOutlinedIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Friends\" secondary=\"Jan 9, 2014\" />\r\n        </ListItem>\r\n      </Link>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem button>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <EmojiPeopleOutlinedIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Subscriptions\" secondary=\"Jan 7, 2014\" />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem button>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <GroupAddOutlinedIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Subscribers\" secondary=\"July 20, 2014\" />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <Link to={`/user/${userOwnerThisPage._id}/allAlbums`}>\r\n        <ListItem button>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <FolderSharedOutlinedIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Albums\" secondary=\"Jan 7, 2014\" />\r\n        </ListItem>\r\n      </Link>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <Link to={`/user/${userOwnerThisPage._id}/allPhotos`}>\r\n      <ListItem button>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <PhotoLibraryOutlinedIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Photos\" secondary=\"July 20, 2014\" />\r\n      </ListItem>\r\n      </Link>\r\n    </List>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.common.user,\r\n  userOwnerThisPage: state.userOwnerThisPageForSagas.userOwnerThisPage\r\n})\r\n\r\nexport default connect(mapStateToProps)(NavigationBlock)\r\n","import React from \"react\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CardActions from \"@material-ui/core/CardActions\"\r\nimport CardMedia from \"@material-ui/core/CardMedia\"\r\nimport PhotoCardCSS from \"./PhotoCard.module.css\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport { UserOwnerThisPageInterface } from \"../../Redux/interfaces/userOwnerThisPage.interface\"\r\n\r\ntype UserPhotoCard = {\r\n  userOwnerThisPage: UserOwnerThisPageInterface\r\n  urlItem: any\r\n  idItem: any\r\n  removeHandler: any\r\n  editHandler: any\r\n  idChosenAlbum?: any\r\n  launchTogglePhotoModalWindow: any\r\n  ownerUser: any\r\n}\r\n\r\nconst PhotoCard: React.FC<UserPhotoCard> = ({\r\n  // idItem may be idCreateAlbum or idCreatePhoto\r\n  userOwnerThisPage,\r\n  urlItem,\r\n  idItem,\r\n  removeHandler,\r\n  editHandler,\r\n  idChosenAlbum,\r\n  launchTogglePhotoModalWindow,\r\n  ownerUser\r\n}) => {\r\n  return (\r\n    <Card className={PhotoCardCSS.photoAlbum__photoCard_block__card}>\r\n      {!idChosenAlbum && (\r\n        <Link to={`/user/${idItem}/album`}>\r\n          <CardMedia\r\n            image={`http://strawberry-tart-41911.herokuapp.com/images/users/${ownerUser}/${urlItem}`}\r\n            title=\"Image title\"\r\n            className={PhotoCardCSS.photoAlbum__photoCard_block__card__photo}\r\n          />\r\n        </Link>\r\n      )}\r\n      {idChosenAlbum && (\r\n        <CardMedia\r\n          image={`http://strawberry-tart-41911.herokuapp.com/images/users/${ownerUser}/${urlItem}`}\r\n          title={urlItem}\r\n          className={PhotoCardCSS.photoAlbum__photoCard_block__card__photo}\r\n          onClick={e => launchTogglePhotoModalWindow(e)}\r\n        />\r\n      )}\r\n\r\n      <CardActions\r\n        className={PhotoCardCSS.photoAlbum__photoCard_block__card__actions}\r\n      >\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          onClick={() => editHandler(idItem)}\r\n        >\r\n          Edit\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          onClick={() => removeHandler(idItem)}\r\n        >\r\n          Remove\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  userOwnerThisPage: state.userOwnerThisPage.userOwnerThisPage\r\n})\r\n\r\nexport default connect(mapStateToProps)(PhotoCard)\r\n","import React from \"react\"\r\nimport PhotoCard from \"../PhotoCard/PhotoCard\"\r\nimport CreateListCSS from \"./CreateList.module.css\"\r\n\r\ntype CreateListProps = {\r\n  arr: any\r\n  removeHandler: any\r\n  editHandler: any\r\n  idChosenAlbum?: any\r\n  createListFunction?: any\r\n  launchTogglePhotoModalWindow?: any\r\n}\r\n\r\nconst CreateList: React.FC<CreateListProps> = ({\r\n  arr,\r\n  removeHandler,\r\n  editHandler,\r\n  idChosenAlbum,\r\n  createListFunction,\r\n  launchTogglePhotoModalWindow\r\n}) => {\r\n  return (\r\n    <ul className={CreateListCSS.user_profile__create_list__container}>\r\n      {arr.length > 0 &&\r\n        arr.map((item: any) => (\r\n          <li\r\n            className={CreateListCSS.user_profile__card_container}\r\n            key={item._id || 1}\r\n          >\r\n            <PhotoCard\r\n              urlItem={\r\n                createListFunction === \"CreateListAlbums\" && item.photos.length\r\n                  ? item.photos[0].url\r\n                  : item.url\r\n              }\r\n              // idItem may be idCreateAlbum or idCreatePhoto\r\n              idItem={item._id}\r\n              removeHandler={removeHandler}\r\n              editHandler={editHandler}\r\n              idChosenAlbum={idChosenAlbum}\r\n              launchTogglePhotoModalWindow={launchTogglePhotoModalWindow}\r\n              ownerUser={item.ownerUser}\r\n            />\r\n          </li>\r\n        ))}\r\n      {!arr.length && <p>Your {createListFunction} is empty</p>}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default CreateList\r\n","import { Action } from \"../interfaces/action.interface\"\r\nimport { Album } from \"../../interfaces/album.interface\"\r\nimport { Photo } from \"../../interfaces/photo.interface\"\r\n\r\nexport const ActionTypes = {\r\n  GET_LIST_ALBUMS_WITH_PHOTOS: \"[Album] Get list albums with photos by userId\",\r\n  SET_LIST_ALBUMS_WITH_PHOTOS: \"[Album] Set list albums with photos in store\",\r\n  REMOVE_ALBUM: \"[Album] remove album\",\r\n  ADD_ALBUM: \"[Album] add album by userId\",\r\n  GET_LIST_PHOTOS_BY_ALBUM_ID: \"[Album] Get list photos by albumId\",\r\n  SET_LIST_PHOTOS_FOR_CURRENT_ALBUM:\r\n    \"[Album] Set list photos for current album\",\r\n  ADD_PHOTOS_IN_CURRENT_ALBUM: \"[Album] add photos in current album\",\r\n  REMOVE_PHOTO_FROM_CURRENT_ALBUM: \"[Album] remove photo from current album\",\r\n  GET_LIST_PHOTOS_BY_USER_ID: \"[Photo] get list photos by UserId\",\r\n  SET_LIST_PHOTOS_FOR_USER:  \"[Photo] set list photos For User\",\r\n  GET_FAILURE: \"[getFailure] Get failure\",\r\n  \r\n}\r\n\r\nexport const getListAlbumsWithPhotosByUserIDAction = (\r\n  userId: string\r\n): Action<string> => ({\r\n  type: ActionTypes.GET_LIST_ALBUMS_WITH_PHOTOS,\r\n  payload: userId\r\n})\r\n\r\nexport const setListAlbumsWithPhotosInStoreAction = (\r\n  albums: [Album]\r\n): Action<[Album]> => ({\r\n  type: ActionTypes.SET_LIST_ALBUMS_WITH_PHOTOS,\r\n  payload: albums\r\n})\r\n\r\nexport const removeAlbumAction = (\r\n  albumId: string,\r\n  userId: string\r\n): Action<{}> => ({\r\n  type: ActionTypes.REMOVE_ALBUM,\r\n  payload: { albumId, userId }\r\n})\r\n\r\nexport const addAlbumWithPhotosByUserIdAction = (\r\n  userId: string,\r\n  arrayPhotos: []\r\n): Action<{}> => ({\r\n  type: ActionTypes.ADD_ALBUM,\r\n  payload: { userId, arrayPhotos }\r\n})\r\n\r\nexport const getListPhotosByAlbumIdAction = (\r\n  albumId: string\r\n): Action<string> => ({\r\n  type: ActionTypes.GET_LIST_PHOTOS_BY_ALBUM_ID,\r\n  payload: albumId\r\n})\r\n\r\nexport const setListPhotosForCurrentAlbumAction = (\r\n  albums: [Photo]\r\n): Action<[Photo]> => ({\r\n  type: ActionTypes.SET_LIST_PHOTOS_FOR_CURRENT_ALBUM,\r\n  payload: albums\r\n})\r\n\r\nexport const addPhotosInCurrentAlbumAction = (\r\n  userOwnerThisPageId: string,\r\n  albumId: string,\r\n  arrayPhotos: []\r\n): Action<{}> => ({\r\n  type: ActionTypes.ADD_PHOTOS_IN_CURRENT_ALBUM,\r\n  payload: { userOwnerThisPageId, albumId, arrayPhotos }\r\n})\r\n\r\nexport const removePhotoFromCurrentAlbumAction = (\r\n  photoId: string,\r\n  albumId: string\r\n): Action<{}> => ({\r\n  type: ActionTypes.REMOVE_PHOTO_FROM_CURRENT_ALBUM,\r\n  payload: { photoId, albumId }\r\n})\r\n\r\nexport const getListPhotosByUserIdIdAction = (\r\n  userId: string\r\n): Action<string> => ({\r\n  type: ActionTypes.GET_LIST_PHOTOS_BY_USER_ID,\r\n  payload: userId\r\n})\r\n\r\nexport const setListPhotosForUserAction = (\r\n  photos: [Photo]\r\n): Action<[Photo]> => ({\r\n  type: ActionTypes.SET_LIST_PHOTOS_FOR_USER,\r\n  payload: photos\r\n})\r\n\r\nexport const getFailureAction = (error?: any): Action<any> => ({\r\n  type: ActionTypes.GET_FAILURE,\r\n  payload: error\r\n})\r\n","import React, { useEffect, useCallback } from \"react\"\r\nimport AlbumsBlockCSS from \"./AlbumsBlock.module.css\"\r\nimport CreateList from \"../../../components/CreateList/CreateList\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../../Redux/interfaces/user.interface\"\r\nimport { UserOwnerThisPageInterface } from \"../../../Redux/interfaces/userOwnerThisPage.interface\"\r\nimport { Album } from \"../../../Redux/interfaces/album.interface\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { getListAlbumsWithPhotosByUserIDAction } from \"../../../Redux/store/albums/albums.action\"\r\nimport { removeAlbumAction } from \"../../../Redux/store/albums/albums.action\"\r\nimport { addAlbumWithPhotosByUserIdAction } from \"../../../Redux/store/albums/albums.action\"\r\n\r\ntype AlbumsBlockProps = {\r\n  user: User\r\n  userOwnerThisPage: UserOwnerThisPageInterface\r\n  albumsForUserOwnerPage: [Album]\r\n  dispatch: any\r\n  homePageStatus?: boolean\r\n}\r\n\r\nconst AlbumsBlock: React.FC<AlbumsBlockProps> = ({\r\n  user,\r\n  userOwnerThisPage,\r\n  albumsForUserOwnerPage,\r\n  dispatch,\r\n  homePageStatus\r\n}) => {\r\n  const getList = useCallback(() => {\r\n    if (userOwnerThisPage._id) {\r\n      dispatch(getListAlbumsWithPhotosByUserIDAction(userOwnerThisPage._id))\r\n    }\r\n  }, [dispatch, userOwnerThisPage._id])\r\n\r\n  useEffect(() => {\r\n    getList()\r\n  }, [getList])\r\n\r\n  const editHandler = (albumId: string) => {}\r\n\r\n  const removeHandler = (albumId: string) => {\r\n    dispatch(removeAlbumAction(albumId, userOwnerThisPage._id))\r\n  }\r\n\r\n  const addChangeHandler = (e: any) => {\r\n    const arrayFiles = e.target.files\r\n    dispatch(\r\n      addAlbumWithPhotosByUserIdAction(userOwnerThisPage._id, arrayFiles)\r\n    )\r\n  }\r\n\r\n  const handleSubmit = (e: any) => {}\r\n\r\n  return (\r\n    <Box className={AlbumsBlockCSS.main__user_profile__albums_block}>\r\n      {/* {stateLoading === \"loading\" && <h1>Ожидайте ответа</h1>} */}\r\n      {// stateLoading === \"loaded\"   &&\r\n      albumsForUserOwnerPage.length &&\r\n        albumsForUserOwnerPage[0]._id !== undefined && (\r\n          <CreateList\r\n            arr={albumsForUserOwnerPage}\r\n            removeHandler={removeHandler}\r\n            editHandler={editHandler}\r\n            createListFunction={\"CreateListAlbums\"}\r\n          />\r\n        )}\r\n      <Button\r\n        variant=\"outlined\"\r\n        component=\"button\"\r\n        onClick={(e: any) => handleSubmit(e)}\r\n        className={AlbumsBlockCSS.albums_block__button}\r\n        disabled={homePageStatus !== undefined && !homePageStatus && true}\r\n      >\r\n        <p>ADD ALBUM</p>\r\n        <input\r\n          className={AlbumsBlockCSS.label__input}\r\n          type=\"file\"\r\n          multiple\r\n          onChange={e => {\r\n            addChangeHandler(e)\r\n          }}\r\n        />{\" \"}\r\n      </Button>\r\n      {/* {stateLoading !== \"loading\" && stateLoading !== \"loaded\" && (\r\n        <h1>ошибка</h1>\r\n      )} */}\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.common.user,\r\n  userOwnerThisPage: state.userOwnerThisPageForSagas.userOwnerThisPage,\r\n  albumsForUserOwnerPage: state.albumsState.albumsForUserOwnerPage\r\n})\r\n\r\nexport default connect(mapStateToProps)(AlbumsBlock)\r\n","import { Action } from \"../interfaces/action.interface\"\r\nimport { UserOwnerThisPageInterface } from \"../../interfaces/userOwnerThisPage.interface\"\r\nexport const ActionTypes = {\r\n  USER_OWNER_THIS_PAGE: \"[userOwnerThisPage] User owner this page\",\r\n  GET_USER_OWNER_THIS_PAGE_FOR_SAGAS:\r\n    \"[getUserOwnerThisPageActionForSagas] get user owner this page for sagas\",\r\n  SET_USER_OWNER_THIS_PAGE_FOR_SAGAS:\r\n    \"[setUserOwnerThisPageActionForSagas] set user owner this page for sagas\",\r\n  GET_FAILURE: \"[getFailure] get failure\"\r\n}\r\n\r\nexport const userOwnerThisPageAction = (\r\n  userOwnerThisPage: UserOwnerThisPageInterface\r\n): Action<UserOwnerThisPageInterface> => ({\r\n  type: ActionTypes.USER_OWNER_THIS_PAGE,\r\n  payload: userOwnerThisPage\r\n})\r\n\r\nexport const getUserOwnerThisPageActionForSagas = (\r\n  userOwnerThisPage: UserOwnerThisPageInterface\r\n): Action<UserOwnerThisPageInterface> => ({\r\n  type: ActionTypes.GET_USER_OWNER_THIS_PAGE_FOR_SAGAS,\r\n  payload: userOwnerThisPage\r\n})\r\n\r\nexport const setUserOwnerThisPageActionForSagas = (\r\n  userOwnerThisPage: UserOwnerThisPageInterface\r\n): Action<UserOwnerThisPageInterface> => ({\r\n  type: ActionTypes.SET_USER_OWNER_THIS_PAGE_FOR_SAGAS,\r\n  payload: userOwnerThisPage\r\n})\r\n\r\nexport const getFailureAction = (error?: any): Action<any> => ({\r\n  type: ActionTypes.GET_FAILURE,\r\n  payload: error\r\n})\r\n","import { Action } from \"../interfaces/action.interface\"\r\nimport { User } from \"../../interfaces/user.interface\"\r\n\r\nexport const ActionTypes = {\r\n  GET_AVATAR: \"[avatar] Get avatar\",\r\n  SET_AVATAR: \"[avatar] Set avatar\",    \r\n  DELETE_AVATAR: \"[avatar] Delete_avatar\",\r\n  GET_FAILURE: \"[getFailure] Get failure\"\r\n}\r\n\r\nexport const getAvatarAction = (avatar: {}, userOwnerThisPage : User, userLogin : User, avatarForFront:any ): Action<any> => ({\r\n    type: ActionTypes.GET_AVATAR,\r\n    payload: {\r\n        avatar,\r\n        userOwnerThisPage,\r\n        userLogin,\r\n        avatarForFront\r\n    }\r\n})\r\n\r\nexport const getFailureAction = (error?: any): Action<any> => ({\r\n  type: ActionTypes.GET_FAILURE,\r\n  payload: error\r\n})","import React, { useEffect, useState, useCallback } from \"react\"\r\nimport userInformationPageCSS from \"./userInformationPage.module.css\"\r\nimport AvatarBlock from \"./AvatarBlock/AvatarBlock\"\r\nimport InformationBlock from \"./InformationBlock/InformationBlock\"\r\nimport NavigationBlock from \"./NavigationBlock/NavigationBlock\"\r\nimport AlbumsBlock from \"./AlbumsBlock/AlbumsBlock\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../Redux/interfaces/user.interface\"\r\nimport { UserOwnerThisPageInterface } from \"../../Redux/interfaces/userOwnerThisPage.interface\"\r\nimport { getUserOwnerThisPageActionForSagas} from \"../../Redux/store/userOwnerThisPage/userOwnerThisPage.actions\"\r\nimport { getAvatarAction } from \"../../Redux/store/avatar/avatar.actions\"\r\n\r\ntype UserInformationPageProps = {\r\n  user: User\r\n  dispatch: any\r\n  match: any\r\n  userOwnerThisPage: UserOwnerThisPageInterface\r\n}\r\n\r\nconst UserInformationPage: React.FC<UserInformationPageProps> = ({\r\n  user,\r\n  dispatch,\r\n  match,\r\n  userOwnerThisPage\r\n}) => {\r\n  \r\n  const [avatarForFront, setAvatarForFront] = useState(\"\")\r\n  const [avatarForBack, setAvatarForBack] = useState(\"\")\r\n  const [homePageStatus, setHomePageStatus] = useState(false)\r\n  const idUserOwnerPage = match.params.id\r\n\r\n  const render = useCallback(async () => { \r\n     if(idUserOwnerPage) dispatch(getUserOwnerThisPageActionForSagas(idUserOwnerPage))    \r\n    if (idUserOwnerPage === user._id) setHomePageStatus(true)    \r\n  }, [dispatch, idUserOwnerPage, user._id])\r\n\r\n  useEffect(() => {\r\n    render()\r\n  }, [render])\r\n\r\n  const handleChangeAvatar = (e: any) => {\r\n    const target = e.target.files[0]\r\n    if (target) {\r\n      setAvatarForFront(URL.createObjectURL(target))\r\n      setAvatarForBack(target)\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault()    \r\n      dispatch(getAvatarAction(avatarForBack, userOwnerThisPage, user, avatarForFront))    \r\n  }\r\n\r\n  return (\r\n    <div className={userInformationPageCSS.container__user_information_page}>\r\n      <Box\r\n        component=\"section\"\r\n        display=\"grid\"\r\n        p={1}\r\n        m={1}\r\n        bgcolor=\"background.paper\"\r\n      >\r\n        <AvatarBlock\r\n          homePageStatus={homePageStatus}\r\n          avatarForFront={avatarForFront}\r\n          handleChangeAvatar={handleChangeAvatar}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </Box>\r\n      <Box\r\n        component=\"section\"\r\n        display=\"block\"\r\n        p={1}\r\n        m={1}\r\n        bgcolor=\"background.paper\"\r\n      >\r\n        <InformationBlock homePageStatus={homePageStatus}/>\r\n      </Box>\r\n      <Box\r\n        component=\"section\"\r\n        display=\"block\"\r\n        p={1}\r\n        m={1}\r\n        bgcolor=\"background.paper\"\r\n      >\r\n        <NavigationBlock />\r\n      </Box>\r\n      <Box\r\n        component=\"section\"\r\n        display=\"block\"\r\n        p={1}\r\n        m={1}\r\n        bgcolor=\"background.paper\"\r\n      >\r\n        <AlbumsBlock homePageStatus={homePageStatus}/>\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.common.user,\r\n  userOwnerThisPage: state.userOwnerThisPageForSagas.userOwnerThisPage\r\n})\r\n\r\nexport default connect(mapStateToProps)(UserInformationPage)\r\n","import React from \"react\"\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\"\r\nimport * as Yup from \"yup\"\r\nimport {\r\n  UserFormViewModes,\r\n  UserFormViewButtons\r\n} from \"../../shared/constants/user-from-view-mode.enum\"\r\nimport FormDataUsersCSS from \"./FormDataUsers.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../Redux/interfaces/user.interface\"\r\nimport { UserOwnerThisPageInterface } from \"../../Redux/interfaces/userOwnerThisPage.interface\"\r\n\r\ntype FormDataUsersProps = {\r\n  user: User\r\n  userOwnerThisPage: UserOwnerThisPageInterface\r\n  submitHandler: any\r\n  namePage: UserFormViewModes\r\n  nameButton: UserFormViewButtons\r\n}\r\n\r\nconst FormDataUsers: React.FC<FormDataUsersProps> = ({\r\n  user,\r\n  userOwnerThisPage,\r\n  submitHandler,\r\n  namePage,\r\n  nameButton\r\n}) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        login: \"\",\r\n        password: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        role: userOwnerThisPage ? userOwnerThisPage.role : \"user\"\r\n      }}\r\n      validationSchema={Yup.object({\r\n        login: Yup.string()\r\n          .max(15, \"Must be 15 characters or less\")\r\n          .required(\"Required\"),\r\n        firstName: Yup.string().max(15, \"Must be 15 characters or less\"),\r\n        lastName: Yup.string().max(20, \"Must be 20 characters or less\"),\r\n        email: Yup.string().email(\"Invalid email address\")\r\n        // phone: Yup.string().phone<string>(\"Invalid email address\")\r\n      })}\r\n      onSubmit={values => {\r\n        submitHandler(user ? user._id : undefined, values)\r\n      }}\r\n    >\r\n      <Form\r\n        className={FormDataUsersCSS.user_information__edit || \"form-data-users\"}\r\n      >\r\n        <label htmlFor=\"login\">\r\n          Login\r\n          <Field\r\n            className={FormDataUsersCSS.user_information__edit__label__input}\r\n            id=\"login\"\r\n            name=\"login\"\r\n            type=\"text\"\r\n          />\r\n        </label>\r\n        <ErrorMessage name=\"login\" />\r\n        <label htmlFor=\"password\">\r\n          Password\r\n          <Field name=\"password\" type=\"text\" />\r\n        </label>\r\n        <ErrorMessage name=\"role\" />\r\n        {(namePage === UserFormViewModes.Edit ||\r\n          namePage === UserFormViewModes.SingUp) && (\r\n          <>\r\n            <label htmlFor=\"firstName\">\r\n              First Name\r\n              <Field name=\"firstName\" type=\"text\" />\r\n            </label>\r\n            <ErrorMessage name=\"firstName\" />\r\n            <label htmlFor=\"lastName\">\r\n              Last Name\r\n              <Field name=\"lastName\" type=\"text\" />\r\n            </label>\r\n            <ErrorMessage name=\"lastName\" />\r\n            <label htmlFor=\"email\">\r\n              Email Address\r\n              <Field name=\"email\" type=\"email\" />\r\n            </label>\r\n            <ErrorMessage name=\"email\" />\r\n            <label htmlFor=\"phone\">\r\n              Phone\r\n              <Field name=\"phone\" type=\"text\" />\r\n            </label>\r\n            <ErrorMessage name=\"phone\" />\r\n            <label htmlFor=\"role\">\r\n              Role\r\n              <Field name=\"role\" type=\"text\" disabled />\r\n            </label>\r\n            <ErrorMessage name=\"role\" />\r\n          </>\r\n        )}\r\n        {namePage !== UserFormViewModes.Edit && (\r\n          <button type=\"submit\">{`${nameButton}`}</button>\r\n        )}\r\n        {namePage === UserFormViewModes.Edit &&\r\n          (user.role === \"admin\" || user._id === userOwnerThisPage._id) && (\r\n            <button type=\"submit\">{`${nameButton}`}</button>\r\n          )}\r\n      </Form>\r\n    </Formik>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.common.user,\r\n  userOwnerThisPage: state.userOwnerThisPage.userOwnerThisPage\r\n})\r\n\r\nexport default connect(mapStateToProps)(FormDataUsers)\r\n","import { Action } from \"../interfaces/action.interface\"\r\nimport { User } from \"../../interfaces/user.interface\"\r\nimport { UserLogOut } from \"../../interfaces/userLogOut.interface\"\r\n\r\nexport const ActionTypes = {\r\n  USER_LOGIN: \"[user] User login\",\r\n  USER_LOGOUT: \"[user] User logout\",\r\n  USER_REFRESH: \"[user] User refresh\",\r\n  GET_USER_LOGIN_FOR_SAGA: \"[user] Get user login for saga\",\r\n  SET_USER_LOGIN_IN_STORE: \"[user] Set user login for saga\",\r\n  GET_USER_FOR_LOGOUT: \"[user] Get user logout for saga\",  \r\n  GET_FAILURE: \"[getFailureAction] get failure action\"\r\n}\r\n\r\nexport const userLogIn = (user: {}): Action<{}> => ({\r\n  type: ActionTypes.USER_LOGIN,\r\n  payload: user\r\n})\r\n\r\nexport const userLogOutAction = (): Action<UserLogOut> => ({\r\n  type: ActionTypes.USER_LOGOUT\r\n})\r\n\r\nexport const userRefreshAction = (user: User): Action<User> => ({\r\n  type: ActionTypes.USER_REFRESH,\r\n  payload: user\r\n})\r\n\r\nexport const getUserLoginForSagaAction = (): Action<any> => ({\r\n  type: ActionTypes.GET_USER_LOGIN_FOR_SAGA\r\n})\r\n\r\nexport const setUserLoginInStoreAction = (user: User): Action<User> => ({\r\n  type: ActionTypes.SET_USER_LOGIN_IN_STORE,\r\n  payload: user\r\n})\r\n\r\nexport const getUserLogoutForSagaAction = (userId:string, user:User): Action<any> => ({\r\n  type: ActionTypes.GET_USER_FOR_LOGOUT\r\n})\r\n\r\nexport const getFailureAction = (error?: any): Action<any> => ({\r\n  type: ActionTypes.GET_FAILURE,\r\n  payload: error\r\n})\r\n","import React from \"react\"\r\nimport Service from \"../../services/service-user\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport FormDataUsers from \"../../components/FormDataUsers/FormDataUsers\"\r\nimport {\r\n  UserFormViewModes,\r\n  UserFormViewButtons\r\n} from \"../../shared/constants/user-from-view-mode.enum\"\r\nimport GetLoginPageCSS from \"./GetLoginPage.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { userLogIn } from \"../../Redux/store/userLogin/userLogin.actions\"\r\nimport { User } from \"../../Redux/interfaces/user.interface\"\r\n\r\ntype GetLoginPageProps = {\r\n  user: User\r\n  dispatch: any\r\n}\r\n\r\nconst GetLoginPage: React.FC<GetLoginPageProps> = ({ dispatch, user }) => {\r\n  const history = useHistory()\r\n\r\n  const logInHandler = async (id: any, user: any) => {\r\n    try {\r\n      const data = await Service.getTokenForLogin(id, user)\r\n      localStorage.setItem(\"token\", data.token)\r\n      dispatch(userLogIn(data.user))\r\n      // if(data.user.role==='admin') history.push(`/admin/all`)\r\n      history.push(`/user/allUsers`)\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3 className={GetLoginPageCSS.main__log_in__header}>Welcome Back</h3>\r\n      {!user.login && (\r\n        <>\r\n          <FormDataUsers\r\n            submitHandler={logInHandler}\r\n            namePage={UserFormViewModes.LogIn}\r\n            nameButton={UserFormViewButtons.LogIn}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.common.user\r\n})\r\n\r\nexport default connect(mapStateToProps)(GetLoginPage)\r\n","import React from \"react\"\r\nimport Service from \"../../services/service-user\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport FormDataUsers from \"../../components/FormDataUsers/FormDataUsers\"\r\nimport {\r\n  UserFormViewModes,\r\n  UserFormViewButtons\r\n} from \"../../shared/constants/user-from-view-mode.enum\"\r\nimport GetLogUpPageCSS from \"./GetLogUpPage.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { userLogIn } from \"../../Redux/store/userLogin/userLogin.actions\"\r\nimport { User } from \"../../Redux/interfaces/user.interface\"\r\n\r\ntype GetLogUpPageProps = {\r\n  user: User\r\n  dispatch: any\r\n}\r\n\r\nconst GetLogUpPage: React.FC<GetLogUpPageProps> = ({ user, dispatch }) => {\r\n  const history = useHistory()\r\n\r\n  const logUpHandler = async (id: string, user: User) => {\r\n    const data = await Service.getTokenForRegistration(id, user)\r\n    localStorage.setItem(\"token\", data.token)\r\n    dispatch(userLogIn(data.user))\r\n    history.push(`/user/allUsers`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3 className={GetLogUpPageCSS.main__sign_up__header}>\r\n        Make the best decision in your life\r\n      </h3>\r\n      <FormDataUsers\r\n        submitHandler={logUpHandler}\r\n        namePage={UserFormViewModes.SingUp}\r\n        nameButton={UserFormViewButtons.SingUp}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.common.user\r\n})\r\n\r\nexport default connect(mapStateToProps)(GetLogUpPage)\r\n","import React from \"react\"\r\nimport GetStartPageCSS from \"./GetStartPage.module.css\"\r\n\r\nexport const GetStartPage: React.FC = () => {\r\n  return (\r\n    <>\r\n      <h1\r\n        className={GetStartPageCSS.main__container__start_page__header}\r\n      >{`You are in the best application :))`}</h1>\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useCallback } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport NavbarCSS from \"./Navbar.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../Redux/interfaces/user.interface\"\r\nimport { getUserLoginForSagaAction } from \"../../Redux/store/userLogin/userLogin.actions\"\r\nimport { getUserLogoutForSagaAction } from \"../../Redux/store/userLogin/userLogin.actions\"\r\n\r\ntype NavbarProps = {\r\n  user: User\r\n  dispatch: any\r\n  loadingState: String\r\n}\r\n\r\nconst Navbar: React.FunctionComponent<NavbarProps> = ({\r\n  user,\r\n  dispatch,\r\n  loadingState\r\n}) => {\r\n  const getUserAfterLogInAndRefresh = useCallback(async () => {\r\n    if (localStorage.getItem(\"token\")) dispatch(getUserLoginForSagaAction())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    getUserAfterLogInAndRefresh()\r\n  }, [getUserAfterLogInAndRefresh])\r\n\r\n  const handlerLogOut = async () => {\r\n    try {\r\n      dispatch(getUserLogoutForSagaAction(user._id, user))\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <nav className={`${NavbarCSS.navbar_container} navbar_container`}>\r\n        {(loadingState === \"loading\" && <h1>Ожидайте ответа</h1>) ||\r\n          (loadingState === \"notFound\" && <h1>not found</h1>) ||\r\n          (loadingState === \"loaded\" && (\r\n            <>\r\n              {user.login && (\r\n                <>\r\n                  <a\r\n                    href=\"/\"\r\n                    className={`${NavbarCSS.navbar__avatar__brand_logo} brand-logo`}\r\n                  >\r\n                    {`Hello, ${user.login}`}\r\n                  </a>\r\n                  {user.avatar && (\r\n                    <img\r\n                      className={NavbarCSS.navbar__avatar}\r\n                      src={`http://strawberry-tart-41911.herokuapp.com/images/users/${user._id}/${user.avatar}`}\r\n                      alt=\"avatar\"\r\n                    />\r\n                  )}\r\n                  {!user.avatar && (\r\n                    <img\r\n                      className={NavbarCSS.navbar__avatar}\r\n                      src={`http://strawberry-tart-41911.herokuapp.com/images/pattern-avatar.jpg`}\r\n                      alt=\"avatar\"\r\n                    />\r\n                  )}\r\n                </>\r\n              )}\r\n              {!user.login && (\r\n                <a href=\"/\" id={\"incognito\"} className=\"brand-logo\">\r\n                  {`Hello, Incognito`}\r\n                </a>\r\n              )}\r\n              <ul className=\"right hide-on-med-and-down\">\r\n                <li>\r\n                  <NavLink to={`/user/profile/${user._id}`}>\r\n                    UserProfile\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink to={`/user/allUsers`}>All Users</NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink to={`/${user._id}/dialogs`}>My Dialogs</NavLink>\r\n                </li>\r\n                {user.login && (\r\n                  <li onClick={() => handlerLogOut()}>\r\n                    <NavLink to=\"/\">Log Out</NavLink>\r\n                  </li>\r\n                )}\r\n                {!user.login && (\r\n                  <>\r\n                    <li>\r\n                      <NavLink to=\"/LogIn\">Log In</NavLink>\r\n                    </li>\r\n                    <li>\r\n                      <NavLink to=\"/SignUp\">Sign Up</NavLink>\r\n                    </li>\r\n                  </>\r\n                )}\r\n              </ul>\r\n            </>\r\n          )) ||\r\n          (loadingState === \"error\" && <h1>ошибка</h1>)}\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.common.user,\r\n  loadingState: state.loadingState.loadingState\r\n})\r\n\r\nexport default connect(mapStateToProps)(Navbar)\r\n","import React from \"react\"\r\nimport { Route, Redirect, RouteProps } from \"react-router-dom\"\r\n\r\nconst token = () => {\r\n  return localStorage.getItem(\"token\") ? true : false\r\n}\r\n\r\nexport interface PrivateRouteProps extends RouteProps {\r\n  isAuthenticated: () => {}\r\n  authenticationPath: string\r\n}\r\n\r\nexport const defaultPrivateRouteProps: PrivateRouteProps = {\r\n  isAuthenticated: token,\r\n  authenticationPath: \"/LogIn\"\r\n}\r\n\r\nexport const PrivateRoute: React.FC<PrivateRouteProps> = props => {\r\n  let redirectPath = \"\"\r\n  if (!props.isAuthenticated()) {\r\n    redirectPath = props.authenticationPath\r\n  }\r\n\r\n  if (redirectPath) {\r\n    const renderComponent = () => <Redirect to={{ pathname: redirectPath }} />\r\n    return <Route {...props} component={renderComponent} render={undefined} />\r\n  } else {\r\n    return <Route {...props} />\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { Route, Redirect, RouteProps } from \"react-router-dom\"\r\n\r\nconst token = () => {\r\n  return localStorage.getItem(\"token\") ? true : false\r\n}\r\n\r\nconst admin = () => {\r\n  return localStorage.getItem(\"userRole\") === \"admin\" ? true : false\r\n}\r\nexport interface PrivateRouteForAdminsProps extends RouteProps {\r\n  isAuthenticated: () => {}\r\n  authenticationPath: string\r\n  isAdmin: () => {}\r\n  restrictedAdminPath: string\r\n}\r\n\r\nexport const defaultPrivateRouteForAdminsProps: PrivateRouteForAdminsProps = {\r\n  isAuthenticated: token,\r\n  authenticationPath: \"/LogIn\",\r\n  isAdmin: admin,\r\n  restrictedAdminPath: \"/user/All\"\r\n}\r\n\r\nexport const PrivateRouteForAdmins: React.FC<PrivateRouteForAdminsProps> = props => {\r\n  let redirectPath = \"\"\r\n  if (!props.isAuthenticated()) {\r\n    redirectPath = props.authenticationPath\r\n  }\r\n  if (props.isAuthenticated() && !props.isAdmin()) {\r\n    redirectPath = props.restrictedAdminPath\r\n  }\r\n\r\n  if (redirectPath) {\r\n    const renderComponent = () => <Redirect to={{ pathname: redirectPath }} />\r\n    return <Route {...props} component={renderComponent} render={undefined} />\r\n  } else {\r\n    return <Route {...props} />\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport PhotoModalWindowCSS from \"./PhotoModalWindow.module.css\"\r\nimport AliceCarousel from \"react-alice-carousel\"\r\nimport \"react-alice-carousel/lib/alice-carousel.css\"\r\n\r\ntype PhotoModalWindowProps = {\r\n  arrayPhotosChosenAlbum: any\r\n  launchTogglePhotoModalWindow: any\r\n  currentUrlPhotoForLoop: string\r\n}\r\n\r\nconst PhotoModalWindow: React.FC<PhotoModalWindowProps> = ({\r\n  arrayPhotosChosenAlbum,\r\n  launchTogglePhotoModalWindow,\r\n  currentUrlPhotoForLoop\r\n}) => {\r\n  const currentIndex = arrayPhotosChosenAlbum.findIndex(\r\n    (photo: any) => photo.url === currentUrlPhotoForLoop\r\n  )\r\n\r\n  const handleOnDragStart = (e: any) => e.preventDefault()\r\n\r\n  return (\r\n    <div className={PhotoModalWindowCSS.user_profile__chosen_album__photo_loop}>\r\n      <p onClick={() => launchTogglePhotoModalWindow()}>\r\n        BACK TO PHOTO LIST IN THIS ALBUM\r\n      </p>\r\n\r\n      <div>\r\n        <AliceCarousel startIndex={currentIndex} mouseTrackingEnabled>\r\n          {arrayPhotosChosenAlbum.length &&\r\n            arrayPhotosChosenAlbum.map((item: any) => (\r\n              <img\r\n                onDragStart={handleOnDragStart}\r\n                key={item._id}\r\n                src={`http://strawberry-tart-41911.herokuapp.com/images/users/${item.ownerUser}/${item.url}`}\r\n                className={\r\n                  PhotoModalWindowCSS.user_profile__chosen_album__photo_loop__img\r\n                }\r\n                alt=\"title\"\r\n              />\r\n            ))}\r\n        </AliceCarousel>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PhotoModalWindow\r\n","import React, { useState, useEffect, useCallback } from \"react\"\r\nimport GetAlbumByIDCSS from \"./GetAlbumByID.module.css\"\r\nimport CreateList from \"../../components/CreateList/CreateList\"\r\nimport { Link } from \"react-router-dom\"\r\nimport PhotoModalWindow from \"../../components/PhotoModalWindow/PhotoModalWindow\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../Redux/interfaces/user.interface\"\r\nimport { UserOwnerThisPageInterface } from \"../../Redux/interfaces/userOwnerThisPage.interface\"\r\nimport { Photo } from \"../../Redux/interfaces/photo.interface\"\r\nimport { getListPhotosByAlbumIdAction } from \"../../Redux/store/albums/albums.action\"\r\nimport { addPhotosInCurrentAlbumAction } from \"../../Redux/store/albums/albums.action\"\r\nimport { removePhotoFromCurrentAlbumAction } from \"../../Redux/store/albums/albums.action\"\r\n\r\ntype GetAlbumByIDProps = {\r\n  user: User\r\n  userOwnerThisPage: UserOwnerThisPageInterface\r\n  currentAlbum: [Photo]\r\n  loadingState: string\r\n  match: any\r\n  dispatch: any\r\n}\r\n\r\nconst GetAlbumByID: React.FC<GetAlbumByIDProps> = ({\r\n  user,\r\n  userOwnerThisPage,\r\n  currentAlbum,\r\n  loadingState,\r\n  match,\r\n  dispatch\r\n}) => {\r\n  const [statusPhotoModalWindow, setStatusPhotoModalWindow]: any = useState(\r\n    false\r\n  )\r\n  const [currentUrlPhotoForLoop, setCurrentUrlPhotoForLoop]: any = useState(\"\")\r\n  const idChosenAlbum = match.params.id\r\n\r\n  const getList = useCallback(async () => {\r\n    dispatch(getListPhotosByAlbumIdAction(idChosenAlbum))\r\n  }, [dispatch, idChosenAlbum])\r\n\r\n  useEffect(() => {\r\n    getList()\r\n  }, [getList, user])\r\n\r\n  const launchTogglePhotoModalWindow = (e: any) => {\r\n    if (!statusPhotoModalWindow) setCurrentUrlPhotoForLoop(e.target.title)\r\n    setStatusPhotoModalWindow(!statusPhotoModalWindow)\r\n  }\r\n\r\n  const editHandler = async (id: string) => {}\r\n\r\n  const removeHandler = async (photoId: string) => {\r\n    dispatch(removePhotoFromCurrentAlbumAction(photoId, idChosenAlbum))\r\n  }\r\n\r\n  const addChangeHandler = async (e: any) => {\r\n    const arrayFiles = e.target.files\r\n    dispatch(\r\n      addPhotosInCurrentAlbumAction(\r\n        userOwnerThisPage._id,\r\n        idChosenAlbum,\r\n        arrayFiles\r\n      )\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={GetAlbumByIDCSS.main__user_profile__album_block}>\r\n        {loadingState === \"loading\" && <h1>Ожидайте ответа</h1>}\r\n        {loadingState === \"loaded\" && (\r\n          <>\r\n            <Link to={`/user/profile/${userOwnerThisPage._id}`}>\r\n              <p>BACK TO ALBUM LIST</p>\r\n            </Link>\r\n            <CreateList\r\n              arr={currentAlbum}\r\n              removeHandler={removeHandler}\r\n              editHandler={editHandler}\r\n              idChosenAlbum={idChosenAlbum}\r\n              createListFunction={\"CreateListPhotos\"}\r\n              launchTogglePhotoModalWindow={launchTogglePhotoModalWindow}\r\n            />\r\n          </>\r\n        )}\r\n        {loadingState === \"error\" && <h1>ошибка</h1>}\r\n        <div className={GetAlbumByIDCSS.photos__container_drag_and_drop}></div>\r\n        {/* I need user for advance feature for user and loginUser and admin  */}\r\n        {(user.role === \"admin\" || user._id === userOwnerThisPage._id) && (\r\n          <label\r\n            className={GetAlbumByIDCSS.photos__container_drag_and_drop__label}\r\n            htmlFor=\"addFiles\"\r\n          >\r\n            Add photos\r\n            <input\r\n              className={GetAlbumByIDCSS.label__input}\r\n              id=\"addFiles\"\r\n              type=\"file\"\r\n              multiple\r\n              onChange={e => {\r\n                addChangeHandler(e)\r\n              }}\r\n            />\r\n          </label>\r\n        )}\r\n      </div>\r\n      {statusPhotoModalWindow && (\r\n        <PhotoModalWindow\r\n          arrayPhotosChosenAlbum={currentAlbum}\r\n          launchTogglePhotoModalWindow={launchTogglePhotoModalWindow}\r\n          currentUrlPhotoForLoop={currentUrlPhotoForLoop}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.common.user,\r\n  userOwnerThisPage: state.userOwnerThisPageForSagas.userOwnerThisPage,\r\n  currentAlbum: state.albumsState.currentAlbum,\r\n  loadingState: state.loadingState.loadingStatePhotosInCurrentAlbum\r\n})\r\n\r\nexport default connect(mapStateToProps)(GetAlbumByID)\r\n","import React, { useEffect } from \"react\"\r\nimport UserCard from \"../../components/UserCard/UserCard\"\r\nimport PageFriendsCSS from \"./pageFriends.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../Redux/interfaces/user.interface\"\r\nimport { getFriendsByUserIdAction } from \"../../Redux/store/allUsers/allUsers.actions\"\r\n\r\ntype PageFriendsProps = {\r\n  user: User\r\n  dispatch: any\r\n  allFriends: [User]\r\n  match: any\r\n}\r\n\r\nconst PageFriends: React.FunctionComponent<PageFriendsProps> = ({\r\n  user,\r\n  dispatch,\r\n  allFriends,\r\n  match\r\n}) => {\r\n  const idUserOwnerPage = match.params.id\r\n  useEffect(() => {\r\n    dispatch(getFriendsByUserIdAction(idUserOwnerPage))\r\n  }, [dispatch, idUserOwnerPage])\r\n\r\n  const getLogInUserAllSubscriptionsAndObserver = () => {\r\n    dispatch(getFriendsByUserIdAction(idUserOwnerPage))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* {load === \"loading\" && <h1>Ожидайте ответа</h1>}\r\n      {load === \"loaded\" && */}\r\n      (\r\n      <ul className={PageFriendsCSS.container__all_users__cards}>\r\n        {allFriends &&\r\n          allFriends.length > 0 &&\r\n          allFriends.map((userOwnerCard: any) => {\r\n            return (\r\n              userOwnerCard._id !== idUserOwnerPage && (\r\n                <UserCard\r\n                  key={userOwnerCard._id || 1}\r\n                  userOwnerCard={userOwnerCard}\r\n                  getLogInUserAllSubscriptionsAndObserver={\r\n                    getLogInUserAllSubscriptionsAndObserver\r\n                  }\r\n                />\r\n              )\r\n            )\r\n          })}\r\n      </ul>\r\n      ){/* {load !== \"loading\" && load !== \"loaded\" && <h1>ошибка</h1>} */}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.common.user,\r\n  allFriends: state.allUsers.allFriends\r\n})\r\n\r\nexport default connect(mapStateToProps)(PageFriends)\r\n","import React from \"react\"\r\nimport AlbumsBlock from \"../../pages/userInformationPage/AlbumsBlock/AlbumsBlock\"\r\nimport AllAlbumsPageCSS from \"./allAlbumsPage.module.css\"\r\n\r\nconst AllAlbumsPage: React.FC = () => {\r\n  return (\r\n    <div className={AllAlbumsPageCSS.AllAlbumPage__container}>\r\n      <AlbumsBlock />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllAlbumsPage\r\n","import React, { useEffect, useCallback } from \"react\"\r\nimport AllPhotosPageCSS from \"./allPhotosPage.module.css\"\r\n// import CreateList from \"../../components/CreateList/CreateList\"\r\nimport { Link } from \"react-router-dom\"\r\n// import PhotoModalWindow from \"../../components/PhotoModalWindow/PhotoModalWindow\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../Redux/interfaces/user.interface\"\r\nimport { UserOwnerThisPageInterface } from \"../../Redux/interfaces/userOwnerThisPage.interface\"\r\nimport { Photo } from \"../../Redux/interfaces/photo.interface\"\r\nimport { getListPhotosByUserIdIdAction } from \"../../Redux/store/albums/albums.action\"\r\n// import { addPhotosInCurrentAlbumAction } from \"../../Redux/store/albums/albums.action\"\r\n// import { removePhotoFromCurrentAlbumAction } from \"../../Redux/store/albums/albums.action\"\r\n\r\ntype AllPhotosPageProps = {\r\n  user: User\r\n  userOwnerThisPage: UserOwnerThisPageInterface\r\n  currentAlbum: [Photo]\r\n  allPhotosForThisUser: [Photo]\r\n  loadingState: string\r\n  match: any\r\n  dispatch: any\r\n}\r\n\r\nconst AllPhotosPage: React.FC<AllPhotosPageProps> = ({\r\n  user,\r\n  userOwnerThisPage,\r\n  currentAlbum,\r\n  loadingState,\r\n  allPhotosForThisUser,\r\n  match,\r\n  dispatch\r\n}) => {\r\n  const thisUserId = match.params.id\r\n  console.log(allPhotosForThisUser)\r\n\r\n  const getList = useCallback(async () => {\r\n    dispatch(getListPhotosByUserIdIdAction(thisUserId))\r\n  }, [dispatch, thisUserId])\r\n\r\n  useEffect(() => {\r\n    getList()\r\n  }, [getList])\r\n\r\n  return (\r\n    <div className={AllPhotosPageCSS.AllPhotoPage__container}>\r\n      <Link to={`/user/profile/${userOwnerThisPage._id}`}>\r\n        <p>BACK TO ALBUM LIST</p>\r\n      </Link>\r\n      {/* <CreateList\r\n              arr={currentAlbum}\r\n              removeHandler={removeHandler}\r\n              editHandler={editHandler}\r\n              idChosenAlbum={idChosenAlbum}\r\n              createListFunction={\"CreateListPhotos\"}\r\n              launchTogglePhotoModalWindow={launchTogglePhotoModalWindow}\r\n            /> */}\r\n      <ul className={AllPhotosPageCSS.user_profile__photos_list__container}>\r\n        {allPhotosForThisUser.length > 0 &&\r\n          allPhotosForThisUser.map((item: any) => (\r\n            <li\r\n              className={AllPhotosPageCSS.user_profile__photo_container}\r\n              key={item._id || 1}\r\n            >\r\n              <img\r\n                src={`http://strawberry-tart-41911.herokuapp.com/images/users/${thisUserId}/${item.url}`}\r\n                alt=\"userPhoto\"\r\n              />\r\n            </li>\r\n          ))}\r\n        {!allPhotosForThisUser.length && <p>Your list photos is empty</p>}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.common.user,\r\n  userOwnerThisPage: state.userOwnerThisPageForSagas.userOwnerThisPage,\r\n  currentAlbum: state.albumsState.currentAlbum,\r\n  loadingState: state.loadingState.loadingStatePhotosInCurrentAlbum,\r\n  allPhotosForThisUser: state.albumsState.allPhotosForThisUser\r\n})\r\n\r\nexport default connect(mapStateToProps)(AllPhotosPage)\r\n","import React from \"react\"\r\n\r\nconst NotFound = () => {\r\n  return <div>page not found</div>\r\n}\r\n\r\nexport default NotFound\r\n","import React from \"react\"\r\n\r\nexport const AdminAllUsers: React.FC = () => {\r\n  return (\r\n    <>\r\n      <div>Admin page</div>\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport FormDataUsers from \"../../components/FormDataUsers/FormDataUsers\"\r\nimport {\r\n  UserFormViewModes,\r\n  UserFormViewButtons\r\n} from \"../../shared/constants/user-from-view-mode.enum\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport Service from \"../../services/service-user\"\r\n\r\nexport const UserEditInformation = (props: any) => {\r\n  const idUserOwnerPage = props.match.params.id\r\n\r\n  const history = useHistory()\r\n\r\n  const submitHandler = async (id: number, user: any) => {\r\n    await Service.editUser(id, user)\r\n    history.push(`/user/profile/${idUserOwnerPage}`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to={`/user/profile/${idUserOwnerPage}`}>\r\n        <p>BACK TO USER INFORMATION</p>\r\n      </Link>\r\n      <div>\r\n        <FormDataUsers\r\n          submitHandler={submitHandler}\r\n          namePage={UserFormViewModes.Edit}\r\n          nameButton={UserFormViewButtons.Edit}\r\n        />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { ActionTypes } from \"./userOwnerThisPage.actions\"\r\nimport { Action } from \"../interfaces/action.interface\"\r\nimport { UserOwnerThisPageInterface } from \"../../interfaces/userOwnerThisPage.interface\"\r\n\r\nexport interface State {\r\n  userOwnerThisPage: UserOwnerThisPageInterface\r\n}\r\n\r\nconst initialState: State = {\r\n  userOwnerThisPage: {} as UserOwnerThisPageInterface\r\n}\r\n\r\nexport const userOwnerThisPageReducer = (\r\n  state: State = initialState,\r\n  action: Action<{}>\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.USER_OWNER_THIS_PAGE:\r\n      return {\r\n        ...state,\r\n        userOwnerThisPage: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userOwnerThisPageReducerForSagas = (\r\n  state: State = initialState,\r\n  action: Action<{}>\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.SET_USER_OWNER_THIS_PAGE_FOR_SAGAS:\r\n      return {\r\n        ...state,\r\n        userOwnerThisPage: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { ActionTypes } from \"./userLogin.actions\"\r\nimport { Action } from \"../interfaces/action.interface\"\r\nimport { User } from \"../../interfaces/user.interface\"\r\nexport interface State {\r\n  user: User\r\n}\r\n\r\nconst initialState: State = {\r\n  user: {} as User\r\n}\r\n\r\nexport const reducer = (state: State = initialState, action: Action<{}>) => {\r\n  switch (action.type) {\r\n    case ActionTypes.USER_LOGIN:\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      }\r\n    case ActionTypes.USER_LOGOUT:\r\n      return {\r\n        ...state,\r\n        user: initialState\r\n      }\r\n    case ActionTypes.USER_REFRESH:\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      }\r\n    case ActionTypes.SET_USER_LOGIN_IN_STORE:     \r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { ActionTypes } from \"./allUsers.actions\"\r\nimport { Action } from \"../interfaces/action.interface\"\r\nimport { User } from \"../../interfaces/user.interface\"\r\nexport interface State {\r\n  allUsers: [User]\r\n  allFriends: [User]\r\n}\r\n\r\nconst initialState: State = {\r\n  allUsers: [{} as User],\r\n  allFriends: [{} as User]\r\n}\r\n\r\nexport const allUserReducer = (\r\n  state: State = initialState,\r\n  action: Action<[]>\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ALL_USERS:\r\n      return {\r\n        ...state,\r\n        allUsers: action.payload\r\n      }\r\n    case ActionTypes.PUT_ALL_USERS_IN_STATE:\r\n      return {\r\n        ...state,\r\n        allUsers: action.payload\r\n      }\r\n    case ActionTypes.SET_ALL_USERS_WITH_PAGINATION_SEARCH_FILTER:\r\n      return {\r\n        ...state,\r\n        allUsers: action.payload\r\n      }\r\n    case ActionTypes.SET_ALL_FRIENDS_FOR_USER:\r\n      return {\r\n        ...state,\r\n        allFriends: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { Action } from \"../interfaces/action.interface\"\r\nimport { Dialog } from \"../../interfaces/dialog.interface\"\r\n\r\nexport const ActionTypes = {\r\n  ADD_CURRENT_DIALOG: \"[Dialog] add current dialog\",\r\n  GET_ALL_DIALOGS_BY_USER_ID: \"[Dialog] Get all dialogs by userId\",\r\n  SET_ALL_DIALOGS_BY_USER_ID: \"[Dialog] Set all dialogs by userId\",\r\n  ADD_DIALOG: \"[Dialog] Add dialog\",\r\n  GET_FAILURE: \"[getFailureAction] get failure action\"\r\n}\r\n\r\nexport const currentDialogAction = (currentDialog: Dialog): Action<Dialog> => ({\r\n  type: ActionTypes.ADD_CURRENT_DIALOG,\r\n  payload: currentDialog\r\n})\r\n\r\nexport const getAllDialogsByUserIdAction = (\r\n  userId: string\r\n): Action<string> => ({\r\n  type: ActionTypes.GET_ALL_DIALOGS_BY_USER_ID,\r\n  payload: userId\r\n})\r\n\r\nexport const setAllDialogsByUserIdInStoreAction = (\r\n  dialogs: [Dialog]\r\n): Action<[Dialog]> => ({\r\n  type: ActionTypes.SET_ALL_DIALOGS_BY_USER_ID,\r\n  payload: dialogs\r\n})\r\n\r\nexport const addDialogAction = (dialog: {}): Action<{}> => ({\r\n  type: ActionTypes.ADD_DIALOG,\r\n  payload: dialog\r\n})\r\n\r\nexport const getFailureAction = (error?: any): Action<any> => ({\r\n  type: ActionTypes.GET_FAILURE,\r\n  payload: error\r\n})\r\n","import { Dialog } from \"../../interfaces/dialog.interface\"\r\nimport { ActionTypes } from \"./dialogs.actions\"\r\nimport { Action } from \"../interfaces/action.interface\"\r\n\r\nexport interface State {\r\n  currentDialog: Dialog\r\n  allDialogs: [Dialog]\r\n}\r\n\r\nconst initialState: State = {\r\n  currentDialog: {} as Dialog,\r\n  allDialogs: [{} as Dialog]\r\n}\r\n\r\nexport const dialogReducer = (\r\n  state: State = initialState,\r\n  action: Action<{}>\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_CURRENT_DIALOG:\r\n      return {\r\n        ...state,\r\n        currentDialog: action.payload\r\n      }\r\n      case ActionTypes.SET_ALL_DIALOGS_BY_USER_ID:\r\n      return {\r\n        ...state,\r\n        allDialogs: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { Action } from \"../interfaces/action.interface\"\r\nimport { Message } from \"../../interfaces/message.interface\"\r\n\r\nexport const ActionTypes = {\r\n  ALL_MESSAGE_FOR_CURRENT_DIALOG:\r\n    \"[listMessagesForCurrentDialog] list messages for current dialog\",\r\n  GET_ALL_MESSAGES_FOR_CURRENT_DIALOG:\r\n    \"[ getAllMessagesCurrentDialogAction]  get all messages for current dialog action\",\r\n  PUT_IN_STORE_ALL_MESSAGES_FOR_CURRENT_DIALOG:\r\n    \"[putInStoreAllMessagesCurrentDialogAction] put in store all messages for current dialog action\",\r\n\r\n  GET_NEW_MESSAGE_FOR_CURRENT_DIALOG:\r\n    \"[getNewMessageForCurrentDialog] get new message for currentDialog\",\r\n  PUT_IN_STORE_NEW_MESSAGE_FOR_CURRENT_DIALOG:\r\n    \"[putInStoreNewMessageForCurrentDialogAction] put in store new message for current dialog action\",\r\n  GET_FAILURE: \"[getFailureAction] get failure action\"\r\n}\r\n\r\nexport const getAllMessagesCurrentDialogAction = (\r\n  currentDialogId: string\r\n): Action<string> => ({\r\n  type: ActionTypes.GET_ALL_MESSAGES_FOR_CURRENT_DIALOG,\r\n  payload: currentDialogId\r\n})\r\n\r\nexport const putInStoreAllMessagesCurrentDialogAction = (\r\n  allMessagesCurrentDialogAction: [Message]\r\n): Action<any> => ({\r\n  type: ActionTypes.PUT_IN_STORE_ALL_MESSAGES_FOR_CURRENT_DIALOG,\r\n  payload: allMessagesCurrentDialogAction\r\n})\r\n\r\nexport const getNewMessageForCurrentDialogAction = (\r\n  newMessageForCurrentDialog: Message\r\n): Action<{}> => ({\r\n  type: ActionTypes.GET_NEW_MESSAGE_FOR_CURRENT_DIALOG,\r\n  payload: newMessageForCurrentDialog\r\n})\r\n\r\nexport const putInStoreNewMessageForCurrentDialogAction = (\r\n  newMessageForCurrentDialog: Message\r\n): Action<{}> => ({\r\n  type: ActionTypes.PUT_IN_STORE_NEW_MESSAGE_FOR_CURRENT_DIALOG,\r\n  payload: newMessageForCurrentDialog\r\n})\r\n\r\nexport const getFailureAction = (error?: any): Action<any> => ({\r\n  type: ActionTypes.GET_FAILURE,\r\n  payload: error\r\n})\r\n","import { ActionTypes } from \"./listMessagesForCurrentDialog.actions\"\r\nimport { Action } from \"../interfaces/action.interface\"\r\nimport { Message } from \"../../interfaces/message.interface\"\r\nexport interface State {\r\n  listMessagesForCurrentDialog: [Message]\r\n}\r\n\r\nconst initialState: State = {\r\n  listMessagesForCurrentDialog: [{} as Message]\r\n}\r\n\r\nexport const listMessagesForCurrentDialogReducer = (\r\n  state: State = initialState,\r\n  action: Action<any>\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.PUT_IN_STORE_ALL_MESSAGES_FOR_CURRENT_DIALOG:\r\n      return {\r\n        ...state,\r\n        listMessagesForCurrentDialog: action.payload\r\n      }\r\n    case ActionTypes.PUT_IN_STORE_NEW_MESSAGE_FOR_CURRENT_DIALOG:\r\n      return {\r\n        ...state,\r\n        listMessagesForCurrentDialog: state.listMessagesForCurrentDialog.concat(\r\n          action.payload\r\n        )\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { ActionTypes } from \"./pagination.actions\"\r\nimport { Action } from \"../interfaces/action.interface\"\r\nimport { Pagination } from \"../../interfaces/pagination.interface\"\r\nexport interface State {\r\n  pagination: Pagination\r\n}\r\n\r\nconst initialState: State = {\r\n  pagination: { numberPage: 1, limitUsersForRender: 0 }\r\n}\r\n\r\nexport const paginationReducer = (\r\n  state: State = initialState,\r\n  action: Action<{}>\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.PAGINATION_SET_VALUES:\r\n      return {\r\n        ...state,\r\n        pagination: action.payload\r\n      }\r\n    case ActionTypes.PAGINATION_SET_NUMBER_PAGE:\r\n      return {\r\n        ...state,\r\n        pagination: action.payload\r\n      }\r\n    case ActionTypes.PAGINATION_SET_LIMIT_USERS_FOR_RENDER:\r\n      return {\r\n        ...state,\r\n        pagination: action.payload\r\n      }\r\n    case ActionTypes.PAGINATION_SET_INITIAL_VALUE:\r\n      return {\r\n        ...state,\r\n        pagination: initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { ActionTypes } from \"./checkBoxState.actions\"\r\nimport { Action } from \"../interfaces/action.interface\"\r\n// import { CheckBoxState } from \"../../interfaces/checkBoxState.interface\"\r\n\r\nexport interface State {\r\n  checkBoxState: boolean\r\n  prevCheckBoxState: boolean | undefined\r\n}\r\n\r\nconst initialState: State = {\r\n  checkBoxState: false,\r\n  prevCheckBoxState: undefined\r\n}\r\n\r\nexport const checkBoxStateReducer = (\r\n  state: State = initialState,\r\n  action: Action<{}>\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.SET_CHECK_BOX_STATE:\r\n      return {\r\n        ...state,\r\n        checkBoxState: action.payload\r\n      }\r\n    case ActionTypes.CHANGE_CHECK_BOX_STATE:\r\n      return {\r\n        ...state,\r\n        checkBoxState: !state.checkBoxState\r\n      }\r\n    case ActionTypes.SET_PREV_CHECK_BOX_STATE:\r\n      return {\r\n        ...state,\r\n        prevCheckBoxState: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { ActionTypes } from \"./searchStringState.actions\"\r\nimport { Action } from \"../interfaces/action.interface\"\r\n\r\nexport interface State {\r\n  searchStringState: \"\" | String\r\n}\r\n\r\nconst initialState: State = {\r\n  searchStringState: \"\"\r\n}\r\n\r\nexport const searchStringStateReducer = (\r\n  state: State = initialState,\r\n  action: Action<{}>\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.SET_INITIAL_SEARCH_STRING_STATE:\r\n      return {\r\n        ...state,\r\n        searchStringState: initialState.searchStringState\r\n      }\r\n    case ActionTypes.SET_CURRENT_SEARCH_STRING_STATE:\r\n      return {\r\n        ...state,\r\n        searchStringState: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { Action } from \"../interfaces/action.interface\"\r\n// import { LoadingState } from \"../../interfaces/loading.interfaces\"\r\n\r\nexport const ActionTypes = {\r\n  SET_LOADING_STATE: \"[loading state] Set loading state\",\r\n  SET_LOADING_STATE_PHOTOS_IN_ALBUM: \"[loading state] Set loading state photos in current album\"\r\n}\r\n\r\nexport const setLoadingState = (loadingState: string): Action<string> => ({\r\n  type: ActionTypes.SET_LOADING_STATE,\r\n  payload: loadingState\r\n})\r\n\r\nexport const setLoadingStatePhotosInCurrentAlbumAction = (loadingState: string): Action<string> => ({\r\n  type: ActionTypes.SET_LOADING_STATE_PHOTOS_IN_ALBUM,\r\n  payload: loadingState\r\n})","import { ActionTypes } from \"./loading.actions\"\r\nimport { Action } from \"../interfaces/action.interface\"\r\n\r\nexport interface State {\r\n  loadingState: string\r\n  loadingStatePhotosInCurrentAlbum: string\r\n}\r\n\r\nconst initialState: State = {\r\n  loadingState: \"loaded\",\r\n  loadingStatePhotosInCurrentAlbum: \"loaded\"\r\n}\r\n\r\nexport const loadingStateReducer = (\r\n  state: State = initialState,\r\n  action: Action<String>\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.SET_LOADING_STATE:\r\n      return {\r\n        ...state,\r\n        loadingState: action.payload\r\n      }\r\n      case ActionTypes.SET_LOADING_STATE_PHOTOS_IN_ALBUM:\r\n      return {\r\n        ...state,\r\n        loadingStatePhotosInCurrentAlbum: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { Album } from \"../../interfaces/album.interface\"\r\nimport { ActionTypes } from \"./albums.action\"\r\nimport { Action } from \"../interfaces/action.interface\"\r\nimport { Photo } from \"../../interfaces/photo.interface\"\r\n\r\nexport interface State {\r\n  albumsForUserOwnerPage: [Album]\r\n  currentAlbum: [Photo]\r\n  allPhotosForThisUser: [Photo]\r\n}\r\n\r\nconst initialState: State = {\r\n  albumsForUserOwnerPage: [{} as Album],\r\n  currentAlbum: [{} as Photo],\r\n  allPhotosForThisUser: [{} as Photo]\r\n}\r\n\r\nexport const albumsReducer = (\r\n  state: State = initialState,\r\n  action: Action<[any]>\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.SET_LIST_ALBUMS_WITH_PHOTOS:\r\n      return {\r\n        ...state,\r\n        albumsForUserOwnerPage: action.payload\r\n      }\r\n    case ActionTypes.SET_LIST_PHOTOS_FOR_CURRENT_ALBUM:\r\n      return {\r\n        ...state,\r\n        currentAlbum: action.payload\r\n      }\r\n      case ActionTypes.SET_LIST_PHOTOS_FOR_USER:\r\n      return {\r\n        ...state,\r\n        allPhotosForThisUser: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\"\r\nimport { userOwnerThisPageReducerForSagas } from \"./userOwnerThisPage/userOwnerThisPage.reducer\"\r\nimport { reducer as userReducer } from \"./userLogin/userLogin.reducer\"\r\nimport { userOwnerThisPageReducer } from \"./userOwnerThisPage/userOwnerThisPage.reducer\"\r\nimport { allUserReducer } from \"./allUsers/allUsers.reducer\"\r\nimport { dialogReducer } from \"./dialogs/dialogs.reducer\"\r\nimport { listMessagesForCurrentDialogReducer } from \"./listMessagesForCurrentDialog/listMessagesForCurrentDialog.reducer\"\r\nimport { paginationReducer } from \"./pagination/pagination.reducer\"\r\nimport { checkBoxStateReducer } from \"./checkBoxState/checkBoxState.reducer\"\r\nimport { searchStringStateReducer } from \"./searchStringState/searchStringState.reducer\"\r\nimport { loadingStateReducer } from \"./loading/loading.reducer\"\r\nimport { albumsReducer } from \"./albums/albums.reducer\"\r\n\r\nexport default combineReducers({\r\n  common: userReducer,\r\n  userOwnerThisPage: userOwnerThisPageReducer,\r\n  userOwnerThisPageForSagas: userOwnerThisPageReducerForSagas,\r\n  allUsers: allUserReducer,\r\n  dialog: dialogReducer,\r\n  listMessagesForCurrentDialog: listMessagesForCurrentDialogReducer,\r\n  pagination: paginationReducer,\r\n  checkBoxState: checkBoxStateReducer,\r\n  searchStringState: searchStringStateReducer,\r\n  loadingState: loadingStateReducer,\r\n  albumsState: albumsReducer\r\n})\r\n","import React, { useState, useEffect, useCallback } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../Redux/interfaces/user.interface\"\r\nimport { Message } from \"../../Redux/interfaces/message.interface\"\r\nimport { Dialog } from \"../../Redux/interfaces/dialog.interface\"\r\nimport openSocket from \"socket.io-client\"\r\nimport WindowDialogCSS from \"./WindowDialog.module.css\"\r\nimport { getAllMessagesCurrentDialogAction } from \"../../Redux/store/listMessagesForCurrentDialog/listMessagesForCurrentDialog.actions\"\r\nimport { getNewMessageForCurrentDialogAction } from \"../../Redux/store/listMessagesForCurrentDialog/listMessagesForCurrentDialog.actions\"\r\n// const socket = openSocket(\"http://localhost:8000/myDialogs\")\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport ImageIcon from \"@material-ui/icons/Image\"\r\n// const socket = openSocket(\"http://localhost:8000\", { reconnection: true })\r\n\r\ntype WindowDialogProps = {\r\n  user: User\r\n  dispatch: any\r\n  currentDialog: Dialog\r\n  listMessagesForCurrentDialog: [Message]\r\n}\r\n\r\nconst WindowDialog: React.FunctionComponent<WindowDialogProps> = ({\r\n  user,\r\n  dispatch,\r\n  currentDialog,\r\n  listMessagesForCurrentDialog\r\n}) => {\r\n  // const [listMessage, setListMessage]: any = useState([])\r\n  const [valueInput, setValueInput] = useState(\"\")\r\n\r\n  const getMessagesFromBD = useCallback(async () => {\r\n    dispatch(getAllMessagesCurrentDialogAction(currentDialog._id))\r\n  }, [currentDialog._id, dispatch])\r\n\r\n  const addMessageState = useCallback(\r\n    (message: any) => {\r\n      try {\r\n        // setListMessage((prevState:any)=>{\r\n        //   return [...prevState, message]\r\n        // })\r\n        dispatch(getNewMessageForCurrentDialogAction(message))\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  useEffect(() => {\r\n    // socket.on(\"receiveMessageDialog\", (message: Message) => {\r\n    //   addMessageState(message)\r\n    // })\r\n  }, [addMessageState])\r\n\r\n  const joinInRoom = useCallback(async () => {\r\n    // socket.emit(\"join\", currentDialog)\r\n    await getMessagesFromBD()\r\n    setValueInput(\"\")\r\n  }, [currentDialog, getMessagesFromBD])\r\n\r\n  useEffect(() => {\r\n    if (currentDialog._id !== undefined) {\r\n      joinInRoom()\r\n    }\r\n    return () => {\r\n      // socket.emit(\"end\")\r\n    }\r\n  }, [currentDialog._id, joinInRoom])\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // socket.removeAllListeners()\r\n    }\r\n  }, [])\r\n\r\n  function sendMessage(e: any) {\r\n    e.preventDefault()\r\n    const message = {\r\n      idDialog: currentDialog._id,\r\n      authorLogin: user.login,\r\n      authorId: user._id,\r\n      message: valueInput\r\n    }\r\n    // socket.emit(\"messageDialog\", message)\r\n    setValueInput(\"\")\r\n  }\r\n\r\n  const handlerClickButton = (e: any) => {\r\n    sendMessage(e)\r\n  }\r\n\r\n  const handlerChangeInput = (e: any) => {\r\n    setValueInput(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      component=\"div\"\r\n      display=\"grid\"\r\n      className={WindowDialogCSS.dialogs_page__dialog_page__window_dialog}\r\n    >\r\n      <Box\r\n        component=\"ul\"\r\n        display=\"grid\"\r\n        className={\r\n          WindowDialogCSS.dialogs_page__dialog_page__window_dialog__list_message\r\n        }\r\n      >\r\n        {listMessagesForCurrentDialog &&\r\n          listMessagesForCurrentDialog.length > 0 &&\r\n          listMessagesForCurrentDialog[0]._id !== undefined &&\r\n          listMessagesForCurrentDialog.map((message: Message) => (\r\n            <React.Fragment key={message._id}>\r\n              <ListItem\r\n                className={\r\n                  (message.authorId === user._id &&\r\n                    WindowDialogCSS.dialogs_page__message__left_side) ||\r\n                  WindowDialogCSS.dialogs_page__message__right_side\r\n                }\r\n              >\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <ImageIcon />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={`${message.authorLogin}`}\r\n                  secondary={`${message.message}`}\r\n                />\r\n              </ListItem>\r\n            </React.Fragment>\r\n          ))}\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        display=\"grid\"\r\n        className={\r\n          WindowDialogCSS.dialogs_page__add_dialogs__block_button_input\r\n        }\r\n      >\r\n        <TextField\r\n          id=\"outlined-full-width\"\r\n          variant=\"outlined\"\r\n          label=\"Input Message\"\r\n          className={WindowDialogCSS.dialogs_page__add_dialogs_input}\r\n          type=\"text\"\r\n          value={valueInput}\r\n          onChange={e => handlerChangeInput(e)}\r\n        />\r\n        <Button\r\n          className={WindowDialogCSS.dialogs_page__add_dialogs_button}\r\n          onClick={(e: any) => handlerClickButton(e)}\r\n          variant=\"outlined\"\r\n          component=\"button\"\r\n          disabled={currentDialog._id === undefined && true}\r\n        >\r\n          {currentDialog._id === undefined ? \"Chose Dialog\" : \"Send Message\"}\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.common.user,\r\n  currentDialog: state.dialog.currentDialog,\r\n  listMessagesForCurrentDialog:\r\n    state.listMessagesForCurrentDialog.listMessagesForCurrentDialog\r\n})\r\n\r\nexport default connect(mapStateToProps)(WindowDialog)\r\n\r\n// var element = document.getElementById(\"yourDivID\");\r\n// element.scrollTop = element.scrollHeight;\r\n\r\n// \"preserveNullAndEmptyArrays\": true\r\n\r\n// white-space: pre-wrap;\r\n// word-break: break-word\r\n","import React, { useState, useEffect, useCallback } from \"react\"\r\nimport PanelDialogsCSS from \"./PanelDialogs.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { User } from \"../../Redux/interfaces/user.interface\"\r\nimport { Dialog } from \"../../Redux/interfaces/dialog.interface\"\r\nimport { LoadingState } from \"../../shared/constants/user-from-view-mode.enum\"\r\nimport List from \"@material-ui/core/List\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport { currentDialogAction } from \"../../Redux/store/dialogs/dialogs.actions\"\r\nimport { getAllUsersForSagasAction } from \"../../Redux/store/allUsers/allUsers.actions\"\r\nimport { getAllDialogsByUserIdAction } from \"../../Redux/store/dialogs/dialogs.actions\"\r\nimport { addDialogAction } from \"../../Redux/store/dialogs/dialogs.actions\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Box from \"@material-ui/core/Box\"\r\n\r\ntype PanelDialogsProps = {\r\n  user: User\r\n  dispatch: any\r\n  allUsers: [User]\r\n  currentDialog: Dialog\r\n  listDialogs: [Dialog]\r\n}\r\n\r\nconst PanelDialogs: React.FunctionComponent<PanelDialogsProps> = ({\r\n  user,\r\n  dispatch,\r\n  allUsers,\r\n  currentDialog,\r\n  listDialogs\r\n}) => {\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  const [stateLoading, setStateLoading] = useState(LoadingState.loaded)\r\n  const [flagModalWindow, setFlagModalWindow] = useState(false)\r\n\r\n  const getListDialogs = useCallback(async () => {\r\n    if (user._id) {\r\n      dispatch(getAllDialogsByUserIdAction(user._id))\r\n      if (allUsers[0]._id === undefined)\r\n        dispatch(getAllUsersForSagasAction(user._id))\r\n    }\r\n  }, [allUsers, dispatch, user._id])\r\n\r\n  useEffect(() => {\r\n    getListDialogs()\r\n  }, [getListDialogs, user])\r\n\r\n  const handlerClickButton = () => {\r\n    setFlagModalWindow(!flagModalWindow)\r\n    if (flagModalWindow) dispatch(getAllUsersForSagasAction(user._id))\r\n  }\r\n\r\n  async function sendDialog(\r\n    userId: String,\r\n    thisUserId: String,\r\n    thisUserLogin: String\r\n  ) {\r\n    dispatch(\r\n      addDialogAction({\r\n        dialogName: thisUserLogin,\r\n        members: [userId, thisUserId]\r\n      })\r\n    )\r\n    getListDialogs()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {stateLoading === \"loading\" && <h1>Ожидайте ответа</h1>}\r\n      {stateLoading === \"loaded\" && (\r\n        <Box\r\n          component=\"div\"\r\n          display=\"grid\"\r\n          className={PanelDialogsCSS.dialogs_page__rules_dialogs}\r\n        >\r\n          <List\r\n            className={\r\n              PanelDialogsCSS.dialogs_page__rules_dialogs__list_dialogs\r\n            }\r\n          >\r\n            {(listDialogs.length > 0 &&\r\n              listDialogs[0]._id &&\r\n              !flagModalWindow &&\r\n              listDialogs.map((dialog: any) => (\r\n                <ListItem\r\n                  key={dialog._id}\r\n                  button\r\n                  onClick={() => dispatch(currentDialogAction(dialog))}\r\n                >\r\n                  <ListItemAvatar>\r\n                    <Avatar\r\n                      alt={`Avatar n°${dialog._id}`}\r\n                      src={\r\n                        (dialog.members.avatar &&\r\n                          `http://strawberry-tart-41911.herokuapp.com/images/users/${dialog.members._id}/${dialog.members.avatar}`) ||\r\n                        `http://strawberry-tart-41911.herokuapp.com/images/pattern-avatar.jpg`\r\n                      }\r\n                    />\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    id={dialog._id}\r\n                    primary={`${dialog.members.login}`}\r\n                  />\r\n                  {/* <Divider variant=\"inset\" component=\"li\" />             */}\r\n                </ListItem>\r\n              ))) ||\r\n              (allUsers.length > 0 &&\r\n                flagModalWindow &&\r\n                allUsers.map((secondUser: any) => (\r\n                  <ListItem\r\n                    key={secondUser._id}\r\n                    button\r\n                    onClick={() =>\r\n                      sendDialog(user._id, secondUser._id, secondUser.login)\r\n                    }\r\n                  >\r\n                    <ListItemAvatar>\r\n                      <Avatar\r\n                        alt={`Avatar n°${secondUser._id}`}\r\n                        src={\r\n                          (secondUser.avatar &&\r\n                            `http://strawberry-tart-41911.herokuapp.com/images/users/${secondUser._id}/${secondUser.avatar}`) ||\r\n                          `http://strawberry-tart-41911.herokuapp.com/images/pattern-avatar.jpg`\r\n                        }\r\n                      />\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      id={secondUser._id}\r\n                      primary={`${secondUser.login}`}\r\n                    />\r\n                    {/* <Divider variant=\"inset\" component=\"li\" />          */}\r\n                  </ListItem>\r\n                )))}\r\n          </List>\r\n          <Button\r\n            className={PanelDialogsCSS.dialogs_page__add_dialogs_button}\r\n            variant=\"outlined\"\r\n            component=\"button\"\r\n            onClick={() => handlerClickButton()}\r\n          >\r\n            {(!flagModalWindow && \"Add Dialog\") ||\r\n              (flagModalWindow && \"Menu Dialogs\")}\r\n          </Button>\r\n        </Box>\r\n      )}\r\n      {stateLoading === \"notFound\" && <h1>not found</h1>}\r\n      {stateLoading === \"error\" && <h1>ошибка</h1>}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.common.user,\r\n  allUsers: state.allUsers.allUsers,\r\n  currentDialog: state.dialog.currentDialog,\r\n  listDialogs: state.dialog.allDialogs\r\n})\r\n\r\nexport default connect(mapStateToProps)(PanelDialogs)\r\n","import React from \"react\"\r\nimport DialogsPageCSS from \"./DialogsPage.module.css\"\r\nimport WindowDialog from \"../../components/WindowDialog/WindowDialog\"\r\nimport PanelDialogs from \"../../components/PanelDialogs/PanelDialogs\"\r\nimport Box from \"@material-ui/core/Box\"\r\n\r\nconst DialogsPage: React.FunctionComponent<any> = () => {\r\n  return (\r\n    <Box\r\n      component=\"div\"\r\n      display=\"grid\"\r\n      // p={1}\r\n      // m={1}\r\n      // bgcolor=\"background.paper\"\r\n      className={DialogsPageCSS.dialogs_page}\r\n    >\r\n      <PanelDialogs />\r\n      <WindowDialog />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default DialogsPage\r\n","import { call, put, takeEvery } from \"redux-saga/effects\"\r\nimport Service from \"../../../services/service-user\"\r\nimport {\r\n  ActionTypes,\r\n  setUserOwnerThisPageActionForSagas,\r\n  getFailureAction\r\n} from \"./userOwnerThisPage.actions\"\r\n\r\nfunction* setUserOwnerThisPage(actions: any) {\r\n  try {\r\n    const userOwnerThisPage = yield call(Service.getUserByID, actions.payload)\r\n    yield put(setUserOwnerThisPageActionForSagas(userOwnerThisPage))\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nexport default function* getUserOwnerThisPageForSaga() {\r\n  yield takeEvery(\r\n    ActionTypes.GET_USER_OWNER_THIS_PAGE_FOR_SAGAS,\r\n    setUserOwnerThisPage\r\n  )\r\n}\r\n","const axios = require(\"axios\")\r\n\r\nexport default class ServiceMessage {\r\n  static interceptor = axios.interceptors.request.use(\r\n    function(config: any) {\r\n      const token = localStorage.getItem(\"token\")\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`\r\n      }\r\n      return config\r\n    },\r\n    function(error: string) {\r\n      return Promise.reject(error)\r\n    }\r\n  )\r\n\r\n  static getAllMessagesByIdDialog = async (idDialog: string) => {\r\n    try {\r\n      const request = await axios.get(\r\n        `http://strawberry-tart-41911.herokuapp.com/messages/${idDialog}`\r\n      )\r\n      return request.data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n}\r\n","import { put, takeEvery } from \"redux-saga/effects\"\r\nimport ServiceMessage from \"../../../services/service-message\"\r\nimport {\r\n  ActionTypes,\r\n  putInStoreAllMessagesCurrentDialogAction,\r\n  putInStoreNewMessageForCurrentDialogAction,\r\n  getFailureAction\r\n} from \"./listMessagesForCurrentDialog.actions\"\r\n\r\nfunction* putInStoreAllMessagesCurrentDialog(actions: any) {\r\n  try {\r\n    const list = yield ServiceMessage.getAllMessagesByIdDialog(actions.payload)\r\n    yield put(putInStoreAllMessagesCurrentDialogAction(list))\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* putInStoreNewMessageForCurrentDialog2(actions: any) {\r\n  try {\r\n    console.log(actions.payload)\r\n    yield put(putInStoreNewMessageForCurrentDialogAction(actions.payload))\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nexport default function* putInStoreNewMessageForCurrentDialogSaga() {\r\n  yield takeEvery(\r\n    ActionTypes.GET_ALL_MESSAGES_FOR_CURRENT_DIALOG,\r\n    putInStoreAllMessagesCurrentDialog\r\n  )\r\n  yield takeEvery(\r\n    ActionTypes.GET_NEW_MESSAGE_FOR_CURRENT_DIALOG,\r\n    putInStoreNewMessageForCurrentDialog2\r\n  )\r\n}\r\n","import { put, takeEvery } from \"redux-saga/effects\"\r\nimport Service from \"../../../services/service-user\"\r\nimport ServiceFriends from \"../../../services/service-friend\"\r\nimport {\r\n  ActionTypes,\r\n  putAllUsersInStateAction,\r\n  setAllUsersWithPaginationSearchFilterAction,\r\n  setFriendsForUserAction,\r\n  getFailureAction\r\n} from \"./allUsers.actions\"\r\n\r\nfunction* putAllUsersInState(actions: any) {\r\n  try {\r\n    let list\r\n    if (actions.payload === \"\") list = []\r\n    else list = yield Service.getUserWithSubscriptionsById(actions.payload)\r\n\r\n    yield put(putAllUsersInStateAction(list))\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* setAllUsersWithPaginationSearchFilter(actions: any) {\r\n  try {\r\n    const list = yield Service.getUserAfterPaginationAndSearchAndFilter(\r\n      actions.payload\r\n    )\r\n\r\n    yield put(setAllUsersWithPaginationSearchFilterAction(list))\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* setFriendsForUser(actions: any) {\r\n  try {   \r\n    const list = yield ServiceFriends.getArrayFriendsByIdUser(actions.payload)\r\n    yield put(setFriendsForUserAction(list))\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nexport default function* putInStoreAllUsersSaga() {\r\n  yield takeEvery(ActionTypes.GET_ALL_USERS_FOR_SAGAS, putAllUsersInState)\r\n  yield takeEvery(\r\n    ActionTypes.GET_ALL_USERS_WITH_PAGINATION_SEARCH_FILTER,\r\n    setAllUsersWithPaginationSearchFilter\r\n  )\r\n  yield takeEvery(ActionTypes.GET_ALL_FRIENDS_BY_USER_ID, setFriendsForUser)\r\n}\r\n","import { put, takeEvery } from \"redux-saga/effects\"\r\nimport Service from \"../../../services/service-user\"\r\nimport { LoadingState } from \"../../../shared/constants/user-from-view-mode.enum\"\r\nimport {setLoadingState} from '../loading/loading.actions'\r\n\r\nimport {\r\n    ActionTypes,\r\n    setUserLoginInStoreAction, \r\n    userLogOutAction,\r\n    getFailureAction\r\n  } from \"./userLogin.actions\"\r\n\r\n  function* setUserLoginInStore() {\r\n    try {       \r\n      yield put(setLoadingState(LoadingState.loading))       \r\n      const userLog = yield Service.getUserByToken()      \r\n      if(userLog._id) {\r\n        yield put(setUserLoginInStoreAction(userLog))\r\n        yield put(setLoadingState(LoadingState.loaded))\r\n      } else {\r\n        yield put(setLoadingState(LoadingState.notFound))\r\n      }  \r\n    } catch (e) {\r\n      yield put(setLoadingState(LoadingState.error))\r\n      yield put(getFailureAction(e))\r\n    }\r\n  }\r\n\r\n  function* setUserLogoutInStore(actions:any) {\r\n    try {       \r\n      yield Service.logOutAllDevices(actions.userId, actions.user)\r\n      yield put(userLogOutAction())\r\n      yield localStorage.removeItem(\"token\")\r\n    } catch (e) {    \r\n      yield put(getFailureAction(e))\r\n    }\r\n  }\r\n\r\n  export default function* userLoginSaga() {\r\n    yield takeEvery(\r\n      ActionTypes.GET_USER_LOGIN_FOR_SAGA,    \r\n      setUserLoginInStore\r\n    ); \r\n    yield takeEvery(\r\n      ActionTypes.GET_USER_FOR_LOGOUT,    \r\n      setUserLogoutInStore\r\n    );  \r\n  }","import { put, takeEvery } from \"redux-saga/effects\"\r\nimport Service from \"../../../services/service-user\"\r\nimport {userLogIn} from '../userLogin/userLogin.actions'\r\n\r\nimport {\r\n    ActionTypes,      \r\n    getFailureAction\r\n  } from \"./avatar.actions\"\r\n\r\n  function* setAvatar(actions:any) {\r\n    try { \r\n    const imgName = yield Service.setImgUser(\r\n            actions.payload.avatar,\r\n            actions.payload.userOwnerThisPage._id\r\n    )   \r\n      \r\n    yield Service.editUser(actions.payload.userOwnerThisPage._id, {\r\n        avatar: imgName,\r\n        password: \"\"\r\n    })\r\n    \r\n    if (actions.payload.userOwnerThisPage._id === actions.payload.userLogin._id && actions.payload.avatarForFront) {\r\n        const newUser = Object.assign({}, actions.payload.userOwnerThisPage, {\r\n          avatar: imgName\r\n        })\r\n        console.log(newUser)\r\n        yield put(userLogIn(newUser))\r\n    }\r\n\r\n    } catch (e) {      \r\n      yield put(getFailureAction(e))\r\n    }\r\n  }\r\n\r\n  export default function* avatarSaga() {\r\n    yield takeEvery(\r\n      ActionTypes.GET_AVATAR,    \r\n      setAvatar\r\n    );    \r\n  }\r\n  ","const axios = require(\"axios\")\r\n\r\nexport default class ServiceDialog {\r\n  static interceptor = axios.interceptors.request.use(\r\n    function(config: any) {\r\n      const token = localStorage.getItem(\"token\")\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`\r\n      }\r\n      return config\r\n    },\r\n    function(error: string) {\r\n      return Promise.reject(error)\r\n    }\r\n  )\r\n\r\n  static getAllDialogs = async () => {\r\n    try {\r\n      const request = await axios.get(\r\n        \"http://strawberry-tart-41911.herokuapp.com/dialogs/\"\r\n      )\r\n      return request.data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  static getAllDialogsById = async (id: string) => {\r\n    try {\r\n      // console.log(id)\r\n      const request = await axios.get(\r\n        `http://strawberry-tart-41911.herokuapp.com/dialogs/${id}`\r\n      )\r\n      return request.data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  static addDialog = async (body: {}) => {\r\n    console.log(body)\r\n    const response = await axios.post(\r\n      \"http://strawberry-tart-41911.herokuapp.com/dialogs/addDialog\",\r\n      body\r\n    )\r\n    return response.data\r\n  }\r\n}\r\n","import { put, takeEvery } from \"redux-saga/effects\"\r\nimport ServiceDialog from \"../../../services/service-dialog\"\r\n\r\nimport {\r\n  ActionTypes,\r\n  setAllDialogsByUserIdInStoreAction,\r\n  getFailureAction\r\n} from \"./dialogs.actions\"\r\n\r\nfunction* setAllDialogsByUserIdInStore(actions: any) {\r\n  try {\r\n    const listForRender = yield ServiceDialog.getAllDialogsById(actions.payload)\r\n    yield put(setAllDialogsByUserIdInStoreAction(listForRender))\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* addDialog(actions: any) {\r\n  try {\r\n    yield ServiceDialog.addDialog(actions.payload)\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nexport default function* dialogSaga() {\r\n  yield takeEvery(\r\n    ActionTypes.GET_ALL_DIALOGS_BY_USER_ID,\r\n    setAllDialogsByUserIdInStore\r\n  )\r\n  yield takeEvery(ActionTypes.ADD_DIALOG, addDialog)\r\n}\r\n","const axios = require(\"axios\")\r\n\r\nexport default class ServiceAlbums {\r\n  static interceptor = axios.interceptors.request.use(\r\n    function(config: any) {\r\n      const token = localStorage.getItem(\"token\")\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`\r\n      }\r\n      return config\r\n    },\r\n    function(error: string) {\r\n      return Promise.reject(error)\r\n    }\r\n  )\r\n\r\n  static getAllAlbums = async () => {\r\n    try {\r\n      const request = await axios.get(\r\n        \"http://strawberry-tart-41911.herokuapp.com/Albums/\"\r\n      )\r\n      return request.data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  static addAlbum = async (id: string) => {\r\n    const album = {\r\n      name: \"new album\",\r\n      ownerUser: id\r\n    }\r\n    const response = await axios.post(\r\n      `http://strawberry-tart-41911.herokuapp.com/albums/add`,\r\n      album\r\n    )\r\n    return response.data\r\n  }\r\n\r\n  static editAlbum = async (id: string, user: string) => {\r\n    try {\r\n      const request = await axios.put(\r\n        `http://strawberry-tart-41911.herokuapp.com/albums/update/${id}`,\r\n        user\r\n      )\r\n      return request.data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  static removeHandler = async (id: string) => {\r\n    try {\r\n      return await axios.delete(\r\n        `http://strawberry-tart-41911.herokuapp.com/albums/delete/${id}`\r\n      )\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  static getListPhotosByAlbumID = async (id: string) => {\r\n    try {\r\n      // console.log(id)\r\n      const response = await axios.get(\r\n        `http://strawberry-tart-41911.herokuapp.com/albums/withPhotos/${id}`\r\n      )\r\n      return response.data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n}\r\n","const axios = require(\"axios\")\r\n\r\nexport default class ServicePhotos {\r\n  static interceptor = axios.interceptors.request.use(\r\n    function(config: any) {\r\n      const token = localStorage.getItem(\"token\")\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`\r\n      }\r\n      return config\r\n    },\r\n    function(error: string) {\r\n      return Promise.reject(error)\r\n    }\r\n  )\r\n\r\n  static getPhotosById = async (userId: string) => {\r\n    try {\r\n      return await axios.get(\r\n        `http://strawberry-tart-41911.herokuapp.com/photos/${userId}`\r\n      )\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  static setImgUser = async (avatar: any) => {\r\n    const formData = new FormData()\r\n    for (let i = 0; i < avatar.length; i++) {\r\n      formData.append(\"multipleUser\", avatar[i])\r\n    }\r\n    const response = await axios.post(\r\n      `http://strawberry-tart-41911.herokuapp.com/public/multipleUserSafeFileIntoImages`,\r\n      formData\r\n    )\r\n    return response.data.fileNames\r\n  }\r\n\r\n  static addPhoto = async (idUser: string, arrayUrl: string) => {\r\n    for (let i = 0; i < arrayUrl.length; i++) {\r\n      const photo = {\r\n        name: `${arrayUrl[i]}`,\r\n        url: arrayUrl[i],\r\n        ownerUser: idUser\r\n      }\r\n      const response = await axios.post(\r\n        `http://strawberry-tart-41911.herokuapp.com/photos/add`,\r\n        photo\r\n      )\r\n      console.log(response)\r\n    }\r\n  }\r\n\r\n  static removeHandler = async (id: string) => {\r\n    try {\r\n      return await axios.delete(\r\n        `http://strawberry-tart-41911.herokuapp.com/photos/delete/${id}`\r\n      )\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  static addPhotoIntoAlbum = async (\r\n    idUser: string,\r\n    idAlbum: string,\r\n    arrayUrl: []\r\n  ) => {\r\n    let arrPhotoUrl: any = []\r\n    for (let i = 0; i < arrayUrl.length; i++) {\r\n      const photo = {\r\n        name: `${arrayUrl[i]}`,\r\n        url: arrayUrl[i],\r\n        ownerUser: idUser,\r\n        ownerAlbum: idAlbum\r\n      }\r\n      const response = await axios.post(\r\n        `http://strawberry-tart-41911.herokuapp.com/photos/addIntoAlbum`,\r\n        photo\r\n      )\r\n      arrPhotoUrl = arrPhotoUrl.concat(response.data.photo.url)\r\n    }\r\n    return arrPhotoUrl\r\n  }\r\n\r\n  static addPhotosIntoFsAndAlbum = async (\r\n    idUser: any,\r\n    idAlbum: string,\r\n    arrayFiles: any\r\n  ) => {\r\n    const formData = new FormData()\r\n    for (let i = 0; i < arrayFiles.length; i++) {\r\n      formData.append(\"multipleUser\", arrayFiles[i])\r\n    }\r\n    const response = await axios.post(\r\n      `http://strawberry-tart-41911.herokuapp.com/public/multipleUserSafeFileIntoImages/?idUser=${idUser}&idAlbum=${idAlbum}`,\r\n      formData\r\n    )\r\n    return response.data.fileNames\r\n  }\r\n}\r\n","import { put, takeEvery } from \"redux-saga/effects\"\r\nimport Service from \"../../../services/service-user\"\r\nimport ServiceAlbums from \"../../../services/service-album\"\r\nimport ServicePhotos from \"../../../services/service-photo\"\r\nimport { LoadingState } from \"../../../shared/constants/user-from-view-mode.enum\"\r\nimport { setLoadingStatePhotosInCurrentAlbumAction } from \"../loading/loading.actions\"\r\n\r\nimport {\r\n  ActionTypes,\r\n  getListAlbumsWithPhotosByUserIDAction,\r\n  setListAlbumsWithPhotosInStoreAction,\r\n  setListPhotosForCurrentAlbumAction,\r\n  getListPhotosByAlbumIdAction,\r\n  setListPhotosForUserAction,\r\n  getFailureAction\r\n} from \"./albums.action\"\r\n\r\nimport { getUserOwnerThisPageActionForSagas } from \"../userOwnerThisPage/userOwnerThisPage.actions\"\r\n\r\nfunction* setListAlbumsWithPhotosInStore(actions: any) {\r\n  try {\r\n    const listAlbums = yield Service.getListAlbumsWithPhotosByUserID(\r\n      actions.payload\r\n    )\r\n    yield put(setListAlbumsWithPhotosInStoreAction(listAlbums))\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* removeAlbum(actions: any) {\r\n  try {\r\n    yield ServiceAlbums.removeHandler(actions.payload.albumId)\r\n    yield put(getListAlbumsWithPhotosByUserIDAction(actions.payload.userId))\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* addAlbumByUserId(actions: any) {\r\n  try {\r\n    const data = yield ServiceAlbums.addAlbum(actions.payload.userId)\r\n    yield ServicePhotos.addPhotosIntoFsAndAlbum(\r\n      actions.payload.userId,\r\n      data.album._id,\r\n      actions.payload.arrayPhotos\r\n    )\r\n    yield put(getListAlbumsWithPhotosByUserIDAction(actions.payload.userId))\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* setListPhotosForCurrentAlbum(actions: any) {\r\n  try {\r\n    yield put(setLoadingStatePhotosInCurrentAlbumAction(LoadingState.loading))\r\n    const arrayAlbums = yield ServiceAlbums.getListPhotosByAlbumID(\r\n      actions.payload\r\n    )\r\n    if (arrayAlbums.length) {\r\n      yield put(getUserOwnerThisPageActionForSagas(arrayAlbums[0].ownerUser))\r\n      yield put(setListPhotosForCurrentAlbumAction(arrayAlbums[0].photos))\r\n      yield put(setLoadingStatePhotosInCurrentAlbumAction(LoadingState.loaded))\r\n    } else {\r\n      yield put(\r\n        setLoadingStatePhotosInCurrentAlbumAction(LoadingState.notFound)\r\n      )\r\n    }\r\n  } catch (e) {\r\n    yield put(setLoadingStatePhotosInCurrentAlbumAction(LoadingState.error))\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* addPhotosInCurrentAlbum(actions: any) {\r\n  try {\r\n    yield ServicePhotos.addPhotosIntoFsAndAlbum(\r\n      actions.payload.userOwnerThisPageId,\r\n      actions.payload.albumId,\r\n      actions.payload.arrayPhotos\r\n    )\r\n    yield put(getListPhotosByAlbumIdAction(actions.payload.albumId))\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* removePhotoFromCurrentAlbum(actions: any) {\r\n  try {\r\n    yield ServicePhotos.removeHandler(actions.payload.photoId)\r\n    yield put(getListPhotosByAlbumIdAction(actions.payload.albumId))\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nfunction* setListPhotosForUser(actions: any) {\r\n  try {\r\n    const arrayPhotos = yield ServicePhotos.getPhotosById(actions.payload)\r\n    yield put(setListPhotosForUserAction(arrayPhotos.data))\r\n  } catch (e) {\r\n    yield put(getFailureAction(e))\r\n  }\r\n}\r\n\r\nexport default function* albumsSaga() {\r\n  yield takeEvery(\r\n    ActionTypes.GET_LIST_ALBUMS_WITH_PHOTOS,\r\n    setListAlbumsWithPhotosInStore\r\n  )\r\n  yield takeEvery(ActionTypes.REMOVE_ALBUM, removeAlbum)\r\n  yield takeEvery(ActionTypes.ADD_ALBUM, addAlbumByUserId)\r\n  yield takeEvery(\r\n    ActionTypes.GET_LIST_PHOTOS_BY_ALBUM_ID,\r\n    setListPhotosForCurrentAlbum\r\n  )\r\n  yield takeEvery(\r\n    ActionTypes.ADD_PHOTOS_IN_CURRENT_ALBUM,\r\n    addPhotosInCurrentAlbum\r\n  )\r\n  yield takeEvery(\r\n    ActionTypes.REMOVE_PHOTO_FROM_CURRENT_ALBUM,\r\n    removePhotoFromCurrentAlbum\r\n  )\r\n  yield takeEvery(ActionTypes.GET_LIST_PHOTOS_BY_USER_ID, setListPhotosForUser)\r\n}\r\n","import React from \"react\"\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\r\nimport AllUsersPage from \"./pages/allUsersPage/allUsersPage\"\r\nimport UserInformationPage from \"./pages/userInformationPage/userInformationPage\"\r\nimport GetLoginPage from \"./pages/GetLoginPage/GetLoginPage\"\r\nimport GetLogUpPage from \"./pages/GetLogUpPage/GetLogUpPage\"\r\nimport { GetStartPage } from \"./pages/GetStartPage/GetStartPage\"\r\nimport Navbar from \"./components/Navbar/Navbar\"\r\nimport {\r\n  PrivateRoute,\r\n  defaultPrivateRouteProps\r\n} from \"./PrivateRoutes/PrivateRouteForUsers\"\r\nimport {\r\n  PrivateRouteForAdmins,\r\n  defaultPrivateRouteForAdminsProps\r\n} from \"./PrivateRoutes/PrivateRouteForAdmins\"\r\nimport GetAlbumByID from \"./pages/GetAlbumByID/GetAlbumByID\"\r\nimport PageFriends from \"./pages/pageFriends/pageFriends\"\r\nimport AllAlbumsPage from \"./pages/allAlbumsPage/allAlbumsPage\"\r\nimport AllPhotosPage from \"./pages/allPhotosPage/allPhotosPage\"\r\nimport NotFound from \"./pages/NotFoundPage/NotFound\"\r\nimport { AdminAllUsers } from \"./pages/AdminPages/AdminAllUser/AdminAllUser\"\r\nimport { UserEditInformation } from \"./pages/UserEditInformationPage/UserEditInformationPage\"\r\nimport { Provider } from \"react-redux\"\r\nimport rootReducer from \"./Redux/store\"\r\nimport DialogsPage from \"./pages/DialogsPage/DialogsPage\"\r\nimport { createStore, applyMiddleware } from \"redux\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport createSagaMiddleware from \"redux-saga\"\r\nimport getUserOwnerThisPageForSaga from \"./Redux/store/userOwnerThisPage/userOwnerThisPage.sagas\"\r\nimport putInStoreNewMessageforCurrentDialogSaga from \"./Redux/store/listMessagesForCurrentDialog/listMessagesForCurrentDialog.sagas\"\r\nimport putInStoreAllUsersSaga from \"./Redux/store/allUsers/allUsers.sagas\"\r\nimport userLoginSaga from \"./Redux/store/userLogin/userLogin.sagas\"\r\nimport avatarSaga from \"./Redux/store/avatar/avatar.sagas\"\r\nimport dialogSaga from \"./Redux/store/dialogs/dialogs.sagas\"\r\nimport albumsSaga from \"./Redux/store/albums/albums.sagas\"\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools({ trace: true, traceLimit: 25 })(\r\n  applyMiddleware(sagaMiddleware)\r\n  )\r\n)\r\n\r\nsagaMiddleware.run(getUserOwnerThisPageForSaga)\r\nsagaMiddleware.run(putInStoreNewMessageforCurrentDialogSaga)\r\nsagaMiddleware.run(putInStoreAllUsersSaga)\r\nsagaMiddleware.run(userLoginSaga)\r\nsagaMiddleware.run(avatarSaga)\r\nsagaMiddleware.run(dialogSaga)\r\nsagaMiddleware.run(albumsSaga)\r\n\r\nexport const App: React.FC = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <div className=\"wrapper\">\r\n          <Navbar />\r\n          <main className=\"main\">\r\n            <Switch>\r\n              <Route component={GetStartPage} path=\"/\" exact />\r\n              <Route component={GetLoginPage} path=\"/LogIn\" exact />\r\n              <Route component={GetLogUpPage} path=\"/SignUp\" exact />\r\n              <PrivateRoute\r\n                {...defaultPrivateRouteProps}\r\n                component={DialogsPage}\r\n                path=\"/:id/dialogs\"\r\n                exact\r\n              />\r\n              <PrivateRoute\r\n                {...defaultPrivateRouteProps}\r\n                component={AllUsersPage}\r\n                path=\"/user/allUsers\"\r\n                exact\r\n              />\r\n              <PrivateRoute\r\n                {...defaultPrivateRouteProps}\r\n                component={UserInformationPage}\r\n                path=\"/user/profile/:id\"\r\n                exact\r\n              />\r\n              <PrivateRoute\r\n                {...defaultPrivateRouteProps}\r\n                component={PageFriends}\r\n                path=\"/user/:id/friends\"\r\n                exact\r\n              />\r\n              <PrivateRoute\r\n                {...defaultPrivateRouteProps}\r\n                component={GetAlbumByID}\r\n                path=\"/user/:id/album\"\r\n                exact\r\n              />\r\n              <PrivateRoute\r\n                {...defaultPrivateRouteProps}\r\n                component={AllAlbumsPage}\r\n                path=\"/user/:id/allAlbums\"\r\n                exact\r\n              />\r\n              <PrivateRoute\r\n                {...defaultPrivateRouteProps}\r\n                component={AllPhotosPage}\r\n                path=\"/user/:id/allPhotos\"\r\n                exact\r\n              />\r\n              <PrivateRoute\r\n                {...defaultPrivateRouteProps}\r\n                component={UserEditInformation}\r\n                path=\"/user/:id/edit\"\r\n                exact\r\n              />\r\n              <PrivateRouteForAdmins\r\n                {...defaultPrivateRouteForAdminsProps}\r\n                component={AdminAllUsers}\r\n                path=\"/admin/all\"\r\n                exact\r\n              />\r\n              <PrivateRouteForAdmins\r\n                {...defaultPrivateRouteForAdminsProps}\r\n                component={AdminAllUsers}\r\n                path=\"/admin/:id\"\r\n                exact\r\n              />\r\n              <Route path=\"*\" component={NotFound} />\r\n            </Switch>\r\n          </main>\r\n        </div>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    )\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\")\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\")\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport { App } from \"./App\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_page__dialog_page__window_dialog\":\"WindowDialog_dialogs_page__dialog_page__window_dialog__2md4z\",\"dialogs_page__dialog_page__window_dialog__list_message\":\"WindowDialog_dialogs_page__dialog_page__window_dialog__list_message__NZuUx\",\"dialogs_page__add_dialogs__block_button_input\":\"WindowDialog_dialogs_page__add_dialogs__block_button_input__i9Gfq\",\"dialogs_page__add_dialogs_input\":\"WindowDialog_dialogs_page__add_dialogs_input__TbP7u\",\"dialogs_page__add_dialogs_button\":\"WindowDialog_dialogs_page__add_dialogs_button__1YGXK\",\"dialogs_page__message__left_side\":\"WindowDialog_dialogs_page__message__left_side__3CdzN\",\"dialogs_page__message__right_side\":\"WindowDialog_dialogs_page__message__right_side__2zSzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__all_users__card_user__delete\":\"UserCard_container__all_users__card_user__delete__1C73J\",\"container__all_users__card_user\":\"UserCard_container__all_users__card_user__2gLCl\",\"all_users__card_user__login\":\"UserCard_all_users__card_user__login__3RPR-\",\"all_users__card_user__friends\":\"UserCard_all_users__card_user__friends__mCZNI\",\"all_users__card_user__role\":\"UserCard_all_users__card_user__role__LRSnR\",\"all_users__card_user__button\":\"UserCard_all_users__card_user__button__2eszS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoAlbum__photoCard_block__card\":\"PhotoCard_photoAlbum__photoCard_block__card__14IZo\",\"photoAlbum__photoCard_block__card__photo\":\"PhotoCard_photoAlbum__photoCard_block__card__photo__2158T\",\"photoAlbum__photoCard_block__card__actions\":\"PhotoCard_photoAlbum__photoCard_block__card__actions__1Agg5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar_container\":\"Navbar_navbar_container__s4yiC\",\"navbar__avatar\":\"Navbar_navbar__avatar__3RvcY\",\"navbar__avatar__brand_logo\":\"Navbar_navbar__avatar__brand_logo__nUmva\",\"brand-logo\":\"Navbar_brand-logo__3_KuX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main__user_profile__album_block\":\"GetAlbumByID_main__user_profile__album_block__2wtjC\"};"],"sourceRoot":""}